<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>数据挖掘入门(Datawhale)</title>
    <url>/zh-cn/posts/c4304787-bbc2-11eb-8847-0772b2ac4cf2/</url>
    <content><![CDATA[<p>Very basic introduction to data mining.</p>
<a id="more"></a>
<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><h1 id="Exploratory-Data-Analysis"><a href="#Exploratory-Data-Analysis" class="headerlink" title="Exploratory-Data-Analysis"></a>Exploratory-Data-Analysis</h1><h2 id="Exploratory-Data-Analysis-1"><a href="#Exploratory-Data-Analysis-1" class="headerlink" title="Exploratory Data Analysis"></a>Exploratory Data Analysis</h2><h3 id="What-is-EDA"><a href="#What-is-EDA" class="headerlink" title="What is EDA"></a>What is EDA</h3><p>EDA is like detective work: Exploratory data analysis is an attitude, a state of flexibility, a willingness to look for those things that we believe are not there, as well as those that we believe to be there.</p>
<p>EDA is active and incisive: Exploratory data analysis is actively incisive rather than passively descriptive, with real emphasis on the discovery of the unexpected.</p>
<h3 id="Philosophy-of-EDA"><a href="#Philosophy-of-EDA" class="headerlink" title="Philosophy of EDA"></a>Philosophy of EDA</h3><ul>
<li>Confirm understanding of the data</li>
<li>Keep an open mind and be willing to find something surprising</li>
<li>Iterate procedures below<ul>
<li>Uncover new aspects of our data</li>
<li>Re-examine our understanding of the data</li>
<li>Continue exploration</li>
</ul>
</li>
</ul>
<h3 id="To-Carry-Out-EDA"><a href="#To-Carry-Out-EDA" class="headerlink" title="To Carry Out EDA"></a>To Carry Out EDA</h3><p><strong>Connect what you find to the question and context</strong></p>
<ul>
<li>Plot data in multiple ways to get different insights</li>
<li>Transform variables to symmetrize distributions</li>
<li>Transform to straighten relationships</li>
<li>Derive new variables</li>
<li>Consider effect of other variables on distributions &amp;<br>elationships</li>
</ul>
<h3 id="Something-about-Basic-Data-Visualize"><a href="#Something-about-Basic-Data-Visualize" class="headerlink" title="Something about Basic Data Visualize"></a>Something about Basic Data Visualize</h3><h4 id="Features-Seen-in-a-Visual-Summary"><a href="#Features-Seen-in-a-Visual-Summary" class="headerlink" title="Features Seen in a Visual Summary"></a>Features Seen in a Visual Summary</h4><ul>
<li>Mode(s) - values concentrate around particular points</li>
<li>Symmetry – skew left, symmetric, skew right distribution of values about center</li>
<li>Tails - long, short, normal (what expect for normal distribution)</li>
<li>Gaps - regions where no values observed</li>
<li>Outliers - unusually large/small values</li>
</ul>
<h4 id="Choose-Proper-Charts"><a href="#Choose-Proper-Charts" class="headerlink" title="Choose Proper Charts"></a>Choose Proper Charts</h4><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-Chart-Suggestion-ENG.jpg" alt="Chart-Suggestion(ENG)"></p>
<h2 id="Practice"><a href="#Practice" class="headerlink" title="Practice"></a>Practice</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> pandas_profiling <span class="keyword">as</span> pdpf</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sbn</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> missingno <span class="keyword">as</span> msno</span><br><span class="line"><span class="keyword">import</span> pivottablejs</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lightgbm <span class="keyword">as</span> lgb</span><br><span class="line"><span class="keyword">import</span> xgboost <span class="keyword">as</span> xgb</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA, FastICA, FactorAnalysis, SparsePCA</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV, cross_val_score, StratifiedKFold, train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error, mean_absolute_error</span><br><span class="line"></span><br><span class="line">os.chdir(<span class="string">r&quot;D:\Tianchi&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Sta_inf</span>(<span class="params">data</span>):</span></span><br><span class="line">    print(<span class="string">&#x27;-&#x27;</span>*<span class="number">20</span> + <span class="string">&#x27;Statistic Info&#x27;</span> + <span class="string">&#x27;-&#x27;</span>*<span class="number">20</span> +<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;_min =\n&#x27;</span>,np.<span class="built_in">min</span>(data))</span><br><span class="line">    print(<span class="string">&#x27;_max =\n&#x27;</span>,np.<span class="built_in">max</span>(data))</span><br><span class="line">    print(<span class="string">&#x27;_mean =\n&#x27;</span>,np.mean(data))</span><br><span class="line">    print(<span class="string">&#x27;_ptp =\n&#x27;</span>,np.ptp(data))</span><br><span class="line">    print(<span class="string">&#x27;_std =\n&#x27;</span>,np.std(data))</span><br><span class="line">    print(<span class="string">&#x27;_var =\n&#x27;</span>,np.var(data))</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27; 数据含义</span></span><br><span class="line"><span class="string">SaleID 	交易ID，唯一编码</span></span><br><span class="line"><span class="string">name 	汽车交易名称，已脱敏</span></span><br><span class="line"><span class="string">regDate 	汽车注册日期，例如20160101，2016年01月01日</span></span><br><span class="line"><span class="string">model 	车型编码，已脱敏</span></span><br><span class="line"><span class="string">brand 	汽车品牌，已脱敏</span></span><br><span class="line"><span class="string">bodyType 	车身类型：豪华轿车：0，微型车：1，厢型车：2，大巴车：3，敞篷车：4，双门汽车：5，商务车：6，搅拌车：7</span></span><br><span class="line"><span class="string">fuelType 	燃油类型：汽油：0，柴油：1，液化石油气：2，天然气：3，混合动力：4，其他：5，电动：6</span></span><br><span class="line"><span class="string">gearbox 	变速箱：手动：0，自动：1</span></span><br><span class="line"><span class="string">power 	发动机功率：范围 [ 0, 600 ]</span></span><br><span class="line"><span class="string">kilometer 	汽车已行驶公里，单位万km</span></span><br><span class="line"><span class="string">notRepairedDamage 	汽车有尚未修复的损坏：是：0，否：1</span></span><br><span class="line"><span class="string">regionCode 	地区编码，已脱敏</span></span><br><span class="line"><span class="string">seller 	销售方：个体：0，非个体：1</span></span><br><span class="line"><span class="string">offerType 	报价类型：提供：0，请求：1</span></span><br><span class="line"><span class="string">creatDate 	汽车上线时间，即开始售卖时间</span></span><br><span class="line"><span class="string">price 	二手车交易价格（预测目标）</span></span><br><span class="line"><span class="string">v系列特征 	匿名特征，包含v0-14在内15个匿名特征</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_train = pd.read_csv(<span class="string">r&#x27;data/used_car_train_20200313.csv&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>, sep=<span class="string">&#x27; &#x27;</span>, )</span><br><span class="line">data_test = pd.read_csv(<span class="string">r&#x27;data/used_car_testA_20200313.csv&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>, sep=<span class="string">&#x27; &#x27;</span>, )</span><br><span class="line">data_train.info()</span><br><span class="line">print(<span class="string">&#x27;-&#x27;</span>*<span class="number">20</span>)</span><br><span class="line">print(data_train.head())</span><br><span class="line">print(<span class="string">&#x27;-&#x27;</span>*<span class="number">20</span>)</span><br><span class="line">print(data_train.describe().iloc[:,<span class="number">0</span>:<span class="number">4</span>])</span><br></pre></td></tr></table></figure>
<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;
RangeIndex: 150000 entries, 0 to 149999
Data columns (total 31 columns):
SaleID               150000 non-null int64
name                 150000 non-null int64
regDate              150000 non-null int64
model                149999 non-null float64
brand                150000 non-null int64
bodyType             145494 non-null float64
fuelType             141320 non-null float64
gearbox              144019 non-null float64
power                150000 non-null int64
kilometer            150000 non-null float64
notRepairedDamage    150000 non-null object
regionCode           150000 non-null int64
seller               150000 non-null int64
offerType            150000 non-null int64
creatDate            150000 non-null int64
price                150000 non-null int64
v_0                  150000 non-null float64
v_1                  150000 non-null float64
v_2                  150000 non-null float64
v_3                  150000 non-null float64
v_4                  150000 non-null float64
v_5                  150000 non-null float64
v_6                  150000 non-null float64
v_7                  150000 non-null float64
v_8                  150000 non-null float64
v_9                  150000 non-null float64
v_10                 150000 non-null float64
v_11                 150000 non-null float64
v_12                 150000 non-null float64
v_13                 150000 non-null float64
v_14                 150000 non-null float64
dtypes: float64(20), int64(10), object(1)
memory usage: 35.5+ MB
--------------------
   SaleID    name   regDate  model  brand  bodyType  fuelType  gearbox  power  \
0       0     736  20040402   30.0      6       1.0       0.0      0.0     60   
1       1    2262  20030301   40.0      1       2.0       0.0      0.0      0   
2       2   14874  20040403  115.0     15       1.0       0.0      0.0    163   
3       3   71865  19960908  109.0     10       0.0       0.0      1.0    193   
4       4  111080  20120103  110.0      5       1.0       0.0      0.0     68   

   kilometer  ...       v_5       v_6       v_7       v_8       v_9      v_10  \
0       12.5  ...  0.235676  0.101988  0.129549  0.022816  0.097462 -2.881803   
1       15.0  ...  0.264777  0.121004  0.135731  0.026597  0.020582 -4.900482   
2       12.5  ...  0.251410  0.114912  0.165147  0.062173  0.027075 -4.846749   
3       15.0  ...  0.274293  0.110300  0.121964  0.033395  0.000000 -4.509599   
4        5.0  ...  0.228036  0.073205  0.091880  0.078819  0.121534 -1.896240   

       v_11      v_12      v_13      v_14  
0  2.804097 -2.420821  0.795292  0.914762  
1  2.096338 -1.030483 -1.722674  0.245522  
2  1.803559  1.565330 -0.832687 -0.229963  
3  1.285940 -0.501868 -2.438353 -0.478699  
4  0.910783  0.931110  2.834518  1.923482  

[5 rows x 31 columns]
--------------------
              SaleID           name       regDate          model
count  150000.000000  150000.000000  1.500000e+05  149999.000000
mean    74999.500000   68349.172873  2.003417e+07      47.129021
std     43301.414527   61103.875095  5.364988e+04      49.536040
min         0.000000       0.000000  1.991000e+07       0.000000
25%     37499.750000   11156.000000  1.999091e+07      10.000000
50%     74999.500000   51638.000000  2.003091e+07      30.000000
75%    112499.250000  118841.250000  2.007111e+07      66.000000
max    149999.000000  196812.000000  2.015121e+07     247.000000
</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">col_num_train = data_train.select_dtypes(exclude=<span class="string">&#x27;object&#x27;</span>).columns</span><br><span class="line">print(col_num_train)</span><br><span class="line">col_cat_train = data_train.select_dtypes(include=<span class="string">&#x27;object&#x27;</span>).columns</span><br><span class="line">print(col_cat_train)</span><br><span class="line"></span><br><span class="line">col_num_test = data_test.select_dtypes(exclude=<span class="string">&#x27;object&#x27;</span>).columns</span><br><span class="line">col_cat_test = data_test.select_dtypes(include=<span class="string">&#x27;object&#x27;</span>).columns</span><br></pre></td></tr></table></figure>
<pre><code>Index([&#39;SaleID&#39;, &#39;name&#39;, &#39;regDate&#39;, &#39;model&#39;, &#39;brand&#39;, &#39;bodyType&#39;, &#39;fuelType&#39;,
       &#39;gearbox&#39;, &#39;power&#39;, &#39;kilometer&#39;, &#39;regionCode&#39;, &#39;seller&#39;, &#39;offerType&#39;,
       &#39;creatDate&#39;, &#39;price&#39;, &#39;v_0&#39;, &#39;v_1&#39;, &#39;v_2&#39;, &#39;v_3&#39;, &#39;v_4&#39;, &#39;v_5&#39;, &#39;v_6&#39;,
       &#39;v_7&#39;, &#39;v_8&#39;, &#39;v_9&#39;, &#39;v_10&#39;, &#39;v_11&#39;, &#39;v_12&#39;, &#39;v_13&#39;, &#39;v_14&#39;],
      dtype=&#39;object&#39;)
Index([&#39;notRepairedDamage&#39;], dtype=&#39;object&#39;)
</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">featured_cols = [col <span class="keyword">for</span> col <span class="keyword">in</span> col_num_train <span class="keyword">if</span> <span class="string">&#x27;Type&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> col\</span><br><span class="line">                 <span class="keyword">and</span> col <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;SaleID&#x27;</span>,<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;regDate&#x27;</span>,<span class="string">&#x27;creatDate&#x27;</span>,<span class="string">&#x27;price&#x27;</span>,<span class="string">&#x27;model&#x27;</span>,<span class="string">&#x27;brand&#x27;</span>,<span class="string">&#x27;regionCode&#x27;</span>,<span class="string">&#x27;seller&#x27;</span>]]</span><br><span class="line">data_train_X = data_train[featured_cols]</span><br><span class="line">data_train_Y = data_train[<span class="string">&#x27;price&#x27;</span>]</span><br><span class="line">data_train_X.fillna(-<span class="number">1</span>)</span><br><span class="line">data_train_Y.fillna(-<span class="number">1</span>)</span><br><span class="line">data_test_X = data_test[featured_cols]</span><br><span class="line">print(<span class="string">&#x27;X train shape =&#x27;</span>,data_train_X.shape)</span><br><span class="line">print(<span class="string">&#x27;X test shape =&#x27;</span>,data_test_X.shape)</span><br></pre></td></tr></table></figure>
<pre><code>X train shape = (150000, 18)
X test shape = (50000, 18)
</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Sta_inf(data_train_Y)</span><br><span class="line">plt.hist(data_train_Y,bins=<span class="number">100</span>, log=<span class="literal">False</span>)</span><br><span class="line">plt.show()</span><br><span class="line">plt.hist(data_train_Y,bins=<span class="number">100</span>, log=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br><span class="line">plt.close()</span><br></pre></td></tr></table></figure>
<pre><code>--------------------Statistic Info--------------------

_min =
 11
_max =
 99999
_mean =
 5923.327333333334
_ptp =
 99988
_std =
 7501.973469876635
_var =
 56279605.942732885
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-output_6_1.png" alt=""></p>
<p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-output_6_2.png" alt=""></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">msno.matrix(data_train, labels=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-output_7_1.png" alt=""></p>
<h1 id="Feature-Engineering"><a href="#Feature-Engineering" class="headerlink" title="Feature Engineering"></a>Feature Engineering</h1><h2 id="Feature-Engineering-1"><a href="#Feature-Engineering-1" class="headerlink" title="Feature Engineering"></a>Feature Engineering</h2><h3 id="What-is-FE"><a href="#What-is-FE" class="headerlink" title="What is FE"></a>What is FE</h3><p>特征工程的主要目的还是在于将数据转换为能更好地表示潜在问题的特征，从而提高机器学习的性能。比如，异常值处理是为了去除噪声，填补缺失值可以加入先验知识等。</p>
<p>特征构造也属于特征工程的一部分，其目的是为了增强数据的表达。</p>
<h3 id="FE-BASIC"><a href="#FE-BASIC" class="headerlink" title="FE BASIC"></a>FE BASIC</h3><p>有些数据的特征是匿名特征，这导致我们并不清楚特征相互直接的关联性，这时我们就只有单纯基于特征进行处理，比如装箱，groupby，agg 等这样一些操作进行一些特征统计，此外还可以对特征进行进一步的 log，exp 等变换，或者对多个特征进行四则运算、多项式组合等然后进行筛选。由于特性的匿名性其实限制了很多对于特征的处理，当然有些时候用 NN 去提取一些特征也会达到意想不到的良好效果。</p>
<p>对于知道特征含义的特征工程，特别是在工业类型比赛中，会基于信号处理，频域提取，丰度，偏度等构建更为有实际意义的特征，这就是结合背景的特征构建，在推荐系统中也是这样的，各种类型点击率统计，各时段统计，加用户属性的统计等等，这样一种特征构建往往要深入分析背后的业务逻辑或者说物理原理，从而才能更好的找到 magic。</p>
<p>当然特征工程其实是和模型结合在一起的，这就是为什么要为 LR NN 做分桶和特征归一化的原因，而对于特征的处理效果和特征重要性等往往要通过模型来验证。</p>
<h3 id="To-Carry-Out-FE"><a href="#To-Carry-Out-FE" class="headerlink" title="To Carry Out FE"></a>To Carry Out FE</h3><ol>
<li><p>特征预处理</p>
<ul>
<li>缺失值处理<ul>
<li>不处理（针对类似 XGBoost 等树模型）</li>
<li>删除（缺失数据太多）</li>
<li>插值补全，包括均值/中位数/众数/建模预测/多重插补/压缩感知补全/矩阵补全等</li>
<li>分箱，缺失值一个箱</li>
</ul>
</li>
<li>归一化<ul>
<li>标准化（转换为标准正态分布）</li>
<li>归一化（抓换到 [0,1] 区间）</li>
<li>针对幂律分布，可以采用公式：$\log{\frac{1+x}{1+median}}$</li>
</ul>
</li>
<li>异常值与数值截断<ul>
<li>通过箱线图（或 3-Sigma）分析删除异常值</li>
<li>BOX-COX 转换（处理有偏分布）</li>
<li>长尾截断</li>
</ul>
</li>
<li>非线性变换</li>
<li>无量纲处理</li>
</ul>
</li>
<li><p>特征构建</p>
<ul>
<li>离散特征<ul>
<li>one-hot编码</li>
<li>散列编码</li>
<li>计数编码</li>
<li>离散特征之间交叉</li>
<li>离散特征与连续特征交叉</li>
</ul>
</li>
<li>连续(数值)特征<ul>
<li>特征交叉</li>
<li>离散化(分桶)<ul>
<li>等距</li>
<li>等频</li>
<li>模型</li>
</ul>
</li>
</ul>
</li>
<li>时空特征<ul>
<li>转化为数值</li>
<li>将时间离散化</li>
<li>行政区划表示</li>
<li>经纬度表示</li>
<li>距离表示</li>
</ul>
</li>
<li>文本特征<ul>
<li>TF-IDF、LDA / Word2Vec</li>
</ul>
</li>
<li>富媒体特征</li>
<li>嵌入特征</li>
</ul>
</li>
<li><p>特征选择</p>
<ul>
<li>基于统计量选择 / Filter: 过滤法，按照发散性或者相关性对各个特征进行评分，设定阈值或者待选择阈值的个数，选择特征。<ul>
<li>选择方差大的特征: 分布均匀的特征，样本之间差别不大，该特征不能很好区分不同样本，而分布不均匀的特征，样本之间有极大的区分度，因此通常可以选择方差较大的特征，去掉方差变化小的特征。具体方差多大算大，可以事先计算出所有特征的方差，选择一定比例(比如20%)的方差大的特征，或者可以设定一个阈值，选择方差大于阈值的特征。</li>
<li>皮尔逊相关系数: 用于衡量变量之间的线性相关性，取值区间为[-1，1]</li>
<li>覆盖率: 特征的覆盖率是指训练样本中有多大比例的样本具备该特征。我们首先计算每个特征的覆盖率，覆盖率很小的特征对模型的预测效果作用不大，可以剔除。</li>
<li>假设检验： 对于特征变量为类别变量而目标变量为连续数值变量的情况，可以使用方差分析，对于特征变量和目标变量都为连续数值变量的情况，可以使用皮尔森卡方检验。卡方统计量取值越大，特征相关性越高。</li>
<li>互信息: 互信息越大则表明两个变量相关性越高，互信息为 0 时，两个变量相互独立。因此可以根据特征变量和目标变量之间的互信息来选择互信息大的特征。</li>
</ul>
</li>
<li>基于模型选择<ul>
<li>基于模型参数 / 基于惩罚项的特征选择法 / Embedded / 集成法 : 先使用某些机器学习的算法和模型进行训练，得到各个特征的权值系数，根据系数从大到小选择特征。类似于Filter方法，但是是通过训练来确定特征的优劣。对于线性模型，可以直接基于模型系数大小来决定特征的重要程度。如果想要得到稀疏特征或者说是对特征进行降维，可以在模型上主动使用正则化技术。使用L1正则，调整正则项的权重，基本可以得到任意维度的稀疏特征。</li>
<li>子集选择 / 递归特征消除法 / Wrapper / 包装法: 根据目标函数（通常是预测效果评分），每次选择若干特征，或者排除若干特征。常见的有前向搜索和反向搜索两种思路。如果我们先从N个特征中选出一个最好的特征，然后让其余的N-1个特征分别与第一次选出的特征进行组合，从N-1个二元特征组合中选出最优组合，然后在上次的基础上，添加另一个新的特征，考虑3个特征的组合，依次类推，这种方法叫做前向搜索。反之，如果我们的目标是每次从已有特征中去掉一个特征，并从这些组合中选出最优组合，这种方法就是反向搜索。如果特征数量较多、模型复杂，那么这种选择的过程是非常耗时间和资源的。</li>
<li>基于树模型的特征选择法</li>
</ul>
</li>
<li>降维: 当特征选择完成后，可以直接训练模型了，但是可能由于特征矩阵过大，导致计算量大，训练时间长的问题，因此降低特征矩阵维度也是必不可少的。常见的降维方法有主成分分析法（PCA）和线性判别分析（LDA），线性判别分析本身也是一个分类模型。PCA和LDA有很多的相似点，其本质是要将原始的样本映射到维度更低的样本空间中，但是PCA和LDA的映射目标不一样：PCA是为了让映射后的样本具有最大的发散性；而LDA是为了让映射后的样本有最好的分类性能。所以说PCA是一种无监督的降维方法，而LDA是一种有监督的降维方法。</li>
</ul>
</li>
<li><p>特征评估</p>
<ul>
<li>谓特征评估是在将特征灌入模型进行训练之前，事先评估特征的价值，提前发现可能存在的问题，及时解决，避免将有问题的特征导入模型，导致训练过程冗长而得不到好的结果。特征评估是对选择好的特征进行整体评价，而不是特征选择中所谓的对单个特征重要性的评判。特征评估包括特征的覆盖率、特征的维度、定性分析和定量分析等几种方式。</li>
<li>特征的覆盖率是指有多少比例的样本可以构建出相关特征，对于推荐系统来说，存在用户冷启动，因此对于新用户，如果选择的特征中包含从用户行为中获得的特征，那么我们是无法为他构建特征的，从而无法利用模型来为他进行推荐。</li>
<li>特征的维度衡量的是模型的表达能力，维度越高，模型表达能力越强，这时就需要更多的样本量和更多的计算资源、优秀的分布式计算框架来支撑模型的训练。为了达到较好的训练效果，一般对于简单模型可以用更多维度的特征，而对于复杂模型可以用更少的维度。</li>
<li>定性分析是指构建的特征是否跟用户行为是冲突的，可以拿熟悉的样本来做验证，比如在视频推荐中，可以根据自己的行为来定性验证标签的正确性。我个人最喜欢看恐怖电影，那么基于标签构建特征的话，那么对于我的样本，在恐怖这个标签上的权重应该是比其他标签权重大的。</li>
<li>定量分析，通过常用的离线评估指标，如Precitson、Recall、AUC等等来验证模型的效果，当然，最终需要上线做AB测试来看是否对核心用户体验、商业化指标有提升。</li>
</ul>
</li>
</ol>
<h3 id="Something-about-FE"><a href="#Something-about-FE" class="headerlink" title="Something about FE"></a>Something about FE</h3><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-FE1.png" alt="png"></p>
<p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-FE2.png" alt="png"></p>
<p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-variable-choose.png" alt="png"></p>
<h2 id="Practice-1"><a href="#Practice-1" class="headerlink" title="Practice"></a>Practice</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> pandas_profiling <span class="keyword">as</span> pdpf</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sbn</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> missingno <span class="keyword">as</span> msno</span><br><span class="line"><span class="keyword">import</span> pivottablejs</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lightgbm <span class="keyword">as</span> lgb</span><br><span class="line"><span class="keyword">import</span> xgboost <span class="keyword">as</span> xgb</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA, FastICA, FactorAnalysis, SparsePCA</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV, cross_val_score, StratifiedKFold, train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error, mean_absolute_error</span><br><span class="line"></span><br><span class="line">os.chdir(<span class="string">r&quot;D:\Tianchi&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27; 数据含义</span></span><br><span class="line"><span class="string">SaleID 	交易ID，唯一编码</span></span><br><span class="line"><span class="string">name 	汽车交易名称，已脱敏</span></span><br><span class="line"><span class="string">regDate 	汽车注册日期，例如20160101，2016年01月01日</span></span><br><span class="line"><span class="string">model 	车型编码，已脱敏</span></span><br><span class="line"><span class="string">brand 	汽车品牌，已脱敏</span></span><br><span class="line"><span class="string">bodyType 	车身类型：豪华轿车：0，微型车：1，厢型车：2，大巴车：3，敞篷车：4，双门汽车：5，商务车：6，搅拌车：7</span></span><br><span class="line"><span class="string">fuelType 	燃油类型：汽油：0，柴油：1，液化石油气：2，天然气：3，混合动力：4，其他：5，电动：6</span></span><br><span class="line"><span class="string">gearbox 	变速箱：手动：0，自动：1</span></span><br><span class="line"><span class="string">power 	发动机功率：范围 [ 0, 600 ]</span></span><br><span class="line"><span class="string">kilometer 	汽车已行驶公里，单位万km</span></span><br><span class="line"><span class="string">notRepairedDamage 	汽车有尚未修复的损坏：是：0，否：1</span></span><br><span class="line"><span class="string">regionCode 	地区编码，已脱敏</span></span><br><span class="line"><span class="string">seller 	销售方：个体：0，非个体：1</span></span><br><span class="line"><span class="string">offerType 	报价类型：提供：0，请求：1</span></span><br><span class="line"><span class="string">creatDate 	汽车上线时间，即开始售卖时间</span></span><br><span class="line"><span class="string">price 	二手车交易价格（预测目标）</span></span><br><span class="line"><span class="string">v系列特征 	匿名特征，包含v0-14在内15个匿名特征</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<h3 id="Feature-Engineering-2"><a href="#Feature-Engineering-2" class="headerlink" title="Feature Engineering"></a>Feature Engineering</h3><h4 id="Data-Washing"><a href="#Data-Washing" class="headerlink" title="Data Washing"></a>Data Washing</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_train = pd.read_csv(<span class="string">r&#x27;data/used_car_train_20200313.csv&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>, sep=<span class="string">&#x27; &#x27;</span>, )</span><br><span class="line">data_test = pd.read_csv(<span class="string">r&#x27;data/used_car_testA_20200313.csv&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>, sep=<span class="string">&#x27; &#x27;</span>, )</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;-&#x27;</span>*<span class="number">20</span>)</span><br><span class="line">print(data_train.shape, <span class="string">&#x27;\n&#x27;</span>, data_train.columns)</span><br><span class="line">print(data_train.describe().iloc[:,<span class="number">0</span>:<span class="number">4</span>])</span><br><span class="line">print(<span class="string">&#x27;-&#x27;</span>*<span class="number">20</span>)</span><br><span class="line">print(data_test.shape, <span class="string">&#x27;\n&#x27;</span>, data_test.columns)</span><br><span class="line">print(data_test.describe().iloc[:,<span class="number">0</span>:<span class="number">4</span>])</span><br></pre></td></tr></table></figure>
<pre><code>--------------------
(150000, 31) 
 Index([&#39;SaleID&#39;, &#39;name&#39;, &#39;regDate&#39;, &#39;model&#39;, &#39;brand&#39;, &#39;bodyType&#39;, &#39;fuelType&#39;,
       &#39;gearbox&#39;, &#39;power&#39;, &#39;kilometer&#39;, &#39;notRepairedDamage&#39;, &#39;regionCode&#39;,
       &#39;seller&#39;, &#39;offerType&#39;, &#39;creatDate&#39;, &#39;price&#39;, &#39;v_0&#39;, &#39;v_1&#39;, &#39;v_2&#39;, &#39;v_3&#39;,
       &#39;v_4&#39;, &#39;v_5&#39;, &#39;v_6&#39;, &#39;v_7&#39;, &#39;v_8&#39;, &#39;v_9&#39;, &#39;v_10&#39;, &#39;v_11&#39;, &#39;v_12&#39;,
       &#39;v_13&#39;, &#39;v_14&#39;],
      dtype=&#39;object&#39;)
              SaleID           name       regDate          model
count  150000.000000  150000.000000  1.500000e+05  149999.000000
mean    74999.500000   68349.172873  2.003417e+07      47.129021
std     43301.414527   61103.875095  5.364988e+04      49.536040
min         0.000000       0.000000  1.991000e+07       0.000000
25%     37499.750000   11156.000000  1.999091e+07      10.000000
50%     74999.500000   51638.000000  2.003091e+07      30.000000
75%    112499.250000  118841.250000  2.007111e+07      66.000000
max    149999.000000  196812.000000  2.015121e+07     247.000000
--------------------
(50000, 30) 
 Index([&#39;SaleID&#39;, &#39;name&#39;, &#39;regDate&#39;, &#39;model&#39;, &#39;brand&#39;, &#39;bodyType&#39;, &#39;fuelType&#39;,
       &#39;gearbox&#39;, &#39;power&#39;, &#39;kilometer&#39;, &#39;notRepairedDamage&#39;, &#39;regionCode&#39;,
       &#39;seller&#39;, &#39;offerType&#39;, &#39;creatDate&#39;, &#39;v_0&#39;, &#39;v_1&#39;, &#39;v_2&#39;, &#39;v_3&#39;, &#39;v_4&#39;,
       &#39;v_5&#39;, &#39;v_6&#39;, &#39;v_7&#39;, &#39;v_8&#39;, &#39;v_9&#39;, &#39;v_10&#39;, &#39;v_11&#39;, &#39;v_12&#39;, &#39;v_13&#39;,
       &#39;v_14&#39;],
      dtype=&#39;object&#39;)
              SaleID           name       regDate         model
count   50000.000000   50000.000000  5.000000e+04  50000.000000
mean   174999.500000   68542.223280  2.003393e+07     46.844520
std     14433.901067   61052.808133  5.368870e+04     49.469548
min    150000.000000       0.000000  1.991000e+07      0.000000
25%    162499.750000   11203.500000  1.999091e+07     10.000000
50%    174999.500000   52248.500000  2.003091e+07     29.000000
75%    187499.250000  118856.500000  2.007110e+07     65.000000
max    199999.000000  196805.000000  2.015121e+07    246.000000
</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">outliers_proc</span>(<span class="params">data: pd.core.frame.DataFrame, col_name: [<span class="built_in">str</span>],</span></span></span><br><span class="line"><span class="function"><span class="params">                  scale=<span class="number">3</span></span>) -&gt; pd.core.frame.DataFrame:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    用于清洗异常值，默认用 box_plot（scale=3）进行清洗</span></span><br><span class="line"><span class="string">    :param data: 接收 dataFrame 数据格式</span></span><br><span class="line"><span class="string">    :param col_name: pandas 列名</span></span><br><span class="line"><span class="string">    :param scale: 尺度</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">box_plot_outliers</span>(<span class="params">data_ser: pd.core.series.Series,</span></span></span><br><span class="line"><span class="function"><span class="params">                          box_scale: <span class="built_in">int</span></span>) -&gt; pd.core.series.Series:</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        利用箱线图去除异常值</span></span><br><span class="line"><span class="string">        :param data_ser: 接收 pandas.Series 数据格式</span></span><br><span class="line"><span class="string">        :param box_scale: 箱线图尺度，</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        iqr = box_scale * (data_ser.quantile(<span class="number">0.75</span>) - data_ser.quantile(<span class="number">0.25</span>))</span><br><span class="line">        val_low = data_ser.quantile(<span class="number">0.25</span>) - iqr</span><br><span class="line">        val_up = data_ser.quantile(<span class="number">0.75</span>) + iqr</span><br><span class="line">        rule_low = (data_ser &lt; val_low)</span><br><span class="line">        rule_up = (data_ser &gt; val_up)</span><br><span class="line">        <span class="keyword">return</span> (rule_low, rule_up), (val_low, val_up)</span><br><span class="line"></span><br><span class="line">    data_n = data.copy()</span><br><span class="line">    data_series = data_n[col_name]</span><br><span class="line">    rule, value = box_plot_outliers(data_series, box_scale=scale)</span><br><span class="line">    index = np.arange(data_series.shape[<span class="number">0</span>])[rule[<span class="number">0</span>] | rule[<span class="number">1</span>]]</span><br><span class="line">    print(<span class="string">&quot;Delete number is: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(index)))</span><br><span class="line">    data_n = data_n.drop(index)</span><br><span class="line">    data_n.reset_index(drop=<span class="literal">True</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">    print(<span class="string">&quot;Now column number is: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(data_n.shape[<span class="number">0</span>]))</span><br><span class="line">    index_low = np.arange(data_series.shape[<span class="number">0</span>])[rule[<span class="number">0</span>]]</span><br><span class="line">    outliers = data_series.iloc[index_low]</span><br><span class="line">    print(<span class="string">&quot;Description of data less than the lower bound is:&quot;</span>)</span><br><span class="line">    print(pd.Series(outliers).describe())</span><br><span class="line">    index_up = np.arange(data_series.shape[<span class="number">0</span>])[rule[<span class="number">1</span>]]</span><br><span class="line">    outliers = data_series.iloc[index_up]</span><br><span class="line">    print(<span class="string">&quot;Description of data larger than the upper bound is:&quot;</span>)</span><br><span class="line">    print(pd.Series(outliers).describe())</span><br><span class="line"></span><br><span class="line">    fig, ax = plt.subplots(<span class="number">1</span>, <span class="number">2</span>, figsize=(<span class="number">10</span>, <span class="number">7</span>))</span><br><span class="line">    sbn.boxplot(y=data[col_name], data=data, palette=<span class="string">&quot;Set1&quot;</span>, ax=ax[<span class="number">0</span>])</span><br><span class="line">    sbn.boxplot(y=data_n[col_name], data=data_n, palette=<span class="string">&quot;Set1&quot;</span>, ax=ax[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> data_n</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_train = outliers_proc(data_train, <span class="string">&#x27;power&#x27;</span>, scale=<span class="number">3</span>)</span><br></pre></td></tr></table></figure>
<pre><code>Delete number is: 963
Now column number is: 149037
Description of data less than the lower bound is:
count    0.0
mean     NaN
std      NaN
min      NaN
25%      NaN
50%      NaN
75%      NaN
max      NaN
Name: power, dtype: float64
Description of data larger than the upper bound is:
count      963.000000
mean       846.836968
std       1929.418081
min        376.000000
25%        400.000000
50%        436.000000
75%        514.000000
max      19312.000000
Name: power, dtype: float64
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-output_31_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 训练集和测试集放在一起，方便构造特征</span></span><br><span class="line">data_train[<span class="string">&#x27;is_train_data&#x27;</span>] = <span class="number">1</span></span><br><span class="line">data_test[<span class="string">&#x27;is_train_data&#x27;</span>] = <span class="number">0</span></span><br><span class="line">data = pd.concat([data_train, data_test], ignore_index=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 使用时间：data[&#x27;creatDate&#x27;] - data[&#x27;regDate&#x27;]，表现汽车使用时间，一般来说价格与使用时间成反比</span></span><br><span class="line"><span class="comment">## 不过要注意，数据里有时间出错的格式，所以我们需要 errors=&#x27;coerce&#x27;</span></span><br><span class="line">data[<span class="string">&#x27;used_time&#x27;</span>] = (</span><br><span class="line">    pd.to_datetime(data[<span class="string">&#x27;creatDate&#x27;</span>], <span class="built_in">format</span>=<span class="string">&#x27;%Y%m%d&#x27;</span>, errors=<span class="string">&#x27;coerce&#x27;</span>) -</span><br><span class="line">    pd.to_datetime(data[<span class="string">&#x27;regDate&#x27;</span>], <span class="built_in">format</span>=<span class="string">&#x27;%Y%m%d&#x27;</span>, errors=<span class="string">&#x27;coerce&#x27;</span>)).dt.days</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data[<span class="string">&#x27;city&#x27;</span>] = data[<span class="string">&#x27;regionCode&#x27;</span>].apply(<span class="keyword">lambda</span> x : <span class="built_in">str</span>(x)[:-<span class="number">3</span>])</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 计算某品牌的销售统计量，同学们还可以计算其他特征的统计量</span></span><br><span class="line"><span class="comment">## 这里要以 train 的数据计算统计量</span></span><br><span class="line">Train_gb = data_train.groupby(<span class="string">&quot;brand&quot;</span>)</span><br><span class="line">all_info = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> kind, kind_data <span class="keyword">in</span> Train_gb:</span><br><span class="line">    info = &#123;&#125;</span><br><span class="line">    kind_data = kind_data[kind_data[<span class="string">&#x27;price&#x27;</span>] &gt; <span class="number">0</span>]</span><br><span class="line">    info[<span class="string">&#x27;brand_amount&#x27;</span>] = <span class="built_in">len</span>(kind_data)</span><br><span class="line">    info[<span class="string">&#x27;brand_price_max&#x27;</span>] = kind_data.price.<span class="built_in">max</span>()</span><br><span class="line">    info[<span class="string">&#x27;brand_price_median&#x27;</span>] = kind_data.price.median()</span><br><span class="line">    info[<span class="string">&#x27;brand_price_min&#x27;</span>] = kind_data.price.<span class="built_in">min</span>()</span><br><span class="line">    info[<span class="string">&#x27;brand_price_sum&#x27;</span>] = kind_data.price.<span class="built_in">sum</span>()</span><br><span class="line">    info[<span class="string">&#x27;brand_price_std&#x27;</span>] = kind_data.price.std()</span><br><span class="line">    info[<span class="string">&#x27;brand_price_average&#x27;</span>] = <span class="built_in">round</span>(kind_data.price.<span class="built_in">sum</span>() / (<span class="built_in">len</span>(kind_data) + <span class="number">1</span>), <span class="number">2</span>)</span><br><span class="line">    all_info[kind] = info</span><br><span class="line">brand_fe = pd.DataFrame(all_info).T.reset_index().rename(columns=&#123;<span class="string">&quot;index&quot;</span>: <span class="string">&quot;brand&quot;</span>&#125;)</span><br><span class="line">data = data.merge(brand_fe, how=<span class="string">&#x27;left&#x27;</span>, on=<span class="string">&#x27;brand&#x27;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 数据分桶 以 power 为例</span></span><br><span class="line"><span class="comment">## 这时候我们的缺失值也进桶了，</span></span><br><span class="line"><span class="comment">## 为什么要做数据分桶呢，原因有很多，= =</span></span><br><span class="line"><span class="comment">## 1. 离散后稀疏向量内积乘法运算速度更快，计算结果也方便存储，容易扩展；</span></span><br><span class="line"><span class="comment">## 2. 离散后的特征对异常值更具鲁棒性，如 age&gt;30 为 1 否则为 0，对于年龄为 200 的也不会对模型造成很大的干扰；</span></span><br><span class="line"><span class="comment">## 3. LR 属于广义线性模型，表达能力有限，经过离散化后，每个变量有单独的权重，这相当于引入了非线性，能够提升模型的表达能力，加大拟合；</span></span><br><span class="line"><span class="comment">## 4. 离散后特征可以进行特征交叉，提升表达能力，由 M+N 个变量编程 M*N 个变量，进一步引入非线形，提升了表达能力；</span></span><br><span class="line"><span class="comment">## 5. 特征离散后模型更稳定，如用户年龄区间，不会因为用户年龄长了一岁就变化</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 当然还有很多原因，LightGBM 在改进 XGBoost 时就增加了数据分桶，增强了模型的泛化性</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">bin</span> = [i*<span class="number">10</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">31</span>)]</span><br><span class="line">data[<span class="string">&#x27;power_bin&#x27;</span>] = pd.cut(data[<span class="string">&#x27;power&#x27;</span>], <span class="built_in">bin</span>, labels=<span class="literal">False</span>)</span><br><span class="line">data[[<span class="string">&#x27;power_bin&#x27;</span>, <span class="string">&#x27;power&#x27;</span>]].head()</span><br></pre></td></tr></table></figure>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>power_bin</th>
      <th>power</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5.0</td>
      <td>60</td>
    </tr>
    <tr>
      <th>1</th>
      <td>NaN</td>
      <td>0</td>
    </tr>
    <tr>
      <th>2</th>
      <td>16.0</td>
      <td>163</td>
    </tr>
    <tr>
      <th>3</th>
      <td>19.0</td>
      <td>193</td>
    </tr>
    <tr>
      <th>4</th>
      <td>6.0</td>
      <td>68</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.drop([<span class="string">&#x27;creatDate&#x27;</span>, <span class="string">&#x27;regDate&#x27;</span>, <span class="string">&#x27;regionCode&#x27;</span>], axis=<span class="number">1</span>, inplace=<span class="literal">True</span>)</span><br><span class="line">print(data.shape)</span><br><span class="line">data.columns</span><br></pre></td></tr></table></figure>
<pre><code>(199037, 39)


Index([&#39;SaleID&#39;, &#39;bodyType&#39;, &#39;brand&#39;, &#39;fuelType&#39;, &#39;gearbox&#39;, &#39;is_train_data&#39;,
       &#39;kilometer&#39;, &#39;model&#39;, &#39;name&#39;, &#39;notRepairedDamage&#39;, &#39;offerType&#39;, &#39;power&#39;,
       &#39;price&#39;, &#39;seller&#39;, &#39;v_0&#39;, &#39;v_1&#39;, &#39;v_10&#39;, &#39;v_11&#39;, &#39;v_12&#39;, &#39;v_13&#39;, &#39;v_14&#39;,
       &#39;v_2&#39;, &#39;v_3&#39;, &#39;v_4&#39;, &#39;v_5&#39;, &#39;v_6&#39;, &#39;v_7&#39;, &#39;v_8&#39;, &#39;v_9&#39;, &#39;used_time&#39;,
       &#39;city&#39;, &#39;brand_amount&#39;, &#39;brand_price_max&#39;, &#39;brand_price_median&#39;,
       &#39;brand_price_min&#39;, &#39;brand_price_sum&#39;, &#39;brand_price_std&#39;,
       &#39;brand_price_average&#39;, &#39;power_bin&#39;],
      dtype=&#39;object&#39;)
</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.to_csv(<span class="string">&#x27;data_for_tree.csv&#x27;</span>, index=<span class="number">0</span>)</span><br><span class="line">data[<span class="string">&#x27;power&#x27;</span>].hist()</span><br></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x267a92468d0&gt;
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-output_38_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">## 我们对其取 log，再做归一化</span></span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> preprocessing</span><br><span class="line">min_max_scaler = preprocessing.MinMaxScaler()</span><br><span class="line">data[<span class="string">&#x27;power&#x27;</span>] = np.log(data[<span class="string">&#x27;power&#x27;</span>] + <span class="number">1</span>) </span><br><span class="line">data[<span class="string">&#x27;power&#x27;</span>] = ((data[<span class="string">&#x27;power&#x27;</span>] - np.<span class="built_in">min</span>(data[<span class="string">&#x27;power&#x27;</span>])) / (np.<span class="built_in">max</span>(data[<span class="string">&#x27;power&#x27;</span>]) - np.<span class="built_in">min</span>(data[<span class="string">&#x27;power&#x27;</span>])))</span><br><span class="line">data[<span class="string">&#x27;power&#x27;</span>].plot.hist()</span><br></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x267abf56160&gt;
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-output_39_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 所以我们可以直接做归一化</span></span><br><span class="line">data[<span class="string">&#x27;kilometer&#x27;</span>] = ((data[<span class="string">&#x27;kilometer&#x27;</span>] - np.<span class="built_in">min</span>(data[<span class="string">&#x27;kilometer&#x27;</span>])) / </span><br><span class="line">                        (np.<span class="built_in">max</span>(data[<span class="string">&#x27;kilometer&#x27;</span>]) - np.<span class="built_in">min</span>(data[<span class="string">&#x27;kilometer&#x27;</span>])))</span><br><span class="line">data[<span class="string">&#x27;kilometer&#x27;</span>].plot.hist()</span><br></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x267adbc2dd8&gt;
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-output_40_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max_min</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> (x - np.<span class="built_in">min</span>(x)) / (np.<span class="built_in">max</span>(x) - np.<span class="built_in">min</span>(x))</span><br><span class="line">data[[<span class="string">&#x27;brand_amount&#x27;</span>,<span class="string">&#x27;brand_price_average&#x27;</span>,<span class="string">&#x27;brand_price_max&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;brand_price_median&#x27;</span>,<span class="string">&#x27;brand_price_min&#x27;</span>,<span class="string">&#x27;brand_price_std&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;brand_price_sum&#x27;</span>,]] = \</span><br><span class="line">data[[<span class="string">&#x27;brand_amount&#x27;</span>,<span class="string">&#x27;brand_price_average&#x27;</span>,<span class="string">&#x27;brand_price_max&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;brand_price_median&#x27;</span>,<span class="string">&#x27;brand_price_min&#x27;</span>,<span class="string">&#x27;brand_price_std&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;brand_price_sum&#x27;</span>,]].apply(max_min)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 对类别特征进行 OneEncoder</span></span><br><span class="line">data = pd.get_dummies(data, columns=[<span class="string">&#x27;model&#x27;</span>, <span class="string">&#x27;brand&#x27;</span>, <span class="string">&#x27;bodyType&#x27;</span>, <span class="string">&#x27;fuelType&#x27;</span>,</span><br><span class="line">                                     <span class="string">&#x27;gearbox&#x27;</span>, <span class="string">&#x27;notRepairedDamage&#x27;</span>, <span class="string">&#x27;power_bin&#x27;</span>])</span><br><span class="line">print(data.shape)</span><br><span class="line">data.columns</span><br></pre></td></tr></table></figure>
<pre><code>(199037, 370)





Index([&#39;SaleID&#39;, &#39;is_train_data&#39;, &#39;kilometer&#39;, &#39;name&#39;, &#39;offerType&#39;, &#39;power&#39;,
       &#39;price&#39;, &#39;seller&#39;, &#39;v_0&#39;, &#39;v_1&#39;,
       ...
       &#39;power_bin_20.0&#39;, &#39;power_bin_21.0&#39;, &#39;power_bin_22.0&#39;, &#39;power_bin_23.0&#39;,
       &#39;power_bin_24.0&#39;, &#39;power_bin_25.0&#39;, &#39;power_bin_26.0&#39;, &#39;power_bin_27.0&#39;,
       &#39;power_bin_28.0&#39;, &#39;power_bin_29.0&#39;],
      dtype=&#39;object&#39;, length=370)
</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 这份数据可以给 LR 用</span></span><br><span class="line">data.to_csv(<span class="string">&#x27;data_for_lr.csv&#x27;</span>, index=<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<h4 id="特征-过滤式"><a href="#特征-过滤式" class="headerlink" title="特征-过滤式"></a>特征-过滤式</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 当然也可以直接看图</span></span><br><span class="line">data_numeric = data[[<span class="string">&#x27;power&#x27;</span>, <span class="string">&#x27;kilometer&#x27;</span>, <span class="string">&#x27;brand_amount&#x27;</span>, <span class="string">&#x27;brand_price_average&#x27;</span>, </span><br><span class="line">                     <span class="string">&#x27;brand_price_max&#x27;</span>, <span class="string">&#x27;brand_price_median&#x27;</span>,<span class="string">&#x27;price&#x27;</span>]]</span><br><span class="line">correlation = data_numeric.corr()</span><br><span class="line"></span><br><span class="line">f , ax = plt.subplots(figsize = (<span class="number">7</span>, <span class="number">7</span>))</span><br><span class="line">plt.title(<span class="string">&#x27;Correlation of Numeric Features with Price&#x27;</span>,y=<span class="number">1</span>,size=<span class="number">16</span>)</span><br><span class="line">sbn.heatmap(correlation,square = <span class="literal">True</span>,  vmax=<span class="number">0.8</span>)</span><br></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x2679cfe6be0&gt;
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-Intro-output_45_1.png" alt="png"></p>
<h1 id="Modeling-and-Parameters"><a href="#Modeling-and-Parameters" class="headerlink" title="Modeling and Parameters"></a>Modeling and Parameters</h1><h2 id="Basic-Models"><a href="#Basic-Models" class="headerlink" title="Basic Models"></a>Basic Models</h2><ol>
<li>线性回归模型：<ul>
<li>线性回归对于特征的要求；</li>
<li>处理长尾分布；</li>
<li>理解线性回归模型；</li>
</ul>
</li>
<li>模型性能验证：<ul>
<li>评价函数与目标函数；</li>
<li>交叉验证方法；</li>
<li>留一验证方法；</li>
<li>针对时间序列问题的验证；</li>
<li>绘制学习率曲线；</li>
<li>绘制验证曲线；</li>
</ul>
</li>
<li>嵌入式特征选择：<ul>
<li>Lasso回归；</li>
<li>Ridge回归；</li>
<li>决策树；</li>
</ul>
</li>
<li>模型对比：<ul>
<li>常用线性模型；</li>
<li>常用非线性模型；</li>
</ul>
</li>
<li>模型调参：<ul>
<li>贪心调参方法；</li>
<li>网格调参方法；</li>
<li>贝叶斯调参方法；</li>
</ul>
</li>
</ol>
<h2 id="Practice-2"><a href="#Practice-2" class="headerlink" title="Practice"></a>Practice</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> pandas_profiling <span class="keyword">as</span> pdpf</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sbn</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> missingno <span class="keyword">as</span> msno</span><br><span class="line"><span class="keyword">import</span> pivottablejs</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lightgbm <span class="keyword">as</span> lgb</span><br><span class="line"><span class="keyword">import</span> xgboost <span class="keyword">as</span> xgb</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA, FastICA, FactorAnalysis, SparsePCA</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV, cross_val_score, StratifiedKFold, train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error, mean_absolute_error</span><br><span class="line"></span><br><span class="line">os.chdir(<span class="string">r&quot;D:\Tianchi&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27; 数据含义</span></span><br><span class="line"><span class="string">SaleID 	交易ID，唯一编码</span></span><br><span class="line"><span class="string">name 	汽车交易名称，已脱敏</span></span><br><span class="line"><span class="string">regDate 	汽车注册日期，例如20160101，2016年01月01日</span></span><br><span class="line"><span class="string">model 	车型编码，已脱敏</span></span><br><span class="line"><span class="string">brand 	汽车品牌，已脱敏</span></span><br><span class="line"><span class="string">bodyType 	车身类型：豪华轿车：0，微型车：1，厢型车：2，大巴车：3，敞篷车：4，双门汽车：5，商务车：6，搅拌车：7</span></span><br><span class="line"><span class="string">fuelType 	燃油类型：汽油：0，柴油：1，液化石油气：2，天然气：3，混合动力：4，其他：5，电动：6</span></span><br><span class="line"><span class="string">gearbox 	变速箱：手动：0，自动：1</span></span><br><span class="line"><span class="string">power 	发动机功率：范围 [ 0, 600 ]</span></span><br><span class="line"><span class="string">kilometer 	汽车已行驶公里，单位万km</span></span><br><span class="line"><span class="string">notRepairedDamage 	汽车有尚未修复的损坏：是：0，否：1</span></span><br><span class="line"><span class="string">regionCode 	地区编码，已脱敏</span></span><br><span class="line"><span class="string">seller 	销售方：个体：0，非个体：1</span></span><br><span class="line"><span class="string">offerType 	报价类型：提供：0，请求：1</span></span><br><span class="line"><span class="string">creatDate 	汽车上线时间，即开始售卖时间</span></span><br><span class="line"><span class="string">price 	二手车交易价格（预测目标）</span></span><br><span class="line"><span class="string">v系列特征 	匿名特征，包含v0-14在内15个匿名特征</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reduce_mem_usage</span>(<span class="params">df</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot; iterate through all the columns of a dataframe and modify the data type</span></span><br><span class="line"><span class="string">        to reduce memory usage.        </span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    start_mem = df.memory_usage().<span class="built_in">sum</span>() </span><br><span class="line">    print(<span class="string">&#x27;Memory usage of dataframe is &#123;:.2f&#125; MB&#x27;</span>.<span class="built_in">format</span>(start_mem))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> df.columns:</span><br><span class="line">        col_type = df[col].dtype</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> col_type != <span class="built_in">object</span>:</span><br><span class="line">            c_min = df[col].<span class="built_in">min</span>()</span><br><span class="line">            c_max = df[col].<span class="built_in">max</span>()</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">str</span>(col_type)[:<span class="number">3</span>] == <span class="string">&#x27;int&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> c_min &gt; np.iinfo(np.int8).<span class="built_in">min</span> <span class="keyword">and</span> c_max &lt; np.iinfo(np.int8).<span class="built_in">max</span>:</span><br><span class="line">                    df[col] = df[col].astype(np.int8)</span><br><span class="line">                <span class="keyword">elif</span> c_min &gt; np.iinfo(np.int16).<span class="built_in">min</span> <span class="keyword">and</span> c_max &lt; np.iinfo(np.int16).<span class="built_in">max</span>:</span><br><span class="line">                    df[col] = df[col].astype(np.int16)</span><br><span class="line">                <span class="keyword">elif</span> c_min &gt; np.iinfo(np.int32).<span class="built_in">min</span> <span class="keyword">and</span> c_max &lt; np.iinfo(np.int32).<span class="built_in">max</span>:</span><br><span class="line">                    df[col] = df[col].astype(np.int32)</span><br><span class="line">                <span class="keyword">elif</span> c_min &gt; np.iinfo(np.int64).<span class="built_in">min</span> <span class="keyword">and</span> c_max &lt; np.iinfo(np.int64).<span class="built_in">max</span>:</span><br><span class="line">                    df[col] = df[col].astype(np.int64)  </span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">if</span> c_min &gt; np.finfo(np.float16).<span class="built_in">min</span> <span class="keyword">and</span> c_max &lt; np.finfo(np.float16).<span class="built_in">max</span>:</span><br><span class="line">                    df[col] = df[col].astype(np.float16)</span><br><span class="line">                <span class="keyword">elif</span> c_min &gt; np.finfo(np.float32).<span class="built_in">min</span> <span class="keyword">and</span> c_max &lt; np.finfo(np.float32).<span class="built_in">max</span>:</span><br><span class="line">                    df[col] = df[col].astype(np.float32)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    df[col] = df[col].astype(np.float64)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            df[col] = df[col].astype(<span class="string">&#x27;category&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    end_mem = df.memory_usage().<span class="built_in">sum</span>() </span><br><span class="line">    print(<span class="string">&#x27;Memory usage after optimization is: &#123;:.2f&#125; MB&#x27;</span>.<span class="built_in">format</span>(end_mem))</span><br><span class="line">    print(<span class="string">&#x27;Decreased by &#123;:.1f&#125;%&#x27;</span>.<span class="built_in">format</span>(<span class="number">100</span> * (start_mem - end_mem) / start_mem))</span><br><span class="line">    <span class="keyword">return</span> df</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sample_feature = reduce_mem_usage(pd.read_csv(<span class="string">&#x27;data_for_tree.csv&#x27;</span>))</span><br></pre></td></tr></table></figure>
<pre><code>Memory usage of dataframe is 62099672.00 MB
Memory usage after optimization is: 16520303.00 MB
Decreased by 73.4%
</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">continuous_feature_names = [x <span class="keyword">for</span> x <span class="keyword">in</span> sample_feature.columns <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> [<span class="string">&#x27;price&#x27;</span>,<span class="string">&#x27;brand&#x27;</span>,<span class="string">&#x27;model&#x27;</span>,<span class="string">&#x27;brand&#x27;</span>]]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sample_feature = sample_feature.dropna().replace(<span class="string">&#x27;-&#x27;</span>, <span class="number">0</span>).reset_index(drop=<span class="literal">True</span>)</span><br><span class="line">sample_feature[<span class="string">&#x27;notRepairedDamage&#x27;</span>] = sample_feature[<span class="string">&#x27;notRepairedDamage&#x27;</span>].astype(np.float32)</span><br><span class="line">data_train = sample_feature[continuous_feature_names + [<span class="string">&#x27;price&#x27;</span>]]</span><br><span class="line"></span><br><span class="line">data_train_X = data_train[continuous_feature_names]</span><br><span class="line">data_train_y = data_train[<span class="string">&#x27;price&#x27;</span>]</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line">model = LinearRegression(normalize=<span class="literal">True</span>)</span><br><span class="line">model = model.fit(data_train_X, data_train_y)</span><br><span class="line"><span class="string">&#x27;intercept:&#x27;</span>+ <span class="built_in">str</span>(model.intercept_)</span><br><span class="line"><span class="built_in">sorted</span>(<span class="built_in">dict</span>(<span class="built_in">zip</span>(continuous_feature_names, model.coef_)).items(), key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure>
<pre><code>[(&#39;v_6&#39;, 3367064.3416418973),
 (&#39;v_8&#39;, 700675.5609398854),
 (&#39;v_9&#39;, 170630.27723220928),
 (&#39;v_7&#39;, 32322.661932026494),
 (&#39;v_12&#39;, 20473.67079690079),
 (&#39;v_3&#39;, 17868.079541462153),
 (&#39;v_11&#39;, 11474.938996675626),
 (&#39;v_13&#39;, 11261.764560002604),
 (&#39;v_10&#39;, 2683.920090576799),
 (&#39;gearbox&#39;, 881.8225039247895),
 (&#39;fuelType&#39;, 363.90425072159366),
 (&#39;bodyType&#39;, 189.60271012072778),
 (&#39;city&#39;, 44.94975120521572),
 (&#39;power&#39;, 28.553901616757216),
 (&#39;brand_price_median&#39;, 0.5103728134077985),
 (&#39;brand_price_std&#39;, 0.4503634709262824),
 (&#39;brand_amount&#39;, 0.14881120395066205),
 (&#39;brand_price_max&#39;, 0.003191018670313502),
 (&#39;SaleID&#39;, 5.3559899198577976e-05),
 (&#39;offerType&#39;, 6.017042323946953e-06),
 (&#39;seller&#39;, 1.6369158402085304e-06),
 (&#39;is_train_data&#39;, -5.66341623198241e-06),
 (&#39;brand_price_sum&#39;, -2.1750068681876833e-05),
 (&#39;name&#39;, -0.0002980012713063814),
 (&#39;used_time&#39;, -0.002515894332869914),
 (&#39;brand_price_average&#39;, -0.40490484510104074),
 (&#39;brand_price_min&#39;, -2.2467753486894733),
 (&#39;power_bin&#39;, -34.42064411731283),
 (&#39;v_14&#39;, -274.7841180769423),
 (&#39;kilometer&#39;, -372.897526660724),
 (&#39;notRepairedDamage&#39;, -495.1903844628292),
 (&#39;v_0&#39;, -2045.054957354999),
 (&#39;v_5&#39;, -11022.986240536327),
 (&#39;v_4&#39;, -15121.731109848046),
 (&#39;v_2&#39;, -26098.299920467005),
 (&#39;v_1&#39;, -45556.18929728572)]
</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">subsample_index = np.random.randint(low=<span class="number">0</span>, high=<span class="built_in">len</span>(data_train_y), size=<span class="number">50</span>)</span><br><span class="line">plt.scatter(data_train_X[<span class="string">&#x27;v_9&#x27;</span>][subsample_index], </span><br><span class="line">            data_train_y[subsample_index] - model.predict(data_train_X.loc[subsample_index]), </span><br><span class="line">            color=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line"><span class="comment">## plt.scatter(data_train_X[&#x27;v_9&#x27;][subsample_index], , color=&#x27;blue&#x27;)</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;v_7&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;price&#x27;</span>)</span><br><span class="line">plt.legend([<span class="string">&#x27;True Price&#x27;</span>,<span class="string">&#x27;Predicted Price&#x27;</span>],loc=<span class="string">&#x27;upper right&#x27;</span>)</span><br><span class="line">print(<span class="string">&#x27;The predicted price is obvious different from true price&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;It is clear to see the price shows a typical exponential distribution&#x27;</span>)</span><br><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">sbn.distplot(data_train_y)</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">sbn.distplot(data_train_y[data_train_y &lt; np.quantile(data_train_y, <span class="number">0.9</span>)])</span><br></pre></td></tr></table></figure>
<pre><code>The predicted price is obvious different from true price
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-output_52_1.png" alt="png"></p>
<pre><code>It is clear to see the price shows a typical exponential distribution





&lt;matplotlib.axes._subplots.AxesSubplot at 0x24c80b26f98&gt;
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-output_52_4.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data_train_y_ln = np.log(data_train_y + <span class="number">1</span>)</span><br><span class="line">print(<span class="string">&#x27;The transformed price seems like normal distribution&#x27;</span>)</span><br><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">sbn.distplot(data_train_y_ln)</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">sbn.distplot(data_train_y_ln[data_train_y_ln &lt; np.quantile(data_train_y_ln, <span class="number">0.9</span>)])</span><br><span class="line"></span><br><span class="line">model = model.fit(data_train_X, data_train_y_ln)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;intercept:&#x27;</span>+ <span class="built_in">str</span>(model.intercept_))</span><br><span class="line"><span class="built_in">sorted</span>(<span class="built_in">dict</span>(<span class="built_in">zip</span>(continuous_feature_names, model.coef_)).items(), key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>], reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">subsample_index = np.random.randint(low=<span class="number">0</span>, high=<span class="built_in">len</span>(data_train_y_ln), size=<span class="number">50</span>)</span><br><span class="line">plt.figure(figsize=(<span class="number">15</span>,<span class="number">5</span>))</span><br><span class="line">plt.subplot(<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">plt.scatter(data_train_X[<span class="string">&#x27;v_9&#x27;</span>][subsample_index], </span><br><span class="line">            data_train_y_ln[subsample_index] - model.predict(data_train_X.loc[subsample_index]), </span><br><span class="line">            color=<span class="string">&#x27;black&#x27;</span>)</span><br><span class="line"><span class="comment">## plt.scatter(data_train_X[&#x27;v_9&#x27;][subsample_index], , color=&#x27;blue&#x27;)</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;v_9&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;price&#x27;</span>)</span><br><span class="line">plt.legend([<span class="string">&#x27;True Price&#x27;</span>,<span class="string">&#x27;Predicted Price&#x27;</span>],loc=<span class="string">&#x27;upper right&#x27;</span>)</span><br></pre></td></tr></table></figure>
<pre><code>The transformed price seems like normal distribution
intercept:18.750749465662786





&lt;matplotlib.legend.Legend at 0x24c88718e10&gt;
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-output_53_2.png" alt="png"></p>
<p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-output_53_3.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">sample_feature = sample_feature.reset_index(drop=<span class="literal">True</span>)</span><br><span class="line">split_point = <span class="built_in">len</span>(sample_feature) // <span class="number">5</span> * <span class="number">4</span></span><br><span class="line"></span><br><span class="line">train = sample_feature.loc[:split_point].dropna()</span><br><span class="line">val = sample_feature.loc[split_point:].dropna()</span><br><span class="line"></span><br><span class="line">train_X = train[continuous_feature_names]</span><br><span class="line">train_y_ln = np.log(train[<span class="string">&#x27;price&#x27;</span>] + <span class="number">1</span>)</span><br><span class="line">val_X = val[continuous_feature_names]</span><br><span class="line">val_y_ln = np.log(val[<span class="string">&#x27;price&#x27;</span>] + <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">model = model.fit(train_X, train_y_ln)</span><br><span class="line">mean_absolute_error(val_y_ln, model.predict(val_X))</span><br></pre></td></tr></table></figure>
<pre><code>0.19577667270300972
</code></pre><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> learning_curve, validation_curve</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_score</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_absolute_error,  make_scorer</span><br><span class="line"></span><br><span class="line">? learning_curve</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">plot_learning_curve</span>(<span class="params">estimator, title, X, y, ylim=<span class="literal">None</span>, cv=<span class="literal">None</span>, n_jobs=<span class="number">1</span>, train_size=np.linspace(<span class="params"><span class="number">.1</span>, <span class="number">1.0</span>, <span class="number">5</span></span>)</span>):</span></span><br><span class="line">    plt.figure()</span><br><span class="line">    plt.title(title)</span><br><span class="line">    <span class="keyword">if</span> ylim <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        plt.ylim(*ylim)</span><br><span class="line">    plt.xlabel(<span class="string">&#x27;Training example&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;score&#x27;</span>)</span><br><span class="line">    train_sizes, train_scores, test_scores = learning_curve(</span><br><span class="line">        estimator, X, y, cv=cv, n_jobs=n_jobs, train_sizes=train_size, scoring=make_scorer(mean_absolute_error))</span><br><span class="line">    train_scores_mean = np.mean(train_scores, axis=<span class="number">1</span>)</span><br><span class="line">    train_scores_std = np.std(train_scores, axis=<span class="number">1</span>)</span><br><span class="line">    test_scores_mean = np.mean(test_scores, axis=<span class="number">1</span>)</span><br><span class="line">    test_scores_std = np.std(test_scores, axis=<span class="number">1</span>)</span><br><span class="line">    plt.grid()  <span class="comment"># 区域</span></span><br><span class="line">    plt.fill_between(train_sizes, train_scores_mean - train_scores_std,</span><br><span class="line">                     train_scores_mean + train_scores_std, alpha=<span class="number">0.1</span>,</span><br><span class="line">                     color=<span class="string">&quot;r&quot;</span>)</span><br><span class="line">    plt.fill_between(train_sizes, test_scores_mean - test_scores_std,</span><br><span class="line">                     test_scores_mean + test_scores_std, alpha=<span class="number">0.1</span>,</span><br><span class="line">                     color=<span class="string">&quot;g&quot;</span>)</span><br><span class="line">    plt.plot(train_sizes, train_scores_mean, <span class="string">&#x27;o-&#x27;</span>, color=<span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">             label=<span class="string">&quot;Training score&quot;</span>)</span><br><span class="line">    plt.plot(train_sizes, test_scores_mean, <span class="string">&#x27;o-&#x27;</span>, color=<span class="string">&quot;g&quot;</span>,</span><br><span class="line">             label=<span class="string">&quot;Cross-validation score&quot;</span>)</span><br><span class="line">    plt.legend(loc=<span class="string">&quot;best&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> plt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plot_learning_curve(LinearRegression(), <span class="string">&#x27;Liner_model&#x27;</span>,</span><br><span class="line">                    data_train_X[:<span class="number">1000</span>], data_train_y_ln[:<span class="number">1000</span>], ylim=(<span class="number">0.0</span>, <span class="number">0.5</span>), cv=<span class="number">5</span>, n_jobs=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<pre><code>&lt;module &#39;matplotlib.pyplot&#39; from &#39;C:\\Users\\Carlos\\AppData\\Roaming\\Python\\Python36\\site-packages\\matplotlib\\pyplot.py&#39;&gt;
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-output_55_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression, Ridge, Lasso</span><br><span class="line">models = [LinearRegression(), Ridge(), Lasso()]</span><br><span class="line">result = <span class="built_in">dict</span>()</span><br><span class="line"><span class="keyword">for</span> model <span class="keyword">in</span> models:</span><br><span class="line">    model_name = <span class="built_in">str</span>(model).split(<span class="string">&#x27;(&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    scores = cross_val_score(model, X=data_train_X, y=data_train_y_ln, verbose=<span class="number">0</span>, cv = <span class="number">5</span>, scoring=make_scorer(mean_absolute_error))</span><br><span class="line">    result[model_name] = scores</span><br><span class="line">    print(model_name + <span class="string">&#x27; is finished&#x27;</span>)</span><br><span class="line">result = pd.DataFrame(result)</span><br><span class="line">result.index = [<span class="string">&#x27;cv&#x27;</span> + <span class="built_in">str</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>)]</span><br><span class="line">result</span><br></pre></td></tr></table></figure>
<pre><code>LinearRegression is finished
Ridge is finished
Lasso is finished
</code></pre><div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>LinearRegression</th>
      <th>Ridge</th>
      <th>Lasso</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>cv1</th>
      <td>0.190792</td>
      <td>0.194832</td>
      <td>0.383899</td>
    </tr>
    <tr>
      <th>cv2</th>
      <td>0.193758</td>
      <td>0.197632</td>
      <td>0.381893</td>
    </tr>
    <tr>
      <th>cv3</th>
      <td>0.194132</td>
      <td>0.198123</td>
      <td>0.384090</td>
    </tr>
    <tr>
      <th>cv4</th>
      <td>0.191825</td>
      <td>0.195670</td>
      <td>0.380526</td>
    </tr>
    <tr>
      <th>cv5</th>
      <td>0.195758</td>
      <td>0.199676</td>
      <td>0.383611</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LinearRegression</span><br><span class="line"><span class="keyword">from</span> sklearn.svm <span class="keyword">import</span> SVC</span><br><span class="line"><span class="keyword">from</span> sklearn.tree <span class="keyword">import</span> DecisionTreeRegressor</span><br><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestRegressor, GradientBoostingRegressor</span><br><span class="line"><span class="keyword">from</span> sklearn.neural_network <span class="keyword">import</span> MLPRegressor</span><br><span class="line"><span class="keyword">from</span> xgboost.sklearn <span class="keyword">import</span> XGBRegressor</span><br><span class="line"><span class="keyword">from</span> lightgbm.sklearn <span class="keyword">import</span> LGBMRegressor</span><br><span class="line">models = [LinearRegression(),</span><br><span class="line">          DecisionTreeRegressor(),</span><br><span class="line">          RandomForestRegressor(),</span><br><span class="line">          GradientBoostingRegressor(),</span><br><span class="line">          MLPRegressor(solver=<span class="string">&#x27;lbfgs&#x27;</span>, max_iter=<span class="number">100</span>), </span><br><span class="line">          XGBRegressor(n_estimators = <span class="number">100</span>, objective=<span class="string">&#x27;reg:squarederror&#x27;</span>), </span><br><span class="line">          LGBMRegressor(n_estimators = <span class="number">100</span>)]</span><br><span class="line">result = <span class="built_in">dict</span>()</span><br><span class="line"><span class="keyword">for</span> model <span class="keyword">in</span> models:</span><br><span class="line">    model_name = <span class="built_in">str</span>(model).split(<span class="string">&#x27;(&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    scores = cross_val_score(model, X=train_X, y=train_y_ln, verbose=<span class="number">0</span>, cv = <span class="number">5</span>, scoring=make_scorer(mean_absolute_error))</span><br><span class="line">    result[model_name] = scores</span><br><span class="line">    print(model_name + <span class="string">&#x27; is finished&#x27;</span>)</span><br><span class="line">result = pd.DataFrame(result)</span><br><span class="line">result.index = [<span class="string">&#x27;cv&#x27;</span> + <span class="built_in">str</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">6</span>)]</span><br><span class="line">result.T</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">objective = [<span class="string">&#x27;regression&#x27;</span>, <span class="string">&#x27;regression_l1&#x27;</span>, <span class="string">&#x27;mape&#x27;</span>, <span class="string">&#x27;huber&#x27;</span>, <span class="string">&#x27;fair&#x27;</span>]</span><br><span class="line"></span><br><span class="line">num_leaves = [<span class="number">3</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>,<span class="number">40</span>, <span class="number">55</span>]</span><br><span class="line">max_depth = [<span class="number">3</span>,<span class="number">5</span>,<span class="number">10</span>,<span class="number">15</span>,<span class="number">20</span>,<span class="number">40</span>, <span class="number">55</span>]</span><br><span class="line">bagging_fraction = []</span><br><span class="line">feature_fraction = []</span><br><span class="line">drop_rate = []</span><br><span class="line">best_obj = <span class="built_in">dict</span>()</span><br><span class="line"><span class="keyword">for</span> obj <span class="keyword">in</span> objective:</span><br><span class="line">    model = LGBMRegressor(objective=obj)</span><br><span class="line">    score = np.mean(cross_val_score(model, X=train_X, y=train_y_ln, verbose=<span class="number">0</span>, cv = <span class="number">5</span>, scoring=make_scorer(mean_absolute_error)))</span><br><span class="line">    best_obj[obj] = score</span><br><span class="line">    </span><br><span class="line">best_leaves = <span class="built_in">dict</span>()</span><br><span class="line"><span class="keyword">for</span> leaves <span class="keyword">in</span> num_leaves:</span><br><span class="line">    model = LGBMRegressor(objective=<span class="built_in">min</span>(best_obj.items(), key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>])[<span class="number">0</span>], num_leaves=leaves)</span><br><span class="line">    score = np.mean(cross_val_score(model, X=train_X, y=train_y_ln, verbose=<span class="number">0</span>, cv = <span class="number">5</span>, scoring=make_scorer(mean_absolute_error)))</span><br><span class="line">    best_leaves[leaves] = score</span><br><span class="line">    </span><br><span class="line">best_depth = <span class="built_in">dict</span>()</span><br><span class="line"><span class="keyword">for</span> depth <span class="keyword">in</span> max_depth:</span><br><span class="line">    model = LGBMRegressor(objective=<span class="built_in">min</span>(best_obj.items(), key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>])[<span class="number">0</span>],</span><br><span class="line">                          num_leaves=<span class="built_in">min</span>(best_leaves.items(), key=<span class="keyword">lambda</span> x:x[<span class="number">1</span>])[<span class="number">0</span>],</span><br><span class="line">                          max_depth=depth)</span><br><span class="line">    score = np.mean(cross_val_score(model, X=train_X, y=train_y_ln, verbose=<span class="number">0</span>, cv = <span class="number">5</span>, scoring=make_scorer(mean_absolute_error)))</span><br><span class="line">    best_depth[depth] = score</span><br><span class="line">    </span><br><span class="line">sbn.lineplot(x=[<span class="string">&#x27;0_initial&#x27;</span>,<span class="string">&#x27;1_turning_obj&#x27;</span>,<span class="string">&#x27;2_turning_leaves&#x27;</span>,<span class="string">&#x27;3_turning_depth&#x27;</span>], y=[<span class="number">0.143</span> ,<span class="built_in">min</span>(best_obj.values()), <span class="built_in">min</span>(best_leaves.values()), <span class="built_in">min</span>(best_depth.values())])</span><br></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x24c92d99438&gt;
</code></pre><p><img src="/imgs/Programming/datawhale-dmintro/DataWhale-output_58_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV</span><br><span class="line">parameters = &#123;<span class="string">&#x27;objective&#x27;</span>: objective , <span class="string">&#x27;num_leaves&#x27;</span>: num_leaves, <span class="string">&#x27;max_depth&#x27;</span>: max_depth&#125;</span><br><span class="line">model = LGBMRegressor()</span><br><span class="line">clf = GridSearchCV(model, parameters, cv=<span class="number">5</span>)</span><br><span class="line">clf = clf.fit(data_train_X, data_train_y)</span><br><span class="line">print(clf.best_params_)</span><br><span class="line">model = LGBMRegressor(objective=<span class="string">&#x27;regression&#x27;</span>,</span><br><span class="line">                          num_leaves=<span class="number">55</span>,</span><br><span class="line">                          max_depth=<span class="number">15</span>)</span><br><span class="line">np.mean(cross_val_score(model, X=data_train_X, y=data_train_y_ln, verbose=<span class="number">0</span>, cv = <span class="number">5</span>, scoring=make_scorer(mean_absolute_error)))</span><br></pre></td></tr></table></figure>
<pre><code>&#123;&#39;max_depth&#39;: 15, &#39;num_leaves&#39;: 55, &#39;objective&#39;: &#39;regression&#39;&#125;
0.13754820909576437
</code></pre><h1 id="Merging"><a href="#Merging" class="headerlink" title="Merging"></a>Merging</h1><h2 id="Theory"><a href="#Theory" class="headerlink" title="Theory"></a>Theory</h2><h3 id="1"><a href="#1" class="headerlink" title="1"></a>1</h3><ol>
<li><p>简单加权融合:</p>
<ul>
<li>回归(分类概率):算术平均融合(Arithmetic mean), 几何平均融合(Geometric mean);</li>
<li>分类:投票(Voting)</li>
<li>综合:排序融合(Rank averaging), log融合</li>
</ul>
</li>
<li><p>stacking/blending:</p>
<ul>
<li>构建多层模型，并利用预测结果再拟合预测。</li>
</ul>
</li>
<li><p>boosting/bagging(在xgboost, Adaboost, GBDT中已经用到):</p>
<ul>
<li>多树的提升方法</li>
</ul>
</li>
</ol>
<h3 id="2"><a href="#2" class="headerlink" title="2"></a>2</h3><ol>
<li><p>结果层面的融合，这种是最常见的融合方法，其可行的融合方法也有很多，比如根据结果的得分进行加权融合，还可以做Log，exp处理等。在做结果融合的时候，有一个很重要的条件是模型结果的得分要比较近似，然后结果的差异要比较大，这样的结果融合往往有比较好的效果提升。</p>
</li>
<li><p>特征层面的融合，这个层面其实感觉不叫融合，准确说可以叫分割，很多时候如果我们用同种模型训练，可以把特征进行切分给不同的模型，然后在后面进行模型或者结果融合有时也能产生比较好的效果。</p>
</li>
<li><p>模型层面的融合，模型层面的融合可能就涉及模型的堆叠和设计，比如加Staking层，部分模型的结果作为特征输入等，这些就需要多实验和思考了，基于模型层面的融合最好不同模型类型要有一定的差异，用同种模型不同的参数的收益一般是比较小的。</p>
</li>
</ol>
<h2 id="Practice-3"><a href="#Practice-3" class="headerlink" title="Practice"></a>Practice</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> shutil</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> pandas_profiling <span class="keyword">as</span> pdpf</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sbn</span><br><span class="line">%matplotlib inline</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> missingno <span class="keyword">as</span> msno</span><br><span class="line"><span class="keyword">import</span> pivottablejs</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lightgbm <span class="keyword">as</span> lgb</span><br><span class="line"><span class="keyword">import</span> xgboost <span class="keyword">as</span> xgb</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA, FastICA, FactorAnalysis, SparsePCA</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> GridSearchCV, cross_val_score, StratifiedKFold, train_test_split</span><br><span class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> mean_squared_error, mean_absolute_error</span><br><span class="line"></span><br><span class="line">os.chdir(<span class="string">r&quot;D:\Tianchi&quot;</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27; 数据含义</span></span><br><span class="line"><span class="string">SaleID 	交易ID，唯一编码</span></span><br><span class="line"><span class="string">name 	汽车交易名称，已脱敏</span></span><br><span class="line"><span class="string">regDate 	汽车注册日期，例如20160101，2016年01月01日</span></span><br><span class="line"><span class="string">model 	车型编码，已脱敏</span></span><br><span class="line"><span class="string">brand 	汽车品牌，已脱敏</span></span><br><span class="line"><span class="string">bodyType 	车身类型：豪华轿车：0，微型车：1，厢型车：2，大巴车：3，敞篷车：4，双门汽车：5，商务车：6，搅拌车：7</span></span><br><span class="line"><span class="string">fuelType 	燃油类型：汽油：0，柴油：1，液化石油气：2，天然气：3，混合动力：4，其他：5，电动：6</span></span><br><span class="line"><span class="string">gearbox 	变速箱：手动：0，自动：1</span></span><br><span class="line"><span class="string">power 	发动机功率：范围 [ 0, 600 ]</span></span><br><span class="line"><span class="string">kilometer 	汽车已行驶公里，单位万km</span></span><br><span class="line"><span class="string">notRepairedDamage 	汽车有尚未修复的损坏：是：0，否：1</span></span><br><span class="line"><span class="string">regionCode 	地区编码，已脱敏</span></span><br><span class="line"><span class="string">seller 	销售方：个体：0，非个体：1</span></span><br><span class="line"><span class="string">offerType 	报价类型：提供：0，请求：1</span></span><br><span class="line"><span class="string">creatDate 	汽车上线时间，即开始售卖时间</span></span><br><span class="line"><span class="string">price 	二手车交易价格（预测目标）</span></span><br><span class="line"><span class="string">v系列特征 	匿名特征，包含v0-14在内15个匿名特征</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>数据挖掘</tag>
        <tag>翻译中</tag>
      </tags>
  </entry>
  <entry>
    <title>从键盘、键盘布局到输入法、输入方案</title>
    <url>/zh-cn/posts/c4302071-bbc2-11eb-8847-0772b2ac4cf2/</url>
    <content><![CDATA[<p>在键盘上折腾了很久，把学到的知识总结一下。</p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文仅为<strong>业余爱好之作</strong>，没有详细的理论论证、确切的现实意义、作者也没有系统的知识结构，数据来源于自身经历和网络讯息，对于不了解相关内容的人可以作闲暇时消磨时光之用，对于专业的键盘玩家还请多批评指正。</p>
<hr>
<h1 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h1><h2 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h2><h3 id="壳"><a href="#壳" class="headerlink" title="壳"></a>壳</h3><h3 id="键体"><a href="#键体" class="headerlink" title="键体"></a>键体</h3><ul>
<li>机械轴体</li>
<li>静电容</li>
<li>薄膜键盘</li>
</ul>
<h3 id="键帽"><a href="#键帽" class="headerlink" title="键帽"></a>键帽</h3><ul>
<li>材质</li>
<li>印刻方式</li>
<li>长度</li>
<li>高度</li>
<li>卫星轴啥的</li>
</ul>
<h3 id="其他参数"><a href="#其他参数" class="headerlink" title="其他参数"></a>其他参数</h3><ul>
<li>可编辑布局</li>
<li>发光效果</li>
<li>连接方式</li>
<li>供电方式</li>
<li>可调键压</li>
</ul>
<h2 id="键和键盘布局"><a href="#键和键盘布局" class="headerlink" title="键和键盘布局"></a>键和键盘布局</h2><h3 id="键：从按下到显示"><a href="#键：从按下到显示" class="headerlink" title="键：从按下到显示"></a>键：从按下到显示</h3><h3 id="真正的物理布局：ISO-和-ANSI"><a href="#真正的物理布局：ISO-和-ANSI" class="headerlink" title="真正的物理布局：ISO 和 ANSI"></a>真正的物理布局：ISO 和 ANSI</h3><h3 id="Control-Shift-Alt-Meta-Super"><a href="#Control-Shift-Alt-Meta-Super" class="headerlink" title="Control? Shift? Alt? Meta? Super?"></a>Control? Shift? Alt? Meta? Super?</h3><h3 id="拉丁字母：QWERTY及其衍生产品"><a href="#拉丁字母：QWERTY及其衍生产品" class="headerlink" title="拉丁字母：QWERTY及其衍生产品"></a>拉丁字母：QWERTY及其衍生产品</h3><h3 id="拉丁字母：其它布局"><a href="#拉丁字母：其它布局" class="headerlink" title="拉丁字母：其它布局"></a>拉丁字母：其它布局</h3><ul>
<li><p>Dvorak</p>
</li>
<li><p>Dvorak: One-handed / Programmer</p>
</li>
<li><p>Colemak</p>
</li>
<li><p>Workman / Norman</p>
</li>
</ul>
<h3 id="东亚其它语言"><a href="#东亚其它语言" class="headerlink" title="东亚其它语言"></a>东亚其它语言</h3><ul>
<li><p>日语</p>
</li>
<li><p>韩语</p>
</li>
</ul>
<h3 id="其它语言"><a href="#其它语言" class="headerlink" title="其它语言"></a>其它语言</h3><h2 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h2><h3 id="商业输入法"><a href="#商业输入法" class="headerlink" title="商业输入法"></a>商业输入法</h3><h3 id="开源输入法"><a href="#开源输入法" class="headerlink" title="开源输入法"></a>开源输入法</h3><h2 id="输入方案与输入速度"><a href="#输入方案与输入速度" class="headerlink" title="输入方案与输入速度"></a>输入方案与输入速度</h2><h3 id="正确的输入姿势"><a href="#正确的输入姿势" class="headerlink" title="正确的输入姿势"></a>正确的输入姿势</h3><h3 id="使用拉丁字母-西里尔字母的语言的输入方案"><a href="#使用拉丁字母-西里尔字母的语言的输入方案" class="headerlink" title="使用拉丁字母/西里尔字母的语言的输入方案"></a>使用拉丁字母/西里尔字母的语言的输入方案</h3><h3 id="中文：形码"><a href="#中文：形码" class="headerlink" title="中文：形码"></a>中文：形码</h3><h3 id="中文：声码"><a href="#中文：声码" class="headerlink" title="中文：声码"></a>中文：声码</h3><h3 id="日-韩语"><a href="#日-韩语" class="headerlink" title="日/韩语"></a>日/韩语</h3><h3 id="评价一个输入方案"><a href="#评价一个输入方案" class="headerlink" title="评价一个输入方案"></a>评价一个输入方案</h3><hr>
<h1 id="为什么要折腾？"><a href="#为什么要折腾？" class="headerlink" title="为什么要折腾？"></a>为什么要折腾？</h1><h2 id="成本"><a href="#成本" class="headerlink" title="成本"></a>成本</h2><h2 id="收益"><a href="#收益" class="headerlink" title="收益"></a>收益</h2><hr>
<h1 id="具体实践方案"><a href="#具体实践方案" class="headerlink" title="具体实践方案"></a>具体实践方案</h1><h2 id="如何选择-自定义-一个键盘-及布局-？"><a href="#如何选择-自定义-一个键盘-及布局-？" class="headerlink" title="如何选择(自定义)一个键盘(及布局)？"></a>如何选择(自定义)一个键盘(及布局)？</h2><h3 id="键盘的选择"><a href="#键盘的选择" class="headerlink" title="键盘的选择"></a>键盘的选择</h3><h3 id="修改布局："><a href="#修改布局：" class="headerlink" title="修改布局："></a>修改布局：</h3><h4 id="修改层次："><a href="#修改层次：" class="headerlink" title="修改层次："></a>修改层次：</h4><h5 id="更改扫描码-硬件"><a href="#更改扫描码-硬件" class="headerlink" title="更改扫描码(硬件)"></a>更改扫描码(硬件)</h5><h5 id="更改-OS"><a href="#更改-OS" class="headerlink" title="更改(OS)"></a>更改(OS)</h5><h5 id="使用软件重定向-软件"><a href="#使用软件重定向-软件" class="headerlink" title="使用软件重定向(软件)"></a>使用软件重定向(软件)</h5><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><h4 id="nix"><a href="#nix" class="headerlink" title="*nix"></a>*nix</h4><h4 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h4><p>抱歉，因为是穷比，买不起Mac，但MacOS也是类Unix系统了，可以参照上面</p>
<h2 id="如何选择-自定义-一个输入法？"><a href="#如何选择-自定义-一个输入法？" class="headerlink" title="如何选择(自定义)一个输入法？"></a>如何选择(自定义)一个输入法？</h2><h2 id="如何选择-自定义-一个输入方案？"><a href="#如何选择-自定义-一个输入方案？" class="headerlink" title="如何选择(自定义)一个输入方案？"></a>如何选择(自定义)一个输入方案？</h2><p>测试链接<a href="#ref-01"><sup>1</sup></a></p>
<p>测试链接<a href="#ref-02"><sup>2</sup></a></p>
<hr>
<h1 id="可能存在的问题"><a href="#可能存在的问题" class="headerlink" title="可能存在的问题"></a>可能存在的问题</h1><h2 id="多操作系统同步？"><a href="#多操作系统同步？" class="headerlink" title="多操作系统同步？"></a>多操作系统同步？</h2><h2 id="Vi-Emacs-与-IDE开发？"><a href="#Vi-Emacs-与-IDE开发？" class="headerlink" title="Vi/Emacs 与 IDE开发？"></a>Vi/Emacs 与 IDE开发？</h2><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><div id="ref-0"></div>

<ul>
<li>[1] <a href="https://www.patrick-wied.at/projects/heatmap-keyboard/">键盘热力图可视化</a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[1] <a href="https://tiansh.github.io/lqbz/sp">双拼布局的统计计算</a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[2] <a href="https://macroxue.github.io/shuangpin/eval.html/">双拼方案评测和优化</a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[2] <a href="https://tieba.baidu.com/p/5142753627">小猫双拼</a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[] <a href="https://www.originativeco.com/pages/a-lesson-in-keycaps"></a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[] <a href="https://sspai.com/post/66102"></a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[] <a href="https://www.jianshu.com/p/9a3e820968ee"></a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[] <a href="https://support.wasdkeyboards.com/hc/en-us/articles/115009701328-Keycap-Size-Compatibility"></a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[] <a href="https://www.zfrontier.com/app/flow/4okzKBndN774"></a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[] <a href="https://zhuanlan.zhihu.com/p/32040644"></a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[] <a href="https://dygma.com/pages/mechanical-switches"></a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[] <a href="https://www.howtoip.com/all-those-confusing-mechanical-keyboard-terms-explained/"></a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[] <a href="https://indienova.com/indie-game-development/keyboard-design-and-ui-1/"></a></li>
</ul>
<div id="ref-0"></div>

<ul>
<li>[] <a href="https://switchandclick.com/ansi-vs-iso-layout/"></a></li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>键盘</tag>
        <tag>更新中</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式入门</title>
    <url>/zh-cn/posts/d5481510-bd26-11eb-b78b-b7b8fc29a318/</url>
    <content><![CDATA[<h2 id="0-开始"><a href="#0-开始" class="headerlink" title="0 开始"></a>0 开始</h2><p>当在使用正则表达式时，你的目的就是从字符串中提取出你想要的东西，而正则表达式就是描述你要提取对象的一种语言；这种语言是跨平台的，在.NET, Java, JS, Py, Ruby, PHP上都可以使用。</p>
<p>为了学习这种描述被提取对象的语言，需要一些基础知识。</p>
<p>以下教程主要使用Python标准库的re模块与.NET平台的RegularExpressions模块，并在最后会提供其他语言的范例。</p>
<a id="more"></a>
<h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>字符串(String)是一串字符，类似由字符组成的数组，是编程语言中表示文本的数据类型。</p>
<p>以字符串 “Betty Botter bought some butter.” 为例1</p>
<p>字符串中有元素和位置(或锚点)(Anchor)，这个字符串包含字母，数字，空格，”B”就是一个元素；而位置是指两个字符之间的地方，如”Betty”的”B”和”e”之间的就是一个位置。</p>
<p>任一字符串总有一个开始和结束，即字符串第一个元素之前的位置和最后一个元素之后的位置。</p>
<h3 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h3><p>字符(character)，即字符(难以解释)，可以用不同的编码方式来表示；不了解编码的，可以看阮一峰的<a href="http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html">字符编码笔记：ASCII，Unicode 和 UTF-8</a>。</p>
<p>字符可分为可显示的不显示的，不显示的又有很多种，例如控制字符，半角空格(就是空格)，全角空格(很烦，用这个的见一次打一次)，无中断空格(使单词在结尾不换行显示)，及其他等</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">常见不显示字符</th>
<th style="text-align:center">含义</th>
<th style="text-align:center">Unicode</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">\f</td>
<td style="text-align:center">窗体换页符</td>
<td style="text-align:center">\u000C</td>
</tr>
<tr>
<td style="text-align:center">\n</td>
<td style="text-align:center">换行符(LineFeed/LF)</td>
<td style="text-align:center">\u000A</td>
</tr>
<tr>
<td style="text-align:center">\r</td>
<td style="text-align:center">回车符(Carriage Return/CR)</td>
<td style="text-align:center">\u000D</td>
</tr>
<tr>
<td style="text-align:center">\t</td>
<td style="text-align:center">制表符(Tab)</td>
<td style="text-align:center">\u0009</td>
</tr>
<tr>
<td style="text-align:center">\v</td>
<td style="text-align:center">垂直制表符</td>
<td style="text-align:center">\u000B</td>
</tr>
<tr>
<td style="text-align:center"> “&#32;”</td>
<td style="text-align:center">半角空格</td>
<td style="text-align:center">\u0020</td>
</tr>
<tr>
<td style="text-align:center"> “&#12288;”</td>
<td style="text-align:center">全角空格</td>
<td style="text-align:center">\u3000</td>
</tr>
<tr>
<td style="text-align:center"> “&#160;”</td>
<td style="text-align:center">无中断空格</td>
<td style="text-align:center">\u00A0</td>
</tr>
</tbody>
</table>
</div>
<h3 id="多行与行终止符"><a href="#多行与行终止符" class="headerlink" title="多行与行终止符"></a>多行与行终止符</h3><p>对于字符串来说，如果内部具有换行符/回车符，它可能是一个多行的文本，而多行则需要定义行终止符。</p>
<p>一行的结束并开启新行需要用字符表明，因为在三类主流的操作系统中，完成这个操作的字符不尽相同，因此统称为行终止符(NL)。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">操作系统(类)</th>
<th style="text-align:center">行终止符</th>
<th style="text-align:center">缩写</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Windos</td>
<td style="text-align:center">\r\n</td>
<td style="text-align:center">CRLF </td>
</tr>
<tr>
<td style="text-align:center">Unix/Linux</td>
<td style="text-align:center">\n</td>
<td style="text-align:center">LF</td>
</tr>
<tr>
<td style="text-align:center">MacOS</td>
<td style="text-align:center">\r</td>
<td style="text-align:center">CR</td>
</tr>
</tbody>
</table>
</div>
<h2 id="1-入门"><a href="#1-入门" class="headerlink" title="1 入门"></a>1 入门</h2><p><strong>“入门”</strong> 是正则表达式的基础阶段，如果有一定的正则基础的可以跳过，没有接触过的可以认真阅读。</p>
<p>提前声明：本教程不会让你读完就变成高手，需要大量的练习与自我反思才能够提高使用它的能力。</p>
<h3 id="模式、被匹配对象和结果"><a href="#模式、被匹配对象和结果" class="headerlink" title="模式、被匹配对象和结果"></a>模式、被匹配对象和结果</h3><p>一个正则表达式（以下简称表达式/模式）（pattern）可以用来在一个字符串中获得一些结果，相当于查找，被查找对象即被匹配对象（通常为字符串），查找到的结果可以是一个或一组，正则表达式会将所有符合该模式的结果显示出来。</p>
<p>构造表达式的方法和创建数学表达式的方法一样。也就是用多种元字符与运算符可以将小的表达式结合在一起来创建更大的表达式。正则表达式的组件可以是单个的字符、字符集合、字符范围、字符间的选择或者所有这些组件的任意组合。</p>
<h3 id="普通字符与元字符"><a href="#普通字符与元字符" class="headerlink" title="普通字符与元字符"></a>普通字符与元字符</h3><p>一个模式由元字符(metacharacter)与普通字符构成，并且不必须包含其中一项；普通字符包括没有显式指定为元字符的所有可打印和不可打印字符，即其代表其本身含义的字符，而元字符可以用来代表或确定一些普通字符。</p>
<p>如果一个模式只含有普通字符，它只匹配与自身一致的字符，<br>如在 “Betty Botter bought some butter.” 中<br>模式 <code>&quot;butter&quot;</code> 匹配时，会得到结果<code>&#39;butter&#39;</code> (因为有1个’butter’)<br>而模式 <code>&quot;o&quot;</code> 会得到 <code>[&#39;o&#39;,&#39;o&#39;,&#39;o&#39;]</code>  (因为有3个’o’)</p>
<p>而元字符由一些特殊的符号组成，在学习时并不需要完全熟记并背诵，只需记住常见的即可。所有单独出现的元字符仅代表一个字符。</p>
<h3 id="基本元字符"><a href="#基本元字符" class="headerlink" title="基本元字符"></a>基本元字符</h3><p>*以下表格出现补集的字符集合的全集均为ASCII字符集</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">匹配元素的元字符</th>
<th style="text-align:center">含义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">.</td>
<td style="text-align:center">匹配1个除行终止符(NL)外的字符(全集为所有字符)</td>
</tr>
<tr>
<td style="text-align:center">[A-B]</td>
<td style="text-align:center">字符范围，匹配自然意义上从A到B之间的所有字符(含A,B)，<br>如[0-9]匹配1个从0到9中的任意数字字符</td>
</tr>
<tr>
<td style="text-align:center">[ABC]</td>
<td style="text-align:center">字符集合，匹配1个集合中的所有字符(不包括字符集合中的’-‘)，<br>如[abc]匹配1个a或1个b或1个c</td>
</tr>
<tr>
<td style="text-align:center">^ (位于[]中)</td>
<td style="text-align:center">集合取反，匹配1个集合的补集中的字符<br>如[^a]匹配1个a之外的字符</td>
</tr>
<tr>
<td style="text-align:center">|</td>
<td style="text-align:center">逻辑或，匹配满足”|“两侧任一子模式的字符，可嵌套使用</td>
</tr>
<tr>
<td style="text-align:center">\d</td>
<td style="text-align:center">匹配1个0-9之中的任意数字字符，等价于 [0-9]</td>
</tr>
<tr>
<td style="text-align:center">\D</td>
<td style="text-align:center">匹配1个非数字字符，等价于 [^0-9]</td>
</tr>
<tr>
<td style="text-align:center">\w</td>
<td style="text-align:center">匹配1个a-z,A-Z,0-9及下划线_中的字符，等价于 [a-zA-Z0-9_] </td>
</tr>
<tr>
<td style="text-align:center">\W</td>
<td style="text-align:center">匹配1个非\w匹配的字符符，等价于 [^a-zA-Z0-9\_]</td>
</tr>
<tr>
<td style="text-align:center">\s</td>
<td style="text-align:center">匹配1个空白字符，等价于[ \f\n\r\t\v]</td>
</tr>
<tr>
<td style="text-align:center">\S</td>
<td style="text-align:center">匹配1个非空白字符，等价于[^\f\n\r\t\v]</td>
</tr>
<tr>
<td style="text-align:center">\</td>
<td style="text-align:center">将下一个字符标记为：<br>一个特殊字符(\n表示换行符) <br> 或一个原义字符(\\表示\) <br> 或一个向后引用(\1表示第一个分组) <br> 或一个八进制转义符</td>
</tr>
</tbody>
</table>
</div>
<p>如果要匹配一个被显式定义为元字符的字符，在其前面加上<code>&#39;\&#39;</code>即可将其转义为代表其本身的普通字符</p>
<p>例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;Betty bought butter.&#x27;</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;.&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;B&#x27;, &#x27;e&#x27;, &#x27;t&#x27;, &#x27;t&#x27;, &#x27;y&#x27;, &#x27; &#x27;, &#x27;b&#x27;, &#x27;o&#x27;, &#x27;u&#x27;, &#x27;g&#x27;, &#x27;h&#x27;, &#x27;t&#x27;, &#x27; &#x27;, &#x27;b&#x27;, &#x27;u&#x27;, &#x27;t&#x27;, &#x27;t&#x27;, &#x27;e&#x27;, &#x27;r&#x27;, &#x27;.&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\.&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;.&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;[Bbt]&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;B&#x27;, &#x27;t&#x27;, &#x27;t&#x27;, &#x27;b&#x27;, &#x27;t&#x27;, &#x27;b&#x27;, &#x27;t&#x27;, &#x27;t&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;[^Bbt]&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;e&#x27;, &#x27;y&#x27;, &#x27; &#x27;, &#x27;o&#x27;, &#x27;u&#x27;, &#x27;g&#x27;, &#x27;h&#x27;, &#x27; &#x27;, &#x27;u&#x27;, &#x27;e&#x27;, &#x27;r&#x27;, &#x27;.&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;[^ \w]&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;.&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;[B....]&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;Betty&#x27;]</span></span><br></pre></td></tr></table></figure></p>
<h3 id="表示重复含义的元字符"><a href="#表示重复含义的元字符" class="headerlink" title="表示重复含义的元字符"></a>表示重复含义的元字符</h3><p>在上节最后一个例子中，为了匹配B开头的五个字符的元素，将”.”重复的4遍，这是没有必要且不简洁的，因此还有一些元字符是为了修饰其之前的字符的，表达重复的含义</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">表示重复含义的元字符</th>
<th style="text-align:center">含义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">*</td>
<td style="text-align:center">尽可能多的重复匹配前一个字符零次或多次 (&gt;=0)</td>
</tr>
<tr>
<td style="text-align:center">+</td>
<td style="text-align:center">尽可能多的重复匹配前一个字符一次或多次 (&gt;=1)</td>
</tr>
<tr>
<td style="text-align:center">? <br>(前一个字符非*或+时)</td>
<td style="text-align:center">重复匹配前一个字符零次或一次 (==0 “&amp;#124” ==1)</td>
</tr>
<tr>
<td style="text-align:center">{n}</td>
<td style="text-align:center">重复n次 (==n)</td>
</tr>
<tr>
<td style="text-align:center">{n,}</td>
<td style="text-align:center">重复n次或更多次 (&gt;=n)</td>
</tr>
<tr>
<td style="text-align:center">{n,m}</td>
<td style="text-align:center">重复n到m次 (&gt;=n &amp;&amp; &lt;=m)</td>
</tr>
</tbody>
</table>
</div>
<p>当<code>&quot;?&quot;</code>修饰<code>&quot;*&quot;</code>或<code>&quot;+&quot;</code>时，会尽可能少的重复匹配，下节详讲。</p>
<p>例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;Betty Tom 12345678 123455&#x27;</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d*&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;12345678&#x27;, &#x27;&#x27;, &#x27;123455&#x27;, &#x27;&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d+&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;12345678&#x27;, &#x27;123455&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;5?&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;5&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;&#x27;, &#x27;5&#x27;, &#x27;5&#x27;, &#x27;&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;5&#123;1,&#125;&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;5&#x27;, &#x27;55&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;5&#123;1,&#125;?&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;5&#x27;, &#x27;5&#x27;, &#x27;5&#x27;]</span></span><br></pre></td></tr></table></figure>
<h3 id="重复的贪婪与懒惰"><a href="#重复的贪婪与懒惰" class="headerlink" title="重复的贪婪与懒惰"></a>重复的贪婪与懒惰</h3><p>当正则表达式中包含能接受重复的元字符时，在使整个表达式能得到匹配的前提下匹配尽可能多的字符，这是默认的，也叫贪婪匹配。如：<br><code>a\w*n</code>在匹配<code>&quot;amazon&quot;</code>时，<code>&quot;amazon&quot;</code>与<code>&quot;azon&quot;</code>都符合这个模式，但贪婪情况下只会匹配到<code>&quot;amazon&quot;</code>。</p>
<p>但有时不需要贪婪匹配，需要得到含有尽可能少的符合模式的字符串，就需要使用懒惰匹配。所有的表示重复的元字符都可以被转化为懒惰匹配，需要在其后加上一个<code>&quot;?&quot;</code>。如：<br><code>a\w*?[mn]</code>在匹配<code>&quot;amazon&quot;</code>时，会得到<code>&quot;am&quot;</code>与<code>&quot;azon&quot;</code></p>
<h3 id="逻辑或"><a href="#逻辑或" class="headerlink" title="逻辑或"></a>逻辑或</h3><p><code>&quot;|&quot;</code>元字符表示前后的条件为或的关系，即匹配满足左右任一模式的字符串，也叫做分支条件(Branch Condition), 但分支条件与一般的高级语言一样，若满足左侧的模式，则不会去匹配右侧的模式。</p>
<p>例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;13812345678 13912345678 14012345678&#x27;</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;138.&#123;8&#125;|139.&#123;8&#125;&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;13812345678&#x27;, &#x27;13912345678&#x27;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="2-进阶"><a href="#2-进阶" class="headerlink" title="2 进阶"></a>2 进阶</h2><p><strong>“进阶”</strong> 会提到常用的和不常用的非初级方法，但不都是必须掌握的。</p>
<p>提前声明：本教程不会让你读完就变成高手，需要大量的练习与自我反思才能够提高使用它的能力。</p>
<h3 id="分组"><a href="#分组" class="headerlink" title="分组"></a>分组</h3><p>在 <em>表示重复含义的元字符</em> 里提到了通过特殊的元字符修饰之前的元字符，可以重复单个字符，但不能重复多个字符，此时需要引入分组的概念。</p>
<p>分组也叫子表达式，是指使用半角括号<code>&quot;(&quot;</code>,<code>&quot;)&quot;</code>包围的表达式，这个表达式可作为一个整体被重复。</p>
<p>分组可以简单的分为 捕获组 和 非捕获组。</p>
<h3 id="捕获"><a href="#捕获" class="headerlink" title="捕获"></a>捕获</h3><p>在之前的例子中，匹配的结果包含模式中的所有字符，但如果想要在字符串<code>&quot;Betty bought butter&quot;</code>中获得<code>&quot;bought&quot;</code>, 就需要理解捕获(Capture)的概念了。</p>
<p>当需要从一个模式中提取一部分内容而不是全部内容的时候，需要在模式中加入分组，即用括号包住一部分表达式，这样在匹配时，如果负荷模式，就将这一部分存入内存，并加入标签，之后可以使用它。</p>
<p>例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&quot;Betty bought butter&quot;</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;Betty .+? butter&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;Betty bought butter&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#加入分组</span></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;Betty (.+?) butter&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;bought&#x27;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>可以理解分组为 匹配一个”条件A(条件B)条件C”的模式，然后将条件B匹配得到的结果存储在内存备用。</p>
<p>因为分组是默认捕获的，那么问题又来了，当我需要重复一个分组重复出现，但不需要这个分组的内容出现在结果中占用内存，如何处理？</p>
<p>非捕获组，顾名思义，就是匹配分组但不捕获分组，从而减少内存的消耗。而定义一个非捕获组的形式如下：</p>
<p><code>&quot;(?:pattern)&quot;</code> 其中pattern表示一个子模式</p>
<p>例：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;Betty bought butterBetty.butter.&#x27;</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;Betty(?:[ ]?)(.+?)(?:butter)&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [&#x27;bought&#x27;, &#x27;.&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;Betty([ ]?)(.+?)(butter)&#x27;</span>)</span><br><span class="line">reg.findall(s)</span><br><span class="line"><span class="comment"># [(&#x27; &#x27;, &#x27;bought &#x27;, &#x27;butter&#x27;), (&#x27;&#x27;, &#x27;.&#x27;, &#x27;butter&#x27;)]</span></span><br><span class="line"><span class="comment"># 以上说明共匹配到两组结果，第一组由&#x27; &#x27;等三个组成，第二组由&#x27;&#x27;等三个组成</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="组和引用"><a href="#组和引用" class="headerlink" title="组和引用"></a>组和引用</h3><p>当了解了分组后，问题又来了，如果我想在表达式的后面某一部分使用前方匹配到的结果，怎么处理？比如<code>&quot;@Andy, Andy:Class1, Andrew:Class2, Albert:Class3&quot;</code>中需要把”@”后面的人名代表的班级找出来，但是”@”后可以是任意一人，这是就需要引用之前的结果。</p>
<p>当一个模式完成匹配后，会得到一个组(Group) (以Py为例),其中的每一个子项代表了一次捕获，以上一个例子，<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;Betty bought butterBetty.butter.&#x27;</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;Betty([ ]?)(.+?)(butter)&#x27;</span>)</span><br><span class="line">s = <span class="string">&#x27;Betty bought butterBetty.butter.&#x27;</span></span><br><span class="line">a = reg.match(s)</span><br><span class="line">print(a.groups())</span><br><span class="line">print(a.group(<span class="number">0</span>))</span><br><span class="line">print(a.group(<span class="number">1</span>))</span><br><span class="line">print(a.group(<span class="number">2</span>))</span><br><span class="line">print(a.group(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#(&#x27; &#x27;, &#x27;bought &#x27;, &#x27;butter&#x27;)</span></span><br><span class="line"><span class="comment">#Betty bought butter</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#bought </span></span><br><span class="line"><span class="comment">#butter</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;Betty([ ]?)(.+?)(?:butter)&#x27;</span>)</span><br><span class="line">s = <span class="string">&#x27;Betty bought butterBetty.butter.&#x27;</span></span><br><span class="line">a = reg.match(s)</span><br><span class="line">print(a.groups())</span><br><span class="line">print(a.group(<span class="number">0</span>))</span><br><span class="line">print(a.group(<span class="number">1</span>))</span><br><span class="line">print(a.group(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">#(&#x27; &#x27;, &#x27;bought &#x27;)</span></span><br><span class="line"><span class="comment">#Betty bought butter</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment">#bought</span></span><br></pre></td></tr></table></figure><br>可看到组0代表整个表达式本身，也是一个元组，组1即第一个结果，以此类推。</p>
<p>这是结果中的体现，在表达式中，使用 元字符<code>&quot;\X&quot;</code>其中X为一个数字，也是这个组的编号 可以表示一个捕获的组(的内容)，<strong>实质上是一个字符串</strong>，如<code>&#39;Betty([ ]?)(.+?)(\1)&#39;</code>中’\1’代表的是’’或’ ‘，而不是这个表达式”([ ]?)”</p>
<p>需要注意的是，因为引用实质上是一个捕获后的字符串，所以非捕获组无法被引用。</p>
<p>以上是通过数字进行引用，分组还可以被命名，从而通过一个名字来引用</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">语言</th>
<th style="text-align:center">分组记法</th>
<th style="text-align:center">表达式中的引用记法</th>
<th style="text-align:center">替换时的引用的记法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">.NET</td>
<td style="text-align:center">(&lt;name&gt;…)</td>
<td style="text-align:center">\k&lt;name></td>
<td style="text-align:center">${name}</td>
</tr>
<tr>
<td style="text-align:center">PHP</td>
<td style="text-align:center">(?P&lt;name&gt;…)</td>
<td style="text-align:center">(?P=name)</td>
<td style="text-align:center">PHP 5.2.2 以后可以使用\k&lt;name&gt; 或者\k’name’<br>PHP 5.2.4 之后可以使用\k{name}和\g{name}</td>
</tr>
<tr>
<td style="text-align:center">Python</td>
<td style="text-align:center">(?P&lt;name&gt;…)</td>
<td style="text-align:center">(?P=name)</td>
<td style="text-align:center">\g&lt;name&gt;</td>
</tr>
<tr>
<td style="text-align:center">Ruby</td>
<td style="text-align:center">(?&lt;name&gt;…)</td>
<td style="text-align:center">\k&lt;name&gt;</td>
<td style="text-align:center">\k&lt;name&gt;</td>
</tr>
</tbody>
</table>
</div>
<p>例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;Betty(?P&lt;a&gt;[ ]?)(.+?)(?P=a)&#x27;</span>)</span><br><span class="line">s = <span class="string">&#x27;Betty bought butter.&#x27;</span></span><br><span class="line">a = reg.match(s)</span><br><span class="line">print(a.groups())</span><br><span class="line">print(a.group(<span class="number">0</span>))</span><br><span class="line">print(a.group(<span class="number">1</span>))</span><br><span class="line">print(a.group(<span class="number">2</span>))</span><br></pre></td></tr></table></figure></p>
<h3 id="NFA引擎基础知识"><a href="#NFA引擎基础知识" class="headerlink" title="NFA引擎基础知识"></a>NFA引擎基础知识</h3><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><p>正则表达式引擎可以理解为不同语言下正则表达式的内核，而目前主要使用的引擎是NFA引擎(Non-deterministic finite automaton, 非确定型有穷自动机)，还有使用DFA引擎的语言，暂不做讨论</p>
<p>大多数语言和工具使用的是传统型的NFA引擎，它有一些DFA不支持的特性：</p>
<ul>
<li>捕获组、反向引用和$number引用方式；</li>
<li>环视(Lookaround，(?&lt;=…)、(?&lt;!…)、(?=…)、(?!…))，或者有的有文章叫做预搜索；</li>
<li>忽略优化量词（??、*?、+?、{m,n}?、{m,}?），或者有的文章叫做非贪婪模式；</li>
<li>占有优先量词（?+、*+、++、{m,n}+、{m,}+，目前仅Java和PCRE支持），固化分组(?&gt;…)。</li>
</ul>
<h4 id="占有字符和零宽度"><a href="#占有字符和零宽度" class="headerlink" title="占有字符和零宽度"></a>占有字符和零宽度</h4><p>正则表达式匹配过程中，如果子表达式匹配到的是字符内容，而非位置，并被保存到最终的匹配结果中，那么就认为这个子表达式是占有字符的；如果子表达式匹配的仅仅是位置，或者匹配的内容并不保存到最终的匹配结果中，那么就认为这个子表达式是零宽度的。</p>
<p><strong>占有字符是互斥的，零宽度是非互斥的。也就是一个字符，同一时间只能由一个子表达式匹配，而一个位置，却可以同时由多个零宽度的子表达式匹配。</strong></p>
<h4 id="控制权和传动"><a href="#控制权和传动" class="headerlink" title="控制权和传动"></a>控制权和传动</h4><p>正则的匹配过程，通常情况下都是由一个子表达式（可能为一个普通字符、元字符或元字符序列组成）取得控制权，从字符串的某一位置开始尝试匹配，一个子表达式开始尝试匹配的位置，是从前一子表达匹配成功的结束位置开始的。如正则表达式：</p>
<p><code>&quot;(Pattern1)(Pattern2)&quot;</code></p>
<p>假设<code>&quot;(Pattern1)&quot;</code>为零宽度表达式，由于它匹配开始和结束的位置是同一个，如位置0，那么<code>&quot;(Pattern2)&quot;</code>是从位置0开始尝试匹配的。</p>
<p>假设<code>&quot;(Pattern1)&quot;</code>为占有字符的表达式，由于它匹配开始和结束的位置不是同一个，如匹配成功开始于位置0，结束于位置2，那么<code>&quot;(Pattern2)&quot;</code>是从位置2开始尝试匹配的。</p>
<p>而对于整个表达式来说，通常是由字符串位置0开始尝试匹配的。如果在位置0开始的尝试，匹配到字符串某一位置时整个表达式匹配失败，那么引擎会使表达式整体向前传动，整个表达式从位置1开始重新尝试匹配，依此类推，直到报告匹配成功或尝试到最后一个位置后报告匹配失败。</p>
<h3 id="零宽断言-环视-预搜索"><a href="#零宽断言-环视-预搜索" class="headerlink" title="零宽断言/环视/预搜索"></a>零宽断言/环视/预搜索</h3><p>当一个字符被一个模式占有了，但还是需要匹配这个字符，就会产生问题。</p>
<p>因此，产生了匹配位置的元字符，这种东西也叫 断言(Assert)/环视(Lookaround)/预搜索(Presearch)，具体的名字无关紧要，它本身是用来匹配字符串内的一个位置的，具体格式如下：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">表达式</th>
<th style="text-align:center">说明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">(?=Pattern)</td>
<td style="text-align:center">顺序肯定环视，匹配某位置右侧能够匹配Pattern的位置</td>
</tr>
<tr>
<td style="text-align:center">(?!Pattern)</td>
<td style="text-align:center">顺序否定环视，匹配某位置右侧不能匹配Pattern的位置</td>
</tr>
<tr>
<td style="text-align:center">(?&lt;=Pattern)</td>
<td style="text-align:center">逆序肯定环视，匹配某位置左侧能够匹配Pattern的位置</td>
</tr>
<tr>
<td style="text-align:center">(?&lt;!Pattern)</td>
<td style="text-align:center">逆序否定环视，匹配某位置左侧不能匹配Pattern的位置</td>
</tr>
</tbody>
</table>
</div>
<h4 id="顺序环视"><a href="#顺序环视" class="headerlink" title="顺序环视"></a>顺序环视</h4><p>顺序环视都是匹配一个位置右侧满足/不满足条件的位置。</p>
<p>对于肯定环视(?=P1)来说，当子表达式P1匹配成功时，(?=P1)匹配成功，并报告(?=P1)匹配当前位置成功，控制权移交下一个元字符，并从当前位置开始匹配；否则报告失败，返回备选或整体移动。</p>
<p>对于否定环视(?!P1)来说，当子表达式P1匹配成功时，(?!P1)匹配失败，并报告失败，返回备选或整体移动；若P1匹配失败，(?!P1)匹配当前位置成功，控制权移交下一个元字符，并从当前位置开始匹配。</p>
<p>例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;13712345678 13912345679&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果需要找一个137或138开头的十一位的手机号，用之前的元字符如何写？</span></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;((137|138)\d&#123;8&#125;)&#x27;</span>)</span><br><span class="line">s = <span class="string">&#x27;13712345678 13812345679 13911111111&#x27;</span></span><br><span class="line">a = reg.findall(s)</span><br><span class="line">print(a)</span><br><span class="line"><span class="comment">#[(&#x27;13712345678&#x27;, &#x27;137&#x27;), (&#x27;13812345679&#x27;, &#x27;138&#x27;)]</span></span><br><span class="line"><span class="comment">#虽然得到了想要的输出，但多了些别的东西</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#使用环视后</span></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(?=137|138)\d&#123;11&#125;&#x27;</span>)</span><br><span class="line">a = reg.findall(s)</span><br><span class="line">print(a)</span><br><span class="line"><span class="comment">#[&#x27;13712345679&#x27;, &#x27;13812345679&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;(?!137|138)\d&#123;11&#125;&#x27;</span>)</span><br><span class="line">a = reg.findall(s)</span><br><span class="line">print(a)</span><br><span class="line"><span class="comment">#[&#x27;13912345679&#x27;]</span></span><br></pre></td></tr></table></figure></p>
<h4 id="逆序环视"><a href="#逆序环视" class="headerlink" title="逆序环视"></a>逆序环视</h4><p>逆序环视都是匹配一个位置左侧满足/不满足条件的位置。</p>
<p>逆序环视的成功失败过程与顺序类似，但：</p>
<p>顺序环视相当于在当前位置右侧附加一个条件，所以它的匹配尝试是从当前位置开始的，然后向右尝试匹配，直到成功或失败。而逆序环视的特殊处在于，它相当于在当前位置左侧附加一个条件，所以它不是在当前位置开始尝试匹配的，而是从当前位置左侧某一位置开始，匹配到当前位置为止，报告匹配成功或失败。</p>
<p>顺序环视尝试匹配的起点是确定的，就是当前位置，而匹配的终点是不确定的。逆序环视匹配的起点是不确定的，是当前位置左侧某一位置，而终点是确定的，就是当前位置。</p>
<p>所以顺序环视相对是简单的，而逆序环视相对是复杂的。这也就是为什么大多数语言和工具都提供了对顺序环视的支持，而只有少数语言提供了对逆序环视支持的原因。</p>
<ul>
<li>JavaScript中只支持顺序环视，不支持逆序环视。</li>
<li>Java中虽然顺序环视和逆序环视都支持，但是逆序环视只支持长度确定的表达式，逆序环视中量词只支持“?”，不支持其它长度不定的量词。长度确定时，引擎可以向左查找固定长度的位置作为起点开始尝试匹配，而如果长度不确定时，就要从当前位置向左逐个位置开始尝试匹配，不成功则回溯，再向左侧位置进行尝试匹配，然后重复以上过程，直到匹配成功，或是尝试到位置0处以后，报告匹配失败，处理的复杂度是显而易见的。</li>
<li>目前只有.NET中支持不确定长度的逆序环视。</li>
</ul>
<p>如果想要深入了解逆序环视，请直接阅读以下文章 <a href="https://blog.csdn.net/lxcnn/article/details/5126888">正则匹配原理之——逆序环视深入</a></p>
<h3 id="其他锚字符"><a href="#其他锚字符" class="headerlink" title="其他锚字符"></a>其他锚字符</h3><p>当需要匹配一个特殊的位置，比如字符串首与字符串末，单词边界等，有对应的元字符可以匹配，这些元字符也叫锚字符</p>
<p>常见锚字符如下：<br>锚字符 | 意义<br>:-:|:-:<br>^| 单行模式中，匹配字符串的开始(第0个位置)<br>多行模式中，匹配行终止符后的位置<br>$| 单行模式中，匹配字符串的结束(最后一个位置)<br>多行模式中，匹配行终止符前的位置<br>\A| 在单行与多行模式中，均匹配字符串的开始(第0个位置)<br>\Z \z| 在单行与多行模式中，均匹配字符串的结束(最后一个位置)<br>\b \&lt;| 匹配一个单词边界位置<br>\b 在字符组中，表示一个退格键<br>\B \>| 匹配一个非单词边界位置<br>(?=) (?!) (?&lt;=) (?&lt;!)| 环视也是锚字符</p>
<p>其中，单词的定义是很关键的，但是基本情况下，正则表达式的单词即为<code>&#39;\w&#39;</code>定的字符集合；而<code>&#39;\w&#39;</code>定义的字符集合又是不确定的。在支持ASCII码的语言中，如JavaScript，<code>&#39;\w&#39;</code>等价于[a-zA-Z0-9_] ；在支持Unicode的语言中，如.NET，默认情况下，<code>&#39;\w&#39;</code>除可以匹配[a-zA-Z0-9_]外，还可以匹配一些Unicode字符集，如汉字，全角数字等等,但是Java是支持Unicode的，但Java的正则中的<code>&#39;\w&#39;</code>却是等价于[a-zA-Z0-9_]的，但Java的正则中的<code>&#39;\b&#39;</code>却是支持Unicode字符的。</p>
<p>那么<code>&#39;\b&#39;</code>匹配的位置就可以这样描述，匹配一个<code>&#39;\w与\W&#39;</code>、<code>&#39;^与\w&#39;</code>或<code>&#39;\w与$&#39;</code>之间的位置</p>
<p>例：<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">s = <span class="string">&#x27;13712345678 13812345679 13911111111&#x27;</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\b138.+?\b&#x27;</span>)</span><br><span class="line">a = reg.findall(s)</span><br><span class="line">print(a)</span><br><span class="line"><span class="comment">#[&#x27;13812345679&#x27;]</span></span><br><span class="line"></span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\B.+?\b&#x27;</span>)</span><br><span class="line">a = reg.findall(s)</span><br><span class="line">print(a)</span><br><span class="line"><span class="comment">#[&#x27;3712345678&#x27;, &#x27;3812345679&#x27;, &#x27;3911111111&#x27;]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<h3 id="模式修饰符"><a href="#模式修饰符" class="headerlink" title="模式修饰符"></a>模式修饰符</h3><p>这个小节的内容以Python的re模块为例，不是所有语言下的正则表达式均支持。</p>
<p>使用模式修饰符(modifier)对整个表达式进行设置，可以达到不同的效果</p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">模式修饰符</th>
<th style="text-align:center">英文</th>
<th style="text-align:center">意义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">I</td>
<td style="text-align:center">IGNORECASE</td>
<td style="text-align:center">对于英文字符忽略大小写的区别</td>
</tr>
<tr>
<td style="text-align:center">L</td>
<td style="text-align:center">LOCALE</td>
<td style="text-align:center">字符集本地化，使\w\b\s及其反义取决与当前语言环境<br>解决\w在法语中不能匹配”é”等字符类似问题</td>
</tr>
<tr>
<td style="text-align:center">M</td>
<td style="text-align:center">MULTILINE</td>
<td style="text-align:center">改变”^”和”$“的含义，使其不再匹配字符串的首尾，匹配行的开始与结束<br>“^”匹配？？？的位置，”$“匹配？？？的位置</td>
</tr>
<tr>
<td style="text-align:center">S</td>
<td style="text-align:center">DOTALL</td>
<td style="text-align:center">使”.”匹配任何字符，包括行终止符</td>
</tr>
<tr>
<td style="text-align:center">X</td>
<td style="text-align:center">VERBOSE</td>
<td style="text-align:center">使正则表达式为多行，并且忽略表达式中的行终止符与注释，方便注释</td>
</tr>
<tr>
<td style="text-align:center">U</td>
<td style="text-align:center">UNICODE</td>
<td style="text-align:center">用来正确处理大于 \uFFFF 的Unicode字符。也就是说，会正确处理四个字符的 UTF-16 编码。</td>
</tr>
<tr>
<td style="text-align:center">G</td>
<td style="text-align:center">GLOBAL</td>
<td style="text-align:center">用来进行全局匹配，不限制下一次匹配开始的位置。</td>
</tr>
<tr>
<td style="text-align:center">Y</td>
<td style="text-align:center">STICKY</td>
<td style="text-align:center">用来进行全局匹配，限制下一次匹配开始的位置为上一次匹配结束的位置。</td>
</tr>
</tbody>
</table>
</div>
<p><strong>模式修饰符可以被设定为全局的(整个表达式)，或部分的(只对某个子表达式起作用)</strong>，但在不同的语言有不同的表现形式。</p>
<h3 id="其他元字符"><a href="#其他元字符" class="headerlink" title="其他元字符"></a>其他元字符</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">元字符</th>
<th style="text-align:center">意义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">(?#comment)</td>
<td style="text-align:center">注释，即这个分组内的文字不会被使用，当作零宽字符处理<br>在多行模式下适合加入注释</td>
</tr>
<tr>
<td style="text-align:center">$</td>
<td style="text-align:center">单行模式中，匹配字符串的结束(最后一个位置)<br>多行模式中，匹配行终止符前的位置</td>
</tr>
<tr>
<td style="text-align:center">\A</td>
<td style="text-align:center">在单行与多行模式中，均匹配字符串的开始(第0个位置)</td>
</tr>
<tr>
<td style="text-align:center">\Z \z</td>
<td style="text-align:center">在单行与多行模式中，均匹配字符串的结束(最后一个位置)</td>
</tr>
<tr>
<td style="text-align:center">\b \&lt;</td>
<td style="text-align:center">匹配一个单词边界位置<br>\b 在字符组中，表示一个退格键</td>
</tr>
<tr>
<td style="text-align:center">\B \></td>
<td style="text-align:center">匹配一个非单词边界位置</td>
</tr>
<tr>
<td style="text-align:center">(?=) (?!) (?&lt;=) (?&lt;!)</td>
<td style="text-align:center">环视也是锚字符</td>
</tr>
</tbody>
</table>
</div>
<h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><h3 id="平衡组"><a href="#平衡组" class="headerlink" title="平衡组"></a>平衡组</h3><h2 id="3-思维"><a href="#3-思维" class="headerlink" title="3 思维"></a>3 思维</h2><h2 id="4-在不同语言的具体应用"><a href="#4-在不同语言的具体应用" class="headerlink" title="4 在不同语言的具体应用"></a>4 在不同语言的具体应用</h2><h2 id="5-正则的底层运作过程"><a href="#5-正则的底层运作过程" class="headerlink" title="5 正则的底层运作过程"></a>5 正则的底层运作过程</h2><hr>
<p><strong>参考文献</strong></p>
<p><a href="http://www.zjmainstay.cn/my-regexp">http://www.zjmainstay.cn/my-regexp</a><br><a href="http://www.zjmainstay.cn/deep-regexp">http://www.zjmainstay.cn/deep-regexp</a><br><a href="https://www.php.net/manual/zh/reference.pcre.pattern.modifiers.php">https://www.php.net/manual/zh/reference.pcre.pattern.modifiers.php</a><br><a href="https://www.runoob.com/python/python-reg-expressions.html#flags">https://www.runoob.com/python/python-reg-expressions.html#flags</a><br><a href="https://blog.csdn.net/lxcnn/article/details/4355364">https://blog.csdn.net/lxcnn/article/details/4355364</a><br><a href="https://blog.csdn.net/lxcnn/article/details/4304651">https://blog.csdn.net/lxcnn/article/details/4304651</a><br><a href="https://blog.csdn.net/zx48822821/article/details/80743997">https://blog.csdn.net/zx48822821/article/details/80743997</a><br><a href="https://blog.csdn.net/ww430430/article/details/78403536">https://blog.csdn.net/ww430430/article/details/78403536</a><br><a href="https://blog.csdn.net/qq_20412595/article/details/82633501">https://blog.csdn.net/qq_20412595/article/details/82633501</a></p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>更新中</tag>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title>影视字幕</title>
    <url>/zh-cn/posts/c4302081-bbc2-11eb-8847-0772b2ac4cf2/</url>
    <content><![CDATA[<h2 id="电视剧"><a href="#电视剧" class="headerlink" title="电视剧"></a>电视剧</h2><h3 id="Yes-Minister-YM"><a href="#Yes-Minister-YM" class="headerlink" title="Yes, Minister [[YM]]"></a><a href="https://github.com/obster-y/Subtitles/tree/master/%5BSeries%5D%5BYes-Minister%5D">Yes, Minister [[YM]]</a></h3><p><strong>已完成</strong>:</p>
<ul>
<li>S01E01 Open Government.srt</li>
<li>S01E02 The Official Visit.srt</li>
<li>S01E03 The Economy Drive.srt</li>
<li>S01E04 Big Brother.srt</li>
<li>S01E05 The Writing on the Wall.srt</li>
<li>S01E06 The Right to Know.srt </li>
</ul>
<p><strong>正在做</strong>:</p>
<ul>
<li>S01E07~S03E07</li>
<li>SP: Party Games</li>
</ul>
<h3 id="Yes-Prime-Minister-YM"><a href="#Yes-Prime-Minister-YM" class="headerlink" title="Yes, Prime Minister [[YM]]"></a><a href="https://github.com/obster-y/Subtitles/tree/master/%5BSeries%5D%5BYes-Prime-Minister%5D">Yes, Prime Minister [[YM]]</a></h3><p><strong>正在做</strong>:</p>
<ul>
<li>S01</li>
<li>S02</li>
</ul>
<h2 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h2>]]></content>
      <categories>
        <category>娱乐</category>
      </categories>
      <tags>
        <tag>更新中</tag>
        <tag>字幕</tag>
      </tags>
  </entry>
  <entry>
    <title>中国各级行政区划（英文）</title>
    <url>/zh-cn/posts/b4c93490-bd3a-11eb-9038-b921475f734a/</url>
    <content><![CDATA[<p>中国行政区划（英文）</p>
<a id="more"></a>
<h1 id="五级行政区划"><a href="#五级行政区划" class="headerlink" title="五级行政区划"></a>五级行政区划</h1><ol>
<li><p>国家(State Level)</p>
<blockquote>
<p>中华人民共和国：the People’s Republic of China; P.R.China; P.R.C; China</p>
</blockquote>
</li>
<li><p>省级(Provincial Level)</p>
<blockquote>
<p>省：Province</p>
<p>自治区：Autonomous Region</p>
<p>直辖市：Municipality / Municipality directly under the Central Government</p>
<p>特别行政区：Special Administration Region / SAR</p>
</blockquote>
</li>
<li><p>地级(Prefectural Level)</p>
<blockquote>
<p>地区：Prefecture</p>
<p>自治州：Autonomous Prefecture</p>
<p>市：Municipality / City</p>
<p>盟：Prefecture</p>
</blockquote>
</li>
<li><p>县级(County Level)</p>
<blockquote>
<p>县：County</p>
<p>自治县：Autonomous County</p>
<p>县级市：City</p>
<p>市辖区：District</p>
<p>旗：County</p>
</blockquote>
</li>
<li><p>乡级(Township Level)</p>
<blockquote>
<p>乡：Township</p>
<p>镇：Town</p>
<p>街道：Sub-district</p>
<p>民族乡：Ethnic Township</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>小知识</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode 30 训练记录 (基本算法)</title>
    <url>/zh-cn/posts/c4304785-bbc2-11eb-8847-0772b2ac4cf2/</url>
    <content><![CDATA[<p>把30篇博文合并成一篇，记录 leetcode 的30天训练以及结果</p>
<p>第一天<br><a href="https://leetcode.com/problems/two-sum/">两数之和</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">twoSum</span>(<span class="params">self, nums: List[<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; List[int]:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(nums) &lt; <span class="number">2</span>: <span class="keyword">return</span> []</span><br><span class="line">        dic = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i, e <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> e <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">return</span> [dic[e], i]</span><br><span class="line">            dic[target - e] = i</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-01-Two-Sum-LC.png" alt=""></p>
<a id="more"></a>
<hr>
<p>第二天<br><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-array/">已排序列表去重</a><br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeDuplicates</span>(<span class="params">self, nums: List[<span class="built_in">int</span>]</span>) -&gt; int:</span></span><br><span class="line">        _ = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">if</span> _ &lt; <span class="number">2</span>: <span class="keyword">return</span> _</span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> j xrange(<span class="number">1</span>,_):</span><br><span class="line">            <span class="keyword">if</span> nums[j] != nums[i]:</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                nums[i] = nums[j]</span><br><span class="line">        <span class="keyword">return</span> i+<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-02-Rm-Dup-LC.png" alt=""></p>
<hr>
<p>第三天<br><a href="https://leetcode.com/problems/remove-element/">删除元素</a><br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeElement</span>(<span class="params">self, nums: List[<span class="built_in">int</span>], val: <span class="built_in">int</span></span>) -&gt; int:</span></span><br><span class="line">        <span class="keyword">while</span> val <span class="keyword">in</span> nums: nums.remove(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(nums)</span><br></pre></td></tr></table></figure></p>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-03-Rm-El-LC.png" alt=""></p>
<hr>
<p>第四天<br><a href="https://leetcode.com/problems/3sum/">三数之和</a><br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">threeSum</span>(<span class="params">self, nums: List[<span class="built_in">int</span>]</span>) -&gt; List[List[int]]:</span></span><br><span class="line">        l = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">if</span> l &lt; <span class="number">3</span>: <span class="keyword">return</span> []</span><br><span class="line">        nums.sort()</span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> pt <span class="keyword">in</span> <span class="built_in">range</span>(l - <span class="number">2</span>):</span><br><span class="line">            <span class="keyword">if</span> nums[pt] &gt; <span class="number">0</span>: <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> pt &gt; <span class="number">0</span> <span class="keyword">and</span> nums[pt] == nums[pt - <span class="number">1</span>]: <span class="keyword">continue</span></span><br><span class="line">            lf, rg = pt + <span class="number">1</span>, l - <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> lf &lt; rg:</span><br><span class="line">                _ = nums[lf] + nums[rg] + nums[pt]</span><br><span class="line">                <span class="keyword">if</span> _ &lt; <span class="number">0</span>:</span><br><span class="line">                    lf += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> _ &gt; <span class="number">0</span>:</span><br><span class="line">                    rg -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    res.append([nums[lf], nums[rg], nums[pt]])</span><br><span class="line">                    <span class="keyword">while</span> lf &lt; rg <span class="keyword">and</span> nums[lf] == nums[lf + <span class="number">1</span>]:</span><br><span class="line">                        lf += <span class="number">1</span></span><br><span class="line">                    <span class="keyword">while</span> lf &lt; rg <span class="keyword">and</span> nums[rg] == nums[rg - <span class="number">1</span>]:</span><br><span class="line">                        rg -= <span class="number">1</span></span><br><span class="line">                    lf += <span class="number">1</span></span><br><span class="line">                    rg -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span>(res)</span><br></pre></td></tr></table></figure></p>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-04-3S-LC.png" alt=""></p>
<hr>
<p>第五天<br><a href="https://leetcode.com/problems/3sum-closest/">最近三数之和</a><br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">threeSumClosest</span>(<span class="params">self, nums: [<span class="built_in">int</span>], target: <span class="built_in">int</span></span>) -&gt; int:</span></span><br><span class="line">        l = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">if</span> l &lt; <span class="number">3</span>: <span class="keyword">return</span> []</span><br><span class="line">        nums.sort()</span><br><span class="line">        res = []</span><br><span class="line"></span><br><span class="line">        lastsum = nums[<span class="number">0</span>] + nums[<span class="number">1</span>] + nums[-<span class="number">1</span>]</span><br><span class="line">        _ = lastsum</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> pt <span class="keyword">in</span> <span class="built_in">range</span>(l - <span class="number">2</span>):</span><br><span class="line">            lf, rg = pt + <span class="number">1</span>, l - <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> pt &gt; <span class="number">0</span> <span class="keyword">and</span> nums[pt] == nums[pt - <span class="number">1</span>]: <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">while</span> lf &lt; rg:</span><br><span class="line">                _ = nums[lf] + nums[rg] + nums[pt]</span><br><span class="line">                <span class="keyword">if</span> _ == target:</span><br><span class="line">                    <span class="keyword">return</span> target</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">abs</span>(lastsum - target) &gt; <span class="built_in">abs</span>(_ - target):</span><br><span class="line">                    lastsum = _</span><br><span class="line">                <span class="keyword">if</span> _ &lt; target:</span><br><span class="line">                    lf += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> _ &gt; target:</span><br><span class="line">                    rg -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> lastsum</span><br></pre></td></tr></table></figure></p>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-05-3SC-LC.png" alt=""></p>
<hr>
<p>第六天<br><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/">最佳买卖股票时机 III</a><br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> maxsize</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxProfit</span>(<span class="params">self, prices: List[<span class="built_in">int</span>]</span>) -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> prices: <span class="keyword">return</span> <span class="number">0</span> </span><br><span class="line">        s1 = s2 = <span class="number">0</span></span><br><span class="line">        b1 = b2 = -maxsize</span><br><span class="line">        <span class="keyword">for</span> e <span class="keyword">in</span> prices:</span><br><span class="line">            s2 = <span class="built_in">max</span>(s2, b2 + e)</span><br><span class="line">            b2 = <span class="built_in">max</span>(b2, s1 - e)</span><br><span class="line">            s1 = <span class="built_in">max</span>(s1, b1 + e)</span><br><span class="line">            b1 = <span class="built_in">max</span>(b1, -e)</span><br><span class="line">        <span class="keyword">return</span> s2</span><br></pre></td></tr></table></figure></p>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-06-BTST-3.png" alt=""></p>
<hr>
<p>第七天<br><a href="https://leetcode.com/problems/merge-two-sorted-lists/">合并列表</a></p>
<p>解法1<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.next = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeTwoLists</span>(<span class="params">self, l1: ListNode, l2: ListNode</span>) -&gt; ListNode:</span></span><br><span class="line">        <span class="keyword">if</span> l1 <span class="keyword">and</span> l2:</span><br><span class="line">            <span class="keyword">if</span> l1.val &gt; l2.val:</span><br><span class="line">                l1, l2 = l2, l1</span><br><span class="line">            l1.<span class="built_in">next</span> = self.mergeTwoLists(l1.<span class="built_in">next</span>, l2)</span><br><span class="line">        <span class="keyword">return</span> l1 <span class="keyword">or</span> l2</span><br></pre></td></tr></table></figure></p>
<p>解法2<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeTwoLists</span>(<span class="params">self, l1: ListNode, l2: ListNode</span>) -&gt; ListNode:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span> <span class="keyword">in</span> (l1, l2):</span><br><span class="line">            <span class="keyword">return</span> l1 <span class="keyword">or</span> l2</span><br><span class="line">        n0 = cur = ListNode(<span class="literal">None</span>)</span><br><span class="line">        n0.<span class="built_in">next</span> = l1</span><br><span class="line">        <span class="keyword">while</span> l1 <span class="keyword">and</span> l2:</span><br><span class="line">            <span class="keyword">if</span> l1.val &lt; l2.val:</span><br><span class="line">                l1 = l1.<span class="built_in">next</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                nxt = cur.<span class="built_in">next</span></span><br><span class="line">                cur.<span class="built_in">next</span> = l2</span><br><span class="line">                tmp = l2.<span class="built_in">next</span></span><br><span class="line">                l2.<span class="built_in">next</span> = nxt</span><br><span class="line">                l2 = tmp</span><br><span class="line">            cur = cur.<span class="built_in">next</span></span><br><span class="line">        cur.<span class="built_in">next</span> = l1 <span class="keyword">or</span> l2</span><br><span class="line">        <span class="keyword">return</span> n0.<span class="built_in">next</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-07-M2SL.png" alt=""></p>
<hr>
<p>第八天<br><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list/">排序列表去重</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.next = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deleteDuplicates</span>(<span class="params">self, head: ListNode</span>) -&gt; ListNode:</span></span><br><span class="line">        i, j = head, head.<span class="built_in">next</span> <span class="keyword">if</span> head <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">while</span> j:</span><br><span class="line">            <span class="keyword">if</span> i.val == j.val:</span><br><span class="line">                j = j.<span class="built_in">next</span></span><br><span class="line">                i.<span class="built_in">next</span> = j</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                i = j</span><br><span class="line">                j = i.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">return</span> head</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-08-RDSL.png" alt=""></p>
<hr>
<p>第九天<br><a href="https://leetcode.com/problems/linked-list-cycle/">链表判环</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.next = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hasCycle</span>(<span class="params">self, head: ListNode</span>) -&gt; bool:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> head <span class="keyword">or</span> <span class="keyword">not</span> head.<span class="built_in">next</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        i, j = head, head.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">while</span> i <span class="keyword">is</span> <span class="keyword">not</span> j:</span><br><span class="line">                i = i.<span class="built_in">next</span></span><br><span class="line">                j = j.<span class="built_in">next</span>.<span class="built_in">next</span> </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-09-LLC.png" alt=""></p>
<hr>
<p>第十天<br><a href="https://leetcode.com/problems/add-two-numbers/">两数相加</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.next = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addTwoNumbers</span>(<span class="params">self, l1: ListNode, l2: ListNode</span>) -&gt; ListNode:</span></span><br><span class="line">        l3 = ListNode(<span class="number">0</span>)</span><br><span class="line">        rv = l3</span><br><span class="line">        i = j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> l1 <span class="keyword">or</span> l2 <span class="keyword">or</span> i:</span><br><span class="line">            v1 = v2 = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> l1:</span><br><span class="line">                v1 = l1.val</span><br><span class="line">                l1 = l1.<span class="built_in">next</span></span><br><span class="line">            <span class="keyword">if</span> l2:</span><br><span class="line">                v2 = l2.val</span><br><span class="line">                l2 = l2.<span class="built_in">next</span></span><br><span class="line">            i, j = <span class="built_in">divmod</span>(v1 + v2 + i, <span class="number">10</span>)</span><br><span class="line">            l3.<span class="built_in">next</span> = ListNode(j)</span><br><span class="line">            l3 = l3.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">return</span> rv.<span class="built_in">next</span></span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-10-Add-2-Nums.png" alt=""></p>
<hr>
<p>第十一天<br><a href="https://leetcode.com/problems/remove-nth-node-from-end-of-list/">删除列表末端第N个点</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.next = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">removeNthFromEnd</span>(<span class="params">self, head: ListNode, n: <span class="built_in">int</span></span>) -&gt; ListNode:</span></span><br><span class="line">        del_pt = ListNode(<span class="literal">None</span>)</span><br><span class="line">        del_pt.<span class="built_in">next</span> = head</span><br><span class="line">        rv = del_pt</span><br><span class="line">        j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span>(head):</span><br><span class="line">            <span class="keyword">if</span> j &gt;= n:</span><br><span class="line">                del_pt = del_pt.<span class="built_in">next</span></span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">            head = head.<span class="built_in">next</span></span><br><span class="line">        _ = del_pt.<span class="built_in">next</span>.<span class="built_in">next</span> <span class="keyword">if</span> del_pt.<span class="built_in">next</span>.<span class="built_in">next</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line">        del_pt.<span class="built_in">next</span> = _ </span><br><span class="line">        <span class="keyword">return</span> rv.<span class="built_in">next</span></span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-11-Remove-Nth-Node-from-End.png" alt=""></p>
<hr>
<p>第十二天<br><a href="https://leetcode.com/problems/merge-k-sorted-lists/">合并K个有序列表</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"># class ListNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.next = None</span></span><br><span class="line"><span class="keyword">import</span> heapq</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mergeKLists</span>(<span class="params">self, lists: List[ListNode]</span>) -&gt; ListNode:</span></span><br><span class="line">        rv = ListNode(<span class="literal">None</span>)</span><br><span class="line">        pt = rv</span><br><span class="line">        h = []</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> lists:</span><br><span class="line">            <span class="keyword">while</span> n:</span><br><span class="line">                heapq.heappush(h,n.val)</span><br><span class="line">                n = n.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">while</span> h:</span><br><span class="line">            val = heapq.heappop(h)</span><br><span class="line">            pt.<span class="built_in">next</span> = ListNode(val)</span><br><span class="line">            pt = pt.<span class="built_in">next</span></span><br><span class="line">        <span class="keyword">return</span> rv.<span class="built_in">next</span></span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-12-Merge-K-Sorted-Lists.png" alt=""></p>
<hr>
<p>第十三天<br><a href="https://leetcode.com/problems/roman-to-integer/">罗马数字转十进数</a></p>
<p>解法1：正则表达式<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;IV|IX|XL|XC|CD|CM&#x27;</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    romanValL = &#123;</span><br><span class="line">        <span class="string">&#x27;I&#x27;</span>:<span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;V&#x27;</span>:<span class="number">5</span>,</span><br><span class="line">        <span class="string">&#x27;X&#x27;</span>:<span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;L&#x27;</span>:<span class="number">50</span>,</span><br><span class="line">        <span class="string">&#x27;C&#x27;</span>:<span class="number">100</span>,</span><br><span class="line">        <span class="string">&#x27;D&#x27;</span>:<span class="number">500</span>,</span><br><span class="line">        <span class="string">&#x27;M&#x27;</span>:<span class="number">1000</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    romanValH = &#123;</span><br><span class="line">        <span class="string">&#x27;IV&#x27;</span>:<span class="number">4</span>,</span><br><span class="line">        <span class="string">&#x27;IX&#x27;</span>:<span class="number">9</span>,</span><br><span class="line">        <span class="string">&#x27;XL&#x27;</span>:<span class="number">40</span>,</span><br><span class="line">        <span class="string">&#x27;XC&#x27;</span>:<span class="number">90</span>,</span><br><span class="line">        <span class="string">&#x27;CD&#x27;</span>:<span class="number">400</span>,</span><br><span class="line">        <span class="string">&#x27;CM&#x27;</span>:<span class="number">900</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">romanToInt</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; int:</span></span><br><span class="line">        val = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> reg.finditer(s):</span><br><span class="line">            val += self.romanValH[x[<span class="number">0</span>]]</span><br><span class="line">        <span class="keyword">if</span> val: s = re.sub(<span class="string">r&#x27;IV|IX|XL|XC|CD|CM&#x27;</span>, <span class="string">&#x27;&#x27;</span>, s)</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> s:</span><br><span class="line">            val += self.romanValL[x]</span><br><span class="line">        <span class="keyword">return</span> val</span><br></pre></td></tr></table></figure><br>解法2：替换<br><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    romanValL = &#123;</span><br><span class="line">        <span class="string">&#x27;I&#x27;</span>:<span class="number">1</span>,</span><br><span class="line">        <span class="string">&#x27;V&#x27;</span>:<span class="number">5</span>,</span><br><span class="line">        <span class="string">&#x27;X&#x27;</span>:<span class="number">10</span>,</span><br><span class="line">        <span class="string">&#x27;L&#x27;</span>:<span class="number">50</span>,</span><br><span class="line">        <span class="string">&#x27;C&#x27;</span>:<span class="number">100</span>,</span><br><span class="line">        <span class="string">&#x27;D&#x27;</span>:<span class="number">500</span>,</span><br><span class="line">        <span class="string">&#x27;M&#x27;</span>:<span class="number">1000</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    romanValH = &#123;</span><br><span class="line">        <span class="string">&#x27;IV&#x27;</span>:<span class="number">4</span>,</span><br><span class="line">        <span class="string">&#x27;IX&#x27;</span>:<span class="number">9</span>,</span><br><span class="line">        <span class="string">&#x27;XL&#x27;</span>:<span class="number">40</span>,</span><br><span class="line">        <span class="string">&#x27;XC&#x27;</span>:<span class="number">90</span>,</span><br><span class="line">        <span class="string">&#x27;CD&#x27;</span>:<span class="number">400</span>,</span><br><span class="line">        <span class="string">&#x27;CM&#x27;</span>:<span class="number">900</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">romanToInt</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; int:</span></span><br><span class="line">        val = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> x,v <span class="keyword">in</span> self.romanValH.items():</span><br><span class="line">            <span class="keyword">while</span> x <span class="keyword">in</span> s:</span><br><span class="line">                val += v</span><br><span class="line">                s = s.replace(x,<span class="string">&#x27;&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">for</span> x,v <span class="keyword">in</span> self.romanValL.items():</span><br><span class="line">            <span class="keyword">while</span> x <span class="keyword">in</span> s:</span><br><span class="line">                val += v</span><br><span class="line">                s = s.replace(x,<span class="string">&#x27;&#x27;</span>,<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> val</span><br></pre></td></tr></table></figure></p>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-13-roman-to-integer.png" alt=""></p>
<hr>
<p>第十四天<br><a href="https://leetcode.com/problems/longest-common-prefix/">最长相同前缀</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span>(<span class="params">self, strs: List[<span class="built_in">str</span>]</span>) -&gt; str:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> strs: <span class="keyword">return</span> <span class="string">&quot;&quot;</span></span><br><span class="line">        s_max, s_min = <span class="built_in">max</span>(strs), <span class="built_in">min</span>(strs)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(s_min):</span><br><span class="line">            <span class="keyword">if</span> s_max[i] != v:</span><br><span class="line">                <span class="keyword">return</span> s_min[:i]</span><br><span class="line">        <span class="keyword">return</span> s_min</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-14-longest-common-prefix.png" alt=""></p>
<hr>
<p>第十五天<br><a href="https://leetcode.com/problems/valid-parentheses/">括号匹配</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isValid</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; bool:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(s) % <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        v = []</span><br><span class="line">        d = &#123;</span><br><span class="line">            <span class="string">&#x27;&#125;&#x27;</span>: <span class="string">&#x27;&#123;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;)&#x27;</span>: <span class="string">&#x27;(&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;]&#x27;</span>: <span class="string">&#x27;[&#x27;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> e <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> e <span class="keyword">in</span> [<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;[&#x27;</span>,<span class="string">&#x27;&#123;&#x27;</span>]:</span><br><span class="line">                v.append(e)</span><br><span class="line">            <span class="keyword">elif</span> <span class="keyword">not</span> v <span class="keyword">or</span> v.pop() != d[e]:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> v</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-15-valid-parentheses.png" alt=""></p>
<hr>
<p>第十六天<br><a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/">无重复的最长子字符串</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">lengthOfLongestSubstring</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> s: <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        l = &#123;&#125;</span><br><span class="line">        st = m = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i, e <span class="keyword">in</span> <span class="built_in">enumerate</span>(s):</span><br><span class="line">            <span class="keyword">if</span> e <span class="keyword">in</span> l: </span><br><span class="line">                st = <span class="built_in">max</span>(st, l[e] + <span class="number">1</span>)</span><br><span class="line">            m = <span class="built_in">max</span>(m, i - st + <span class="number">1</span>)</span><br><span class="line">            l[e] = i</span><br><span class="line">        <span class="keyword">return</span> m</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-16-LSWPC.png" alt=""></p>
<hr>
<p>第十七天<br><a href="https://leetcode.com/problems/longest-palindromic-substring/">最长回文数</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPalindrome</span>(<span class="params">self, s: <span class="built_in">str</span></span>) -&gt; str:</span></span><br><span class="line">        l = <span class="built_in">len</span>(s)</span><br><span class="line">        <span class="keyword">if</span> l &lt;= <span class="number">1</span>: <span class="keyword">return</span> s</span><br><span class="line">        tl = <span class="number">1</span></span><br><span class="line">        j = <span class="number">1</span></span><br><span class="line">        rv = s[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">            <span class="keyword">if</span> i-tl &gt;= <span class="number">1</span> <span class="keyword">and</span> s[i - tl - <span class="number">1</span>: i + <span class="number">1</span>]==s[i - tl - <span class="number">1</span>: i + <span class="number">1</span>][::-<span class="number">1</span>]:</span><br><span class="line">                j = i - tl - <span class="number">1</span></span><br><span class="line">                tl += <span class="number">2</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> i - tl &gt;= <span class="number">0</span> <span class="keyword">and</span> s[i - tl: i + <span class="number">1</span>] == s[i - tl: i + <span class="number">1</span>][::-<span class="number">1</span>]:</span><br><span class="line">                j = i - tl</span><br><span class="line">                tl += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> s[j: j + tl]</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-17-LPC.png" alt=""></p>
<hr>
<p>第十八天<br><a href="https://leetcode.com/problems/regular-expression-matching/">正则表达式匹配</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isMatch</span>(<span class="params">self, s: <span class="built_in">str</span>, p: <span class="built_in">str</span></span>) -&gt; bool:</span></span><br><span class="line">        <span class="keyword">if</span> re.match(<span class="string">&#x27;^&#x27;</span>+p+<span class="string">&#x27;$&#x27;</span>,s):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-18-REXP.png" alt=""></p>
<hr>
<p>第十九天<br><a href="https://leetcode.com/problems/same-tree/">相同的树</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.left = None</span></span><br><span class="line"><span class="comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isSameTree</span>(<span class="params">self, p: TreeNode, q: TreeNode</span>) -&gt; bool:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">any</span>([p,q]):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">all</span>([p,q]) <span class="keyword">and</span> p.val == q.val:</span><br><span class="line">            <span class="keyword">return</span> self.isSameTree(p.left, q.left) <span class="keyword">and</span> self.isSameTree(p.right, q.right)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-19-Same-Tree.png" alt=""></p>
<hr>
<p>第二十天<br><a href="https://leetcode.com/problems/symmetric-tree/">对称树</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.left = None</span></span><br><span class="line"><span class="comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isSym</span>(<span class="params">self, Left, Right</span>):</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> Left <span class="keyword">and</span> <span class="keyword">not</span> Right:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> Left <span class="keyword">and</span> Right <span class="keyword">and</span> Left.val == Right.val <span class="keyword">and</span> self.isSym(Left.left, Right.right) <span class="keyword">and</span> self.isSym(Left.right, Right.left)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isSymmetric</span>(<span class="params">self, root: TreeNode</span>) -&gt; bool:</span></span><br><span class="line">        <span class="keyword">return</span> self.isSym(root, root)</span><br><span class="line">        </span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-20-Symmetric-Tree.png" alt=""></p>
<hr>
<p>第二十一天<br><a href="https://leetcode.com/problems/maximum-depth-of-binary-tree/">二叉树的最大深度</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.left = None</span></span><br><span class="line"><span class="comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxDepth</span>(<span class="params">self, root: TreeNode</span>) -&gt; int:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">max</span>(self.maxDepth(root.left), self.maxDepth(root.right)) <span class="keyword">if</span> root <span class="keyword">else</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-21-Maximum-Depth-of-BT.png" alt=""></p>
<hr>
<p>第二十二天<br><a href="https://leetcode.com/problems/binary-tree-level-order-traversal/">正序遍历二叉树</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.left = None</span></span><br><span class="line"><span class="comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">levelOrder</span>(<span class="params">self, root: TreeNode</span>) -&gt; List[List[int]]:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> root:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        lev_val = []</span><br><span class="line">        lev = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        lev_val.append([root.val])</span><br><span class="line">        dq = collections.deque([(<span class="number">1</span>, root.left, root.right)])</span><br><span class="line">        <span class="keyword">while</span> dq:</span><br><span class="line">            lev, l, r = dq.popleft()</span><br><span class="line">            <span class="keyword">if</span> l <span class="keyword">or</span> r <span class="keyword">and</span> <span class="built_in">len</span>(lev_val) &lt;= lev:</span><br><span class="line">                lev_val.append([])</span><br><span class="line">            <span class="keyword">if</span> l:</span><br><span class="line">                lev_val[lev].append(l.val)</span><br><span class="line">                dq.append((lev + <span class="number">1</span>, l.left, l.right))</span><br><span class="line">            <span class="keyword">if</span> r:</span><br><span class="line">                lev_val[lev].append(r.val)</span><br><span class="line">                dq.append((lev + <span class="number">1</span>, r.left, r.right))</span><br><span class="line">        <span class="keyword">while</span> [] <span class="keyword">in</span> lev_val:</span><br><span class="line">            lev_val.remove([])</span><br><span class="line">        <span class="keyword">return</span> lev_val</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-22-BT-Inorder-Traversal.png" alt=""></p>
<hr>
<p>第二十三天<br><a href="https://leetcode.com/problems/unique-binary-search-trees-ii/">Unique Binary Search Trees II</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.left = None</span></span><br><span class="line"><span class="comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">generateTrees</span>(<span class="params">self, n: <span class="built_in">int</span></span>) -&gt; List[TreeNode]:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> n:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line">        <span class="keyword">return</span> self.gen(<span class="number">1</span>, n + <span class="number">1</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">gen</span>(<span class="params">self, s, e</span>):</span></span><br><span class="line">        <span class="keyword">if</span> s == e:</span><br><span class="line">            <span class="keyword">return</span> [<span class="literal">None</span>]</span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(s, e):</span><br><span class="line">            <span class="keyword">for</span> left <span class="keyword">in</span> self.gen(s, i):</span><br><span class="line">                <span class="keyword">for</span> right <span class="keyword">in</span> self.gen(i + <span class="number">1</span>, e):</span><br><span class="line">                    node = TreeNode(i)</span><br><span class="line">                    node.left, node.right = left, right</span><br><span class="line">                    res.append(node)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-23-Unique-BST-II.png" alt=""></p>
<hr>
<p>第二十四天<br><a href="https://leetcode.com/problems/recover-binary-search-tree//">恢复二叉搜索树</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.left = None</span></span><br><span class="line"><span class="comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">recoverTree</span>(<span class="params">self, root: TreeNode</span>) -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        current, previous, todel, stack = root, TreeNode(-<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)), [], []</span><br><span class="line">        <span class="keyword">while</span> current <span class="keyword">or</span> stack:</span><br><span class="line">            <span class="keyword">while</span> current:</span><br><span class="line">                stack.append(current)</span><br><span class="line">                current = current.left</span><br><span class="line">            node = stack.pop()</span><br><span class="line">            <span class="keyword">if</span> node.val &lt; previous.val: todel.append((previous, node))</span><br><span class="line">            previous, current = node, node.right</span><br><span class="line">        todel[<span class="number">0</span>][<span class="number">0</span>].val, todel[-<span class="number">1</span>][<span class="number">1</span>].val = todel[-<span class="number">1</span>][<span class="number">1</span>].val, todel[<span class="number">0</span>][<span class="number">0</span>].val</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-24-Recover-BST.png" alt=""></p>
<hr>
<p>第二十五天<br><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/">买卖股票的最佳时机 II</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxProfit</span>(<span class="params">self, prices: List[<span class="built_in">int</span>]</span>) -&gt; int:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sum</span>([<span class="built_in">max</span>(prices[day + <span class="number">1</span>] - prices[day], <span class="number">0</span>) \</span><br><span class="line">                    <span class="keyword">for</span> day <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(prices) - <span class="number">1</span>)])</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-25-Best-Time-to-B-S-Stocks-2.png" alt=""></p>
<hr>
<p>第二十六天<br><a href="https://leetcode.com/problems/is-subsequence/">是否存在子序列</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isSubsequence</span>(<span class="params">self, t: <span class="built_in">str</span>, s: <span class="built_in">str</span></span>) -&gt; bool:</span></span><br><span class="line">        p_s = p_t = <span class="number">0</span></span><br><span class="line">        l_s, l_t = <span class="built_in">len</span>(s), <span class="built_in">len</span>(t)</span><br><span class="line">        <span class="keyword">while</span> p_s &lt; l_s <span class="keyword">and</span> p_t &lt; l_t:</span><br><span class="line">            v = t[p_t]</span><br><span class="line">            <span class="keyword">if</span> s[p_s] == v:</span><br><span class="line">                p_t += <span class="number">1</span></span><br><span class="line">            p_s += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> p_t == l_t</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-26-Is-Subsequence.png" alt=""></p>
<hr>
<p>第二十七天<br><a href="https://leetcode.com/problems/assign-cookies/">分饼干</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findContentChildren</span>(<span class="params">self, g: List[<span class="built_in">int</span>], s: List[<span class="built_in">int</span>]</span>) -&gt; int:</span></span><br><span class="line">        g.sort()</span><br><span class="line">        s.sort()</span><br><span class="line">        assigned = <span class="number">0</span></span><br><span class="line">        p_s = p_g = <span class="number">0</span></span><br><span class="line">        l_s, l_g = <span class="built_in">len</span>(s), <span class="built_in">len</span>(g)</span><br><span class="line">        <span class="keyword">while</span> p_s &lt; l_s <span class="keyword">and</span> p_g &lt; l_g:</span><br><span class="line">            <span class="keyword">if</span> s[p_s] &gt;= g[p_g]:</span><br><span class="line">                assigned += <span class="number">1</span></span><br><span class="line">                p_g += <span class="number">1</span></span><br><span class="line">            p_s += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> assigned</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-27-Assign-Cookies.png" alt=""></p>
<hr>
<p>第二十八天<br><a href="https://leetcode.com/problems/jump-game/">跳一跳</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canJump</span>(<span class="params">self, nums: List[<span class="built_in">int</span>]</span>) -&gt; bool:</span></span><br><span class="line">        step = <span class="number">0</span></span><br><span class="line">        l = <span class="built_in">len</span>(nums)</span><br><span class="line">        <span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(nums):</span><br><span class="line">            <span class="keyword">if</span> i &gt; step:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            step = <span class="built_in">max</span>(step, i + v)</span><br><span class="line">            <span class="keyword">if</span> step &gt;= l:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-28-Jump-Game.png" alt=""></p>
<hr>
<p>第二十九天<br><a href="https://leetcode.com/problems/gas-station/">加气站分配</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canCompleteCircuit</span>(<span class="params">self, gas: List[<span class="built_in">int</span>], cost: List[<span class="built_in">int</span>]</span>) -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">sum</span>(gas) &lt; <span class="built_in">sum</span>(cost): <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">        l = <span class="built_in">len</span>(gas)</span><br><span class="line">        pt = tank = i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; l:</span><br><span class="line">            tank += gas[i] - cost[i] </span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> tank &lt;= <span class="number">0</span>:</span><br><span class="line">                pt = i</span><br><span class="line">                tank = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> pt &gt;= l:</span><br><span class="line">            pt = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> pt</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-29-Gas-Station.png" alt=""></p>
<hr>
<p>第三十天<br><a href="https://leetcode.com/problems/wildcard-matching/">通配符匹配</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isMatch</span>(<span class="params">self, s: <span class="built_in">str</span>, p: <span class="built_in">str</span></span>) -&gt; bool:</span></span><br><span class="line">        length = <span class="built_in">len</span>(s)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(p) - p.count(<span class="string">&#x27;*&#x27;</span>) &gt; length:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        dp = [<span class="literal">True</span>] + [<span class="literal">False</span>]*length</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">            <span class="keyword">if</span> i != <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">                <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">reversed</span>(<span class="built_in">range</span>(length)):</span><br><span class="line">                    dp[n+<span class="number">1</span>] = dp[n] <span class="keyword">and</span> (i == s[n] <span class="keyword">or</span> i == <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, length+<span class="number">1</span>):</span><br><span class="line">                    dp[n] = dp[n-<span class="number">1</span>] <span class="keyword">or</span> dp[n]</span><br><span class="line">            dp[<span class="number">0</span>] = dp[<span class="number">0</span>] <span class="keyword">and</span> i == <span class="string">&#x27;*&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> dp[-<span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<p><img src="/imgs/Programming/30dayinlc/30d-in-Leetcode-30-Wildcard-Matching.png" alt=""></p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>五种常见的最优化方法</title>
    <url>/zh-cn/posts/c4302082-bbc2-11eb-8847-0772b2ac4cf2/</url>
    <content><![CDATA[<p>五种常见的最优化方法简介</p>
<a id="more"></a>
<h1 id="Divide-and-Conquer-分治法"><a href="#Divide-and-Conquer-分治法" class="headerlink" title="Divide and Conquer - 分治法"></a>Divide and Conquer - 分治法</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>分治法字面上的解释是“分而治之”，就是把一个复杂的问题分成两个或更多的相同或相似的子问题，再把子问题分成更小的子问题……直到最后子问题可以简单的直接求解，并且原问题的解即子问题的解的合并。这个技巧是很多高效算法的基础，如排序算法(快速排序，归并排序)，傅立叶变换(快速傅立叶变换)。</p>
<h3 id="分治法的设计思想"><a href="#分治法的设计思想" class="headerlink" title="分治法的设计思想"></a>分治法的设计思想</h3><p>将一个难以直接解决的大问题，分割成一些规模较小的相同问题，以便各个击破，分而治之。</p>
<h3 id="分治策略"><a href="#分治策略" class="headerlink" title="分治策略"></a>分治策略</h3><p>对于一个规模为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 的问题，若该问题可以容易地解决（比如说规模 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 较小）则直接解决，否则将其分解为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container> 个规模较小的子问题，这些子问题互相独立且与原问题形式相同，递归地解这些子问题，然后将各子问题的解合并得到原问题的解。这种算法设计策略叫做分治法。</p>
<p>如果原问题可分割成 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container> 个子问题，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.312ex" xmlns="http://www.w3.org/2000/svg" width="9.702ex" height="1.882ex" role="img" focusable="false" viewBox="0 -694 4288.1 832"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(777.8, 0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mi" transform="translate(1833.6, 0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mo" transform="translate(2632.3, 0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(3688.1, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container>，且这些子问题都可解并可利用这些子问题的解求出原问题的解，那么这种分治法就是可行的。由分治法产生的子问题往往是原问题的较小模式，这就为使用<strong>递归技术</strong>提供了方便。在这种情况下，反复应用分治手段，可以使子问题与原问题类型一致而其规模却不断缩小，最终使子问题缩小到很容易直接求出其解,这自然导致递归过程的产生。分治与递归像一对孪生兄弟，经常同时应用在算法设计之中，并由此产生许多高效算法。</p>
<h2 id="适用场合"><a href="#适用场合" class="headerlink" title="适用场合"></a>适用场合</h2><p>分治法所能解决的问题一般具有以下特征：</p>
<ol>
<li>该问题的规模缩小到一定的程度就可以容易地解决</li>
<li>该问题可以分解为若干个规模较小的相同问题，即该问题具有最优子结构性质。</li>
<li>利用该问题分解出的子问题的解可以合并为该问题的解；</li>
<li>该问题所分解出的各个子问题是相互独立的，即子问题之间不包含公共的子子问题。</li>
</ol>
<p>特征1 是绝大多数问题都可以满足的，因为问题的计算复杂性一般是随着问题规模的增加而增加；</p>
<p>特征2 是应用分治法的前提,它也是大多数问题可以满足的，此特征反映了递归思想的应用；</p>
<p>特征3 是关键，能否利用分治法完全取决于问题是否具有第三条特征，如果具备了第一条和第二条特征，而不具备第三条特征，则可以考虑用<strong>贪心法</strong>或<strong>动态规划法</strong>。</p>
<p>特征4 涉及到分治法的效率，如果各子问题是不独立的则分治法要做许多不必要的工作，重复地解公共的子问题，此时虽然可用分治法，但一般用<strong>动态规划法</strong>较好。</p>
<h2 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h2><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">fuction Divide-<span class="keyword">and</span>-<span class="constructor">Conquer(P)</span>:</span><br><span class="line"></span><br><span class="line">    # <span class="keyword">if</span> question small enough <span class="keyword">to</span> solve directly</span><br><span class="line">    <span class="keyword">if</span> <span class="pattern-match">|<span class="constructor">P</span>| ≤ n0:</span></span><br><span class="line"><span class="pattern-match">        return(<span class="constructor">ADHOC(P)</span>)</span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">    # divide <span class="constructor">P</span> into subquestion (<span class="constructor">P_1</span> ,<span class="constructor">P_2</span> ,<span class="operator">...</span>,<span class="constructor">P_k</span>), solve them recursively</span></span><br><span class="line"><span class="pattern-match">    <span class="keyword">for</span> i ← 1 <span class="keyword">to</span> k:</span></span><br><span class="line"><span class="pattern-match">        <span class="keyword">do</span> y<span class="constructor">_i</span> ← <span class="constructor">Divide</span>-<span class="keyword">and</span>-<span class="constructor">Conquer(Pi)</span></span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">    # merge all solution</span></span><br><span class="line"><span class="pattern-match">    <span class="constructor">T</span> ← <span class="constructor">MERGE(<span class="params">y_1</span>, <span class="params">y_2</span>, <span class="operator">...</span> ,<span class="params">y_k</span>)</span></span></span><br><span class="line"><span class="pattern-match"></span></span><br><span class="line"><span class="pattern-match">    return(<span class="constructor">T</span>)</span></span><br></pre></td></tr></table></figure>
<ol>
<li>一定是先找到最小问题规模时的求解方法</li>
<li>然后考虑随着问题规模增大时的求解方法</li>
<li>找到求解的递归函数式后（各种规模或因子），设计递归程序即可。</li>
</ol>
<h2 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h2><p> 一个分治算法将规模为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 的问题分成 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.179ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 521 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g></g></g></svg></mjx-container> 个规模为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.475ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 1978 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(600, 0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"></path></g></g><g data-mml-node="mi" transform="translate(1100, 0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 的子问题去解。设分解阈值 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.375ex" xmlns="http://www.w3.org/2000/svg" width="6.419ex" height="1.881ex" role="img" focusable="false" viewBox="0 -666 2837.1 831.6"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(600, -150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(1281.3, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(2337.1, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>，且 ADHOC 解决规模为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 的问题用 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 个单位时间。用 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="4.71ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2082 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(704, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1093, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1693, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container> 表为解决规模为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.564ex" xmlns="http://www.w3.org/2000/svg" width="7.332ex" height="2.26ex" role="img" focusable="false" viewBox="0 -749.5 3240.6 999"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mi" transform="translate(278, 0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(1029, 0)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(1584.8, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2640.6, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 的问题所需的计算时间。</p>
<p>有</p>
<script type="math/tex; mode=display">
\begin{equation}
 T(n) = k T(\frac{n}{m}) + f(n)
\end{equation}</script><p>递归方程及其解只给出n等于m的方幂时T(n)的值，但是如果认为T(n)足够平滑，那么由n等于m的方幂时T(n)的值可以估计T(n)的增长速度。通常假定T(n)是单调上升的，从而当 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.471ex" xmlns="http://www.w3.org/2000/svg" width="14.739ex" height="1.909ex" role="img" focusable="false" viewBox="0 -636 6514.7 844"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878, -150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(1449.7, 0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(2505.5, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3383.3, 0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="msub" transform="translate(4439.1, 0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(878, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g></svg></mjx-container>时，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex" xmlns="http://www.w3.org/2000/svg" width="24.798ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 10960.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(704, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1093, 0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(878, -150) scale(0.707)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g></g><g data-mml-node="mo" transform="translate(2265, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2931.7, 0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(3987.5, 0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(4691.5, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(5080.5, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(5680.5, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6347.3, 0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mi" transform="translate(7403.1, 0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z"></path></g><g data-mml-node="mo" transform="translate(8107.1, 0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(8496.1, 0)"><g data-mml-node="mi"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="TeXAtom" transform="translate(878, -150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1123, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10571.7, 0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>。 </p>
<h2 id="常见解决问题"><a href="#常见解决问题" class="headerlink" title="常见解决问题"></a>常见解决问题</h2><ul>
<li>二分搜索</li>
<li>大整数乘法</li>
<li>Strassen矩阵乘法</li>
<li>棋盘覆盖</li>
<li>合并排序</li>
<li>快速排序</li>
<li>线性时间选择</li>
<li>最接近点对问题</li>
<li>循环赛日程表</li>
<li>汉诺塔</li>
</ul>
<h1 id="Dynamic-Programming-动态规划"><a href="#Dynamic-Programming-动态规划" class="headerlink" title="Dynamic Programming - 动态规划"></a>Dynamic Programming - 动态规划</h1><h2 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h2><p>基本思想与分治法类似，也是将待求解的问题分解为若干个子问题（阶段），按顺序求解子阶段，前一子问题的解，为后一子问题的求解提供了有用的信息。在求解任一子问题时，列出各种可能的局部解，通过决策保留那些有可能达到最优的局部解，丢弃其他局部解。依次解决各子问题，最后一个子问题就是初始问题的解。</p>
<p>由于动态规划解决的问题多数有重叠子问题这个特点，为减少重复计算，对每一个子问题只解一次，将其不同阶段的不同状态保存在一个二维数组中。</p>
<p>动态规划实质上是一种以空间换时间的技术，它在实现的过程中，不得不存储产生过程中的各种状态，所以它的空间复杂度要大于其它的算法。</p>
<p>与分治法最大的差别在于适合于用动态规划法求解的问题，经分解后得到的<strong>子问题往往不是互相独立</strong>的。</p>
<h2 id="适用场合-1"><a href="#适用场合-1" class="headerlink" title="适用场合"></a>适用场合</h2><p>适用动态规划的问题往往具有的特征如下</p>
<ol>
<li>最优化原理：如果问题的最优解所包含的子问题的解也是最优的，就称该问题具有最优子结构，即满足最优化原理。</li>
<li>无后效性：即某阶段状态一旦确定，就不受这个状态以后决策的影响。也就是说，某状态以后的过程不会影响以前的状态，只与当前状态有关。</li>
<li>有重叠子问题：即子问题之间是不独立的，一个子问题在下一阶段决策中可能被多次使用到。这条性质并不是动态规划适用的必要条件，但是如果没有这条性质，动态规划算法同其他算法相比就不具备优势。</li>
</ol>
<h2 id="基本步骤-1"><a href="#基本步骤-1" class="headerlink" title="基本步骤"></a>基本步骤</h2><script type="math/tex; mode=display">
\begin{equation}
 初始状态 → │决策1│ → │决策2│ → … → │决策n│ → 结束状态
\end{equation}</script><ol>
<li><p>划分阶段：按照问题的时间或空间特征，把问题分为若干个阶段。在划分阶段时，注意划分后的阶段一定要是有序的或者是可排序的，否则问题就无法求解。</p>
</li>
<li><p>确定状态和状态变量：将问题发展到各个阶段时所处于的各种客观情况用不同的状态表示出来。当然，状态的选择要满足无后效性。</p>
</li>
<li><p>确定决策并写出状态转移方程：因为决策和状态转移有着天然的联系，状态转移就是根据上一阶段的状态和决策来导出本阶段的状态。所以如果确定了决策，状态转移方程也就可写出。但事实上常常是反过来做，根据相邻两个阶段的状态之间的关系来确定决策方法和状态转移方程。</p>
</li>
<li><p>寻找边界条件：给出的状态转移方程是一个递推式，需要一个递推的终止条件或边界条件。</p>
</li>
</ol>
<p>实际应用中可以按以下几个简化的步骤进行设计：</p>
<ol>
<li><p>分析最优解的性质，并刻画其结构特征。</p>
</li>
<li><p>递归的定义最优解。</p>
</li>
<li><p>以自底向上或自顶向下的记忆化方式（备忘录法）计算出最优值。</p>
</li>
<li><p>根据计算最优值时得到的信息，构造问题的最优解。</p>
</li>
</ol>
<p>确定了动态规划的这三要素，整个求解过程就可以用一个最优决策表来描述，最优决策表是一个二维表，其中行表示决策的阶段，列表示问题状态，表格需要填写的数据一般对应此问题的在某个阶段某个状态下的最优值（如最短路径，最长公共子序列，最大价值等），填表的过程就是根据递推关系，从1行1列开始，以行或者列优先的顺序，依次填写表格，最后根据整个表格的数据通过简单的取舍或者运算求得问题的最优解。</p>
<script type="math/tex; mode=display">
\begin{equation}
f(n, m)=\max{\{f(n-1,m), f(n-1,m-w[n])+P(n,m)\}}
\end{equation}</script><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">//</span> 第一个阶段 </span><br><span class="line">for<span class="params">(<span class="attr">j</span>=1; j&lt;=m; <span class="attr">j</span>=j+1)</span>{</span><br><span class="line">    xn[j] = 初始值;</span><br><span class="line"></span><br><span class="line">    <span class="string">//</span> 其他n-1个阶段</span><br><span class="line">    for<span class="params">(<span class="attr">i</span>=n-1; i&gt;=1; <span class="attr">i</span>=i-1)</span>{</span><br><span class="line"></span><br><span class="line">        <span class="string">//</span> f<span class="params">(i)</span>与i有关的表达式</span><br><span class="line">        for<span class="params">(<span class="attr">j</span>=1; j&gt;=f(i)</span>; j=j+1){</span><br><span class="line">            xi[j] = j = max<span class="params">(或min)</span> {g<span class="params">(xi-1[j1:j2])</span>,<span class="string">...</span> ,g<span class="params">(xi-1[jk:jk+1])</span>};</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="string">//</span> 由子问题的最优解求解整个问题的最优解的方案</span><br><span class="line">t = g<span class="params">(x1[j1:j2])</span>;</span><br><span class="line"></span><br><span class="line">for<span class="params">(<span class="attr">i</span>=2; i&lt;=n-1; <span class="attr">i</span>=i+1)</span>{</span><br><span class="line">    t = t-xi-1[ji];</span><br><span class="line"></span><br><span class="line">    for<span class="params">(<span class="attr">j</span>=1; j&gt;=f(i)</span>; j=j+1){</span><br><span class="line">        <span class="keyword">if</span><span class="params">(<span class="attr">t</span>=xi[ji])</span>{</span><br><span class="line">            break;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>
<h1 id="Greedy-Algorithm-贪心算法"><a href="#Greedy-Algorithm-贪心算法" class="headerlink" title="Greedy Algorithm - 贪心算法"></a>Greedy Algorithm - 贪心算法</h1><h2 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h2><p>所谓贪心算法是指，在对问题求解时，总是做出在当前看来是最好的选择。也就是说，不从整体最优上加以考虑，他所做出的仅是在某种意义上的局部最优解。</p>
<p>贪心算法没有固定的算法框架，算法设计的关键是贪心策略的选择。必须注意的是，贪心算法不是对所有问题都能得到整体最优解，选择的贪心策略必须具备无后效性，即某个状态以后的过程不会影响以前的状态，只与当前状态有关。</p>
<p>所以对所采用的贪心策略一定要仔细分析其是否满足无后效性。</p>
<h2 id="适用场合-2"><a href="#适用场合-2" class="headerlink" title="适用场合"></a>适用场合</h2><p>贪心策略适用的前提是：<strong>局部最优策略能导致产生全局最优解</strong>。</p>
<p>实际上，贪心算法适用的情况很少。一般，对一个问题分析是否适用于贪心算法，可以先选择该问题下的几个实际数据进行分析，就可做出判断。</p>
<p>狭义的贪心算法指的是解最优化问题的一种特殊方法，解决过程中总是做出当下最好的选择，因为具有最优子结构的特点，局部最优解可以得到全局最优解；这种贪心算法是动态规划的一种特例。能用贪心解决的问题，也可以用动态规划解决。</p>
<p>而广义的贪心指的是一种通用的贪心策略，基于当前局面而进行贪心决策。</p>
<h2 id="基本步骤-2"><a href="#基本步骤-2" class="headerlink" title="基本步骤"></a>基本步骤</h2><ol>
<li><p>把求解的问题分成若干个子问题。</p>
</li>
<li><p>对每一子问题求解，得到子问题的局部最优解。</p>
</li>
<li><p>把子问题的解局部最优解合成原来解问题的一个解。</p>
</li>
</ol>
<h2 id="常见解决问题-1"><a href="#常见解决问题-1" class="headerlink" title="常见解决问题"></a>常见解决问题</h2><ol>
<li><p>纸币找零问题</p>
</li>
<li><p>服务器任务安排问题</p>
</li>
<li><p>分糖果问题</p>
</li>
<li><p>小船过河问题</p>
</li>
<li><p>跳一跳</p>
</li>
</ol>
<h1 id="Back-Tracking-Algorithm-回溯法"><a href="#Back-Tracking-Algorithm-回溯法" class="headerlink" title="Back Tracking Algorithm - 回溯法"></a>Back Tracking Algorithm - 回溯法</h1><h2 id="概念-3"><a href="#概念-3" class="headerlink" title="概念"></a>概念</h2><p>回溯算法实际上一个类似枚举的搜索尝试过程，主要是在搜索尝试过程中寻找问题的解，当发现已不满足求解条件时，就“回溯”返回，尝试别的路径。</p>
<p>回溯法是一种选优搜索法，按选优条件向前搜索，以达到目标。但当探索到某一步时，发现原先选择并不优或达不到目标，就退回一步重新选择，这种走不通就退回再走的技术为回溯法，而满足回溯条件的某个状态的点称为“回溯点”。</p>
<p>许多复杂的，规模较大的问题都可以使用回溯法，有“通用解题方法”的美称。</p>
<p>在包含问题的所有解的解空间树中，按照深度优先搜索的策略，从根结点出发深度探索解空间树。当探索到某一结点时，要先判断该结点是否包含问题的解，如果包含，就从该结点出发继续探索下去，如果该结点不包含问题的解，则逐层向其祖先结点回溯。</p>
<h2 id="基本步骤-3"><a href="#基本步骤-3" class="headerlink" title="基本步骤"></a>基本步骤</h2><ol>
<li><p>针对所给问题，确定问题的解空间：首先应明确定义问题的解空间，问题的解空间应至少包含问题的一个（最优）解。</p>
</li>
<li><p>确定结点的扩展搜索规则。</p>
</li>
<li><p>以深度优先方式搜索解空间，并在搜索过程中用剪枝函数避免无效搜索。</p>
</li>
</ol>
<h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><p>非递归<br><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">int a[n],i;</span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i&gt;<span class="number">0</span> (有路可走) <span class="keyword">and</span> (未达到目标))</span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span>(i &gt; n){</span><br><span class="line">        搜索到一个解，输出；</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span>{</span><br><span class="line">        a[i]第一个可能的值；</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(a[i]在不满足约束条件且在搜索空间内){</span><br><span class="line">            a[i]下一个可能的值；</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(a[i]在搜索空间内){</span><br><span class="line">            标识占用的资源；</span><br><span class="line">            i = i+<span class="number">1</span>; <span class="comment">// 扩展下一个结点</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span>{</span><br><span class="line">            清理所占的状态空间; <span class="comment">// 回溯</span></span><br><span class="line">            i = i – <span class="number">1</span>; </span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<p>递归<br><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> a<span class="literal">[<span class="identifier">n</span>]</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="constructor">Search(<span class="params">int</span> <span class="params">i</span>)</span></span><br><span class="line">{</span><br><span class="line">    <span class="keyword">if</span>(i &gt; n){</span><br><span class="line">       输出结果;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">else</span>{</span><br><span class="line">       <span class="comment">// 枚举i所有可能的路径</span></span><br><span class="line">       <span class="keyword">for</span>(j = 下界; j &lt;= 上界; j=j+<span class="number">1</span>){</span><br><span class="line"></span><br><span class="line">           <span class="comment">// 满足限界函数和约束条件</span></span><br><span class="line">           <span class="keyword">if</span>(<span class="keyword">fun</span>(j)){</span><br><span class="line">                a<span class="literal">[<span class="identifier">i</span>]</span> = j;</span><br><span class="line">                ...</span><br><span class="line">                <span class="constructor">Search(<span class="params">i</span> + 1)</span>;</span><br><span class="line">                回溯前的清理工作(如a<span class="literal">[<span class="identifier">i</span>]</span>置空值等);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></p>
<h2 id="常见解决问题-2"><a href="#常见解决问题-2" class="headerlink" title="常见解决问题"></a>常见解决问题</h2><ol>
<li>N皇后问题</li>
</ol>
<h1 id="Branch-and-Bound-分支定界法"><a href="#Branch-and-Bound-分支定界法" class="headerlink" title="Branch and Bound - 分支定界法"></a>Branch and Bound - 分支定界法</h1><h2 id="概念-4"><a href="#概念-4" class="headerlink" title="概念"></a>概念</h2><p>类似于回溯法，也是一种在问题的解空间树T上搜索问题解的算法。但在一般情况下，分支定界法与回溯法的求解目标不同。回溯法的求解目标是找出T中满足约束条件的所有解，而分支定界法的求解目标则是找出满足约束条件的一个解，或是在满足约束条件的解中找出使某一目标函数值达到极大或极小的解，即在某种意义下的最优解。</p>
<p>所谓“分支”就是采用广度优先的策略，依次搜索E-结点的所有分支，也就是所有相邻结点，抛弃不满足约束条件的结点，其余结点加入活结点表。然后从表中选择一个结点作为下一个E-结点，继续搜索。</p>
<p>选择下一个E-结点的方式不同，则会有几种不同的分支搜索方式。</p>
<ol>
<li><p>FIFO搜索</p>
</li>
<li><p>LIFO搜索</p>
</li>
<li><p>优先队列式搜索</p>
</li>
</ol>
<h2 id="一般过程"><a href="#一般过程" class="headerlink" title="一般过程"></a>一般过程</h2><p>由于求解目标不同，导致分支定界法与回溯法在解空间树T上的搜索方式也不相同。回溯法以深度优先的方式搜索解空间树T，而分支定界法则以广度优先或以最小耗费优先的方式搜索解空间树T。</p>
<p>分支定界法的搜索策略是：在扩展结点处，先生成其所有的儿子结点（分支），然后再从当前的活结点表中选择下一个扩展对点。为了有效地选择下一扩展结点，以加速搜索的进程，在每一活结点处，计算一个函数值（限界），并根据这些已计算出的函数值，从当前活结点表中选择一个最有利的结点作为扩展结点，使搜索朝着解空间树上有最优解的分支推进，以便尽快地找出一个最优解。</p>
<p>分支定界法常以广度优先或以最小耗费（最大效益）优先的方式搜索问题的解空间树。问题的解空间树是表示问题解空间的一棵有序树，常见的有子集树和排列树。在搜索问题的解空间树时，分支定界法与回溯法对当前扩展结点所使用的扩展方式不同。在分支定界法中，每一个活结点只有一次机会成为扩展结点。活结点一旦成为扩展结点，就一次性产生其所有儿子结点。在这些儿子结点中，那些导致不可行解或导致非最优解的儿子结点被舍弃，其余儿子结点被子加入活结点表中。此后，从活结点表中取下一结点成为当前扩展结点，并重复上述结点扩展过程。这个过程一直持续到找到所求的解或活结点表为空时为止。</p>
<h2 id="和回溯法的区别"><a href="#和回溯法的区别" class="headerlink" title="和回溯法的区别"></a>和回溯法的区别</h2><p>有一些问题其实无论用回溯法还是分支定界法都可以得到很好的解决，但是另外一些则不然。也许我们需要具体一些的分析——到底何时使用分支限界而何时使用回溯呢？</p>
<p>回溯法深度优先搜索堆栈活结点的所有可行子结点被遍历后才被从栈中弹出找出满足约束条件的所有解</p>
<p>分支定界法广度优先或最小消耗优先搜索队列、优先队列每个结点只有一次成为活结点的机会找出满足约束条件的一个解或特定意义下的最优解</p>
]]></content>
      <categories>
        <category>程序设计</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>优化</tag>
      </tags>
  </entry>
  <entry>
    <title>学习 20&amp;#37 的操作，实现 80&amp;#37 的 Tmux 功能</title>
    <url>/zh-cn/posts/c430207c-bbc2-11eb-8847-0772b2ac4cf2/</url>
    <content><![CDATA[<p>根据<a href="https://zh.wikipedia.org/wiki/%E5%B8%95%E7%B4%AF%E6%89%98%E6%B3%95%E5%88%99">帕累托定律</a>的衍生，可以通过学习20%的操作掌握一个软件80%的功能。</p>
<p>本文主要介绍一下 Tmux 及其操作，配置，使用场景。</p>
<p><img src="/imgs/Tool/Softwares/tmux-display.png" alt=""></p>
<a id="more"></a>
<h2 id="本文不包含以下内容"><a href="#本文不包含以下内容" class="headerlink" title="本文不包含以下内容"></a>本文不包含以下内容</h2><p>tmate</p>
<h2 id="Tmux-是什么"><a href="#Tmux-是什么" class="headerlink" title="Tmux 是什么?"></a>Tmux 是什么?</h2><p>Tmux 是 <strong>Terminal MUltipleXer(终端复用器)</strong> 的缩写，主要应用在终端以实现多任务处理。 将终端与会话解绑，保持后台运行。</p>
<h2 id="为什么用它"><a href="#为什么用它" class="headerlink" title="为什么用它?"></a>为什么用它?</h2><ol>
<li>节省终端资源<br>一个主机能开启的终端(tty)是有限的，因此会限制用户占用的终端数。在没有终端复用的情况下，实现多任务处理较为困难，比如同时监控多个应用的运行，或者程序编辑同时调试，因此有必要复用终端，提高效率。</li>
<li>用户的多任务处理<br>如上所述，复用后可以帮助用户在一个窗口显示多个prompt，提高效率。</li>
<li>可以装B。</li>
</ol>
<h2 id="怎么下载"><a href="#怎么下载" class="headerlink" title="怎么下载?"></a>怎么下载?</h2><p>大部分情况下，用包管理器直接下载 <code>tmux</code> 就好了。</p>
<h2 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h2><p><strong>Prefix</strong> 前缀(Prefix)即用来修饰特殊的快捷键的前导键，使用它可扩展快捷键的定义，软件可通过设置前缀引导快捷键以避免与系统软件或其他软件的冲突。</p>
<p>为了简化描述，一般将<code>Control-X</code>缩写为<code>C-X</code>，相关知识请参照「从键盘、键盘布局到输入法、输入方案」中的介绍。在Tmux中，默认的Prefix是 <code>C-b</code>，可以通过自己定义改为其他键，普遍推荐改为<code>C-a</code>，但会与Emacs的<code>C-a</code>冲突，所以按照习惯更改即可。</p>
<p>在Tmux中，按下前缀不会有任何提示。</p>
<p><strong>会话(Session)</strong> (假设)一个用户只有一个终端，但是可以有多个进程，在 tmux 里，会话可以等同与进程。一个终端可以选择与不同的会话(进程)连接，实现第一层复用。</p>
<p><strong>窗口(Window)</strong> 在一个会话中，可以有多个窗口，通过快捷键切换，实现第二层复用。</p>
<p><strong>面板或子窗口(Panel)</strong> 在一个窗口内，可以将屏幕划分为多个区域，每个区域都可以执行命令，实现第三层复用。 </p>
<p><strong>提示符(Prompt)</strong> 在一个面板内，一般会有一个(shell的)提示符，此时的使用方法和一般的 terminal 无二。</p>
<p>所以，一个shell可以标识为 Session-Window-Panel，由此可以实现非常复杂的复用。比如不同的 session 代表不同类型的任务（监控、开发、维护），不同的 window 代表不同的具体工作（开发、部署），不同的 panel 增加 window 的利用效率。</p>
<p><img src="/imgs/Tool/Softwares/tmux-intro.png" alt=""></p>
<p>如图蓝框显示的是当前会话的名称。</p>
<p>如图红框显示的是当前会话下各个窗口的名称。开始的数字为窗口的编号，冒号后的文字表示(此窗口内)(焦点所在的面板)运行的程序，符号 <code>*</code> 表示当前焦点所在的窗口，符号<code>-Z</code>表式此窗口内的面板是一个被放大（扩展到全屏）的面板。</p>
<p>如图绿框显示的是当前窗口下各个面板的编号。红色的编号表示焦点在此面板。</p>
<p>如图黄框显示的是每个面板下的提示符，紫框内显示的是每个面板的大小。</p>
<p>如图蓝色区域遮盖的是当前主机的名称。</p>
<h2 id="可以做的事：shell-命令"><a href="#可以做的事：shell-命令" class="headerlink" title="可以做的事：shell 命令"></a>可以做的事：shell 命令</h2><h2 id="可以做的事：键盘快捷键"><a href="#可以做的事：键盘快捷键" class="headerlink" title="可以做的事：键盘快捷键"></a>可以做的事：键盘快捷键</h2><h2 id="自定义tmux"><a href="#自定义tmux" class="headerlink" title="自定义tmux"></a>自定义tmux</h2><h2 id="tmux-的衍生品"><a href="#tmux-的衍生品" class="headerlink" title="tmux 的衍生品"></a>tmux 的衍生品</h2><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.ruanyifeng.com/blog/2019/10/tmux.html">https://www.ruanyifeng.com/blog/2019/10/tmux.html</a></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>翻译中</tag>
        <tag>Shell</tag>
        <tag>终端</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO 插件：hexo-generator-anything</title>
    <url>/zh-cn/posts/837737c2-bef7-11eb-bac7-4f63fad82170/</url>
    <content><![CDATA[<p>一个可以根据文章的元信息，自动生成指定目录页的插件，可以看作 hexo-generator-caterogier 的推广，不过更自由。</p>
<a id="more"></a>
<h1 id="基本介绍"><a href="#基本介绍" class="headerlink" title="基本介绍"></a>基本介绍</h1><p>本文提到的插件是 <a href="https://github.com/kristofzerbe/hexo-generator-anything"><strong>hexo-generator-anything</strong></a>。</p>
<p>以下是来自作者的简介<br><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">Suppose you have an author variable in your front matter, </span><br><span class="line">this plugin will generate an overview page of all authors (called INDEX) and for each author, </span><br><span class="line">a listing page with all posts by that author (POSTS).</span><br></pre></td></tr></table></figure></p>
<p>插件的效果可以查看本博客的<a href="https://obster-y.github.io/zh-cn/series/">系列</a>页，即用来合并文章为系列的。</p>
<p>插件也可用于区分不同作者（如同此插件作者提到的），或者是一些反应文章内在联系但不好用标签表示的东西。</p>
<h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><p>为了方便起见，把它当作第二个 <strong>分类</strong> 来看。</p>
<p>首先，在想要分类的文章的元信息里加入这一条（如果每篇都要配，可以在scaffold里加上），index_name 是想要集合的名字，如本博客的<code>系列</code>，valn 就是不同的内容了，系列下面可以有各种系列，vim系列，emacs系列之类的。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">index_name:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">val1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">val2</span></span><br></pre></td></tr></table></figure>
<p>然后，在博客的 source 目录下创建一个 <code>_anything</code> 目录，里面再创建的文件夹应该是以 <code>index_name</code> 明明的，这个目录下再有的文件则是不同的 val 的名字，用来做进一步美化。</p>
<p><img src="/imgs/Tool/Softwares/Blog/hexo-g-a-anything-d.png" alt=""></p>
<p>再在博客的 <code>_config.yml</code> 里加入这些，注意 <code>path</code> 前面没有 <code>-</code>。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">anything:</span></span><br><span class="line">  <span class="attr">layout_index:</span> </span><br><span class="line">  <span class="attr">layout_posts:</span> </span><br><span class="line">  <span class="attr">index_mappings:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">variable:</span> <span class="string">index_name</span></span><br><span class="line">      <span class="attr">path:</span> <span class="string">index_name</span></span><br></pre></td></tr></table></figure>
<p>最后重新生成博客就好了。</p>
<p>但是，侧边栏没有刚刚的 index 是正常的，如果想要在侧边栏显示，需要手动去<strong>主题</strong>的 <code>_config.yml</code> 下找到 <code>menu</code>，然后自定义目录项了。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">index:</span> <span class="string">/index_name/</span> <span class="string">||</span> <span class="string">icon</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始配置 i3-wm</title>
    <url>/zh-cn/posts/c4304786-bbc2-11eb-8847-0772b2ac4cf2/</url>
    <content><![CDATA[<p>一篇关于配置i3wm以及polybar的教程。</p>
<p>本教程的配置后效果图：</p>
<p><img src="/imgs/Tool/Softwares/i3wm-01.png" alt=""></p>
<a id="more"></a>
<p>建议可以先阅读一些<strong>Linux图形界面</strong>相关的知识作为背景，本教程提到的所有文件可以在<a href="https://github.com/obster-y/i3-wm-config">此仓库</a>下载。</p>
<h1 id="为什么要使用窗口管理器-WM-而不是桌面环境-DE"><a href="#为什么要使用窗口管理器-WM-而不是桌面环境-DE" class="headerlink" title="为什么要使用窗口管理器(WM)而不是桌面环境(DE)"></a>为什么要使用窗口管理器(WM)而不是桌面环境(DE)</h1><p>优点:</p>
<ol>
<li>比之 DE，WM 需要较少的系统资源(内存, cpu, 硬盘空间…)。</li>
<li>WM 在各个方面都有更高的配置自由度。</li>
<li>WM 的配置容易备份和还原</li>
</ol>
<p>缺点:</p>
<ol>
<li>默认情况下 WM 比 DE 丑很多。</li>
<li>对于新手来说，WM 的配置比较繁琐。</li>
</ol>
<h1 id="配置-i3-wm"><a href="#配置-i3-wm" class="headerlink" title="配置 i3-wm"></a>配置 i3-wm</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>请务必下载 <code>i3-gaps</code> 而不是 <code>i3-wm</code> 以免部分包冲突。</p>
<h2 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h2><p>当下载完 i3-wm 后，从登录管理器选择环境为 i3。第一次登录(没检测到修改过的 i3 配置文件)时，会有一个弹出窗口进行非常基本的配置。</p>
<p>默认的配置文件夹路径是 <code>~/.config/i3/</code>。</p>
<p>与 <strong>i3 本体</strong>相关的配置应放在 <code>~/.config/i3/config</code> 文件里。</p>
<p>在窗口管理器的环境下，绝大部分的操作可以通过键盘完成，为了避免与其他软件提供的快件键冲突，需要配置一个前导键（Leader Key）。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#++++++=定义按键变量=++++++#</span></span><br><span class="line"><span class="comment">#(Mod1 = Alt, Mod4 = Super/Win)</span></span><br><span class="line">set $mod Mod4</span><br><span class="line">set $m_alt Mod1</span><br></pre></td></tr></table></figure>
<h2 id="整体外观"><a href="#整体外观" class="headerlink" title="整体外观"></a>整体外观</h2><p>i3 的外观配置的具体含义可以通过尝试/查询得到，个人认为这部份配置不是特别重要。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#++++++=外观=++++++#;</span></span><br><span class="line"><span class="comment">## 启动窗口后的默认配置</span></span><br><span class="line">new_window none</span><br><span class="line">new_float normal</span><br><span class="line">hide_edge_borders both #隐藏窗口边缘</span><br><span class="line"></span><br><span class="line"><span class="comment">## 窗口间距设置（如果是小屏幕就别设置了）</span></span><br><span class="line"><span class="comment"># gaps inner 5</span></span><br><span class="line"><span class="comment"># gaps outer 5</span></span><br><span class="line"><span class="comment"># smart_gaps on</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#%%# 颜色设置（真的没啥用）</span></span><br><span class="line"><span class="comment">## set primary gruvbox colorscheme colors</span></span><br><span class="line">set $bg #282828</span><br><span class="line">set $red #cc241d</span><br><span class="line">set $green #98971a</span><br><span class="line">set $yellow #d79921</span><br><span class="line">set $blue #458588</span><br><span class="line">set $purple #b16286</span><br><span class="line">set $aqua #689d68</span><br><span class="line">set $gray #a89984</span><br><span class="line">set $darkgray #1d2021</span><br><span class="line">set $white #ffffff</span><br><span class="line"></span><br><span class="line"><span class="comment">##class border backgr. text indicator child_border</span></span><br><span class="line">client.focused #4c7899 #285577 #ffffff #2e9ef4 #285577</span><br><span class="line">client.focused_inactive #81c2d6 #5f676a #ffffff #484e50 #0b6e48</span><br><span class="line">client.unfocused #c9cabb #222222 #888888 #292d2e #222222</span><br><span class="line">client.urgent #2f343a #900000 #ffffff #199475 #900000</span><br><span class="line">client.placeholder #a2b4ba #0c0c0c #ffffff #1793d0 #0c0c0c</span><br><span class="line">client.background #82abba</span><br><span class="line"></span><br><span class="line"><span class="comment">## 弹出窗口的设置</span></span><br><span class="line">for_window [window_role=&quot;pop-up&quot;] floating enable</span><br><span class="line">for_window [window_role=&quot;task_dialog&quot;] floating enable</span><br><span class="line"></span><br><span class="line"><span class="comment">## 默认浮动的程序（程序的名字可以在 &quot;/usr/share/applictions&quot; 找到）</span></span><br><span class="line">for_window [class=&quot;Gpicview&quot;] floating enable</span><br><span class="line">for_window [class=&quot;mpv&quot;] floating enable</span><br><span class="line">for_window [class=&quot;Gimp&quot;] floating enable</span><br><span class="line">for_window [class=&quot;Xarchiver&quot;] floating enable</span><br><span class="line">for_window [class=&quot;Genymotion&quot;] floating enable</span><br><span class="line">for_window [class=&quot;Vlc&quot;] floating enable</span><br><span class="line">for_window [class=&quot;VirtualBox&quot;] floating enable</span><br><span class="line">for_window [class=&quot;Thunar&quot;] floating enable</span><br><span class="line">for_window [class=&quot;Catfish&quot;] floating enable</span><br><span class="line"></span><br><span class="line"><span class="comment">## 字体设置</span></span><br><span class="line"><span class="comment">## sarasa mono sc nerd 是我个人比较喜欢的字体，不过含有的符号不够多，可以自己换，但是注意文件后面设置中的符号变化</span></span><br><span class="line">font pango:Sarasa Mono SC Nerd 10</span><br></pre></td></tr></table></figure>
<h2 id="自启动应用"><a href="#自启动应用" class="headerlink" title="自启动应用"></a>自启动应用</h2><p>这里都是登录后的自启动应用</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#++++++=自启动程序=++++++#</span></span><br><span class="line"><span class="comment"># xcompmgr: 窗口透明相关</span></span><br><span class="line">exec --no-startup-id xcompmgr</span><br><span class="line"><span class="comment"># compton: 窗口透明相关</span></span><br><span class="line">exec --no-startup-id compton -b</span><br><span class="line"><span class="comment"># mate-power-manager: 电池管理和屏幕亮度调节（主要用于笔记本，PC可以不用）</span></span><br><span class="line">exec --no-startup-id mate-power-manager</span><br><span class="line"><span class="comment"># network-manager: 网络管理器（及托盘图标）</span></span><br><span class="line">exec --no-startup-id nm-applet</span><br><span class="line"><span class="comment"># blueman: 蓝牙设置</span></span><br><span class="line">exec --no-startup-id blueman</span><br><span class="line">exec --no-startup-id blueman-applet</span><br><span class="line"><span class="comment"># polkit: 进程优先级相关</span></span><br><span class="line">exec --no-startup-id /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1 &amp;</span><br><span class="line"><span class="comment"># emacs: 如果不用 C-S 模式的 emacs（或者根本不用）就没必要开了</span></span><br><span class="line">exec --no-startup-id emacs --daemon</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认在 1 号工作区打开终端</span></span><br><span class="line">exec --no-startup-id i3-msg &#x27;workspace 1; exec  --no-startup-id sakura&#x27;</span><br></pre></td></tr></table></figure>
<h2 id="键盘快捷键"><a href="#键盘快捷键" class="headerlink" title="键盘快捷键"></a>键盘快捷键</h2><p>个人认为 i3 最棒的部分，可以完全定义一套自己习惯的操作快捷键</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#++++++=快捷键=++++++#</span></span><br><span class="line"><span class="comment"># 应用程序启动器：drun(i3 自带)，rofi(推荐)</span></span><br><span class="line"><span class="comment"># rofi 的主题样式可以通过更改位于 `~/.config/rofi/` 下的配置文件实现，文件名是参数 `-theme` 的值</span></span><br><span class="line">bindsym $mod+d exec --no-startup-id dmenu_run</span><br><span class="line">bindsym $m_alt+space exec --no-startup-id rofi -show drun -theme ctheme</span><br><span class="line"></span><br><span class="line"><span class="comment"># 终端</span></span><br><span class="line"><span class="comment"># 这个 sakura 终端还行，唯一问题就是不能通过键盘快捷键缩放字体，稍微有点不好</span></span><br><span class="line">bindsym $mod+Return exec --no-startup-id sakura</span><br><span class="line">bindsym $mod+z exec --no-startup-id sakura</span><br><span class="line"></span><br><span class="line"><span class="comment"># 浏览器</span></span><br><span class="line"><span class="comment"># 也不知道 chrome 的产品有什么毛病，非要把下载为 mhtml 这个选项显式地去掉，加上 `--save-page-as-mhtml` 可以开启这个功能</span></span><br><span class="line">bindsym $mod+c exec --no-startup-id firefox</span><br><span class="line">bindsym $mod+Shift+c exec --no-startup-id chromium --save-page-as-mhtml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件管理器</span></span><br><span class="line"><span class="comment"># 这里用的是 thunar，随便换</span></span><br><span class="line">bindsym $mod+e exec --no-startup-id thunar</span><br><span class="line"></span><br><span class="line"><span class="comment"># screenshot</span></span><br><span class="line"><span class="comment"># -u 使用当前激活的窗口, -s 手动选择窗口, -b = 选择窗口带上边缘</span></span><br><span class="line">bindsym Print exec --no-startup-id &quot;scrot -u -q 100 &#x27;./Pictures/Screenshots/%Y%m%d_%H%M%s_$wx$h.png&#x27;&quot;</span><br><span class="line">bindsym --release Shift+Print exec --no-startup-id &quot;scrot -bs -q 100 &#x27;./Pictures/Screenshots/%Y%m%d_%H%M%s_$wx$h.png&#x27;&quot;</span><br><span class="line">bindsym --release Control+Print exec --no-startup-id &quot;scrot -s -q 100 &#x27;./Pictures/Screenshots/%Y%m%d_%H%M%s_$wx$h.png&#x27;&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment"># emacs</span></span><br><span class="line"><span class="comment"># 不用 emacs 可以把这个键另作它用</span></span><br><span class="line">bindsym $mod+Shift+e exec --no-startup-id emacsclient -c</span><br><span class="line"></span><br><span class="line"><span class="comment"># VSC</span></span><br><span class="line"><span class="comment"># ### 注意 ### 用这个快捷键打开的 VS code 不会读取到配置在用户路径下默认shell 的 rc 文件里的环境变量，比如 Latex Workshop 的工作可能会出问题，这种情况可以通过应用启动器开启 VS code 以避免</span></span><br><span class="line">bindsym $mod+q exec --no-startup-id code</span><br><span class="line"></span><br><span class="line"><span class="comment"># XMind</span></span><br><span class="line">bindsym $mod+m exec --no-startup-id xmind</span><br><span class="line"></span><br><span class="line"><span class="comment"># Zotero</span></span><br><span class="line">bindsym $mod+Shift+z exec --no-startup-id zotero</span><br></pre></td></tr></table></figure>
<h2 id="工作区设置"><a href="#工作区设置" class="headerlink" title="工作区设置"></a>工作区设置</h2><p>工作区的定义可以在<a href="https://i3wm.org/docs/userguide.html#_using_workspaces">这里</a>找。</p>
<h3 id="工作区"><a href="#工作区" class="headerlink" title="工作区"></a>工作区</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">## 给应用程序添加默认启动到的窗口</span></span><br><span class="line">assign [class=&quot;sakura&quot;] 1</span><br><span class="line">assign [class=&quot;code&quot;] 2</span><br><span class="line">assign [class=&quot;Firefox&quot;] 3</span><br><span class="line"></span><br><span class="line"><span class="comment">## 切换工作区</span></span><br><span class="line">bindsym $mod+Tab workspace next</span><br><span class="line">bindsym $m_alt+Tab workspace prev</span><br><span class="line"><span class="comment"># bindsym $mod+Shift+Tab workspace prev</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 定义工作区的变量以方便使用</span></span><br><span class="line">set $ws1 1</span><br><span class="line">set $ws2 2</span><br><span class="line">set $ws3 3</span><br><span class="line">set $ws4 4</span><br><span class="line">set $ws5 5</span><br><span class="line">set $ws6 6</span><br><span class="line">set $ws7 7</span><br><span class="line">set $ws8 8</span><br><span class="line">set $ws9 9</span><br><span class="line">set $ws10 10</span><br><span class="line"></span><br><span class="line"><span class="comment">## 切换到指定工作区</span></span><br><span class="line">bindsym $mod+1 workspace number $ws1</span><br><span class="line">bindsym $mod+2 workspace number $ws2</span><br><span class="line">bindsym $mod+3 workspace number $ws3</span><br><span class="line">bindsym $mod+4 workspace number $ws4</span><br><span class="line">bindsym $mod+5 workspace number $ws5</span><br><span class="line">bindsym $mod+6 workspace number $ws6</span><br><span class="line">bindsym $mod+7 workspace number $ws7</span><br><span class="line">bindsym $mod+8 workspace number $ws8</span><br><span class="line">bindsym $mod+9 workspace number $ws9</span><br><span class="line">bindsym $mod+0 workspace number $ws10</span><br><span class="line"></span><br><span class="line"><span class="comment">## 移动到指定工作区</span></span><br><span class="line">bindsym $mod+Shift+1 move container to workspace number $ws1</span><br><span class="line">bindsym $mod+Shift+2 move container to workspace number $ws2</span><br><span class="line">bindsym $mod+Shift+3 move container to workspace number $ws3</span><br><span class="line">bindsym $mod+Shift+4 move container to workspace number $ws4</span><br><span class="line">bindsym $mod+Shift+5 move container to workspace number $ws5</span><br><span class="line">bindsym $mod+Shift+6 move container to workspace number $ws6</span><br><span class="line">bindsym $mod+Shift+7 move container to workspace number $ws7</span><br><span class="line">bindsym $mod+Shift+8 move container to workspace number $ws8</span><br><span class="line">bindsym $mod+Shift+9 move container to workspace number $ws9</span><br><span class="line">bindsym $mod+Shift+0 move container to workspace number $ws10</span><br></pre></td></tr></table></figure>
<h3 id="焦点控制"><a href="#焦点控制" class="headerlink" title="焦点控制"></a>焦点控制</h3><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#------=焦点控制=------#</span></span><br><span class="line"><span class="comment">## 移动焦点</span></span><br><span class="line"><span class="comment"># bindsym $mod+j focus left</span></span><br><span class="line"><span class="comment"># bindsym $mod+k focus down</span></span><br><span class="line"><span class="comment"># bindsym $mod+l focus up</span></span><br><span class="line"><span class="comment"># bindsym $mod+semicolon focus right</span></span><br><span class="line"></span><br><span class="line">bindsym $mod+Left focus left</span><br><span class="line">bindsym $mod+Down focus down</span><br><span class="line">bindsym $mod+Up focus up</span><br><span class="line">bindsym $mod+Right focus right</span><br><span class="line"></span><br><span class="line"><span class="comment">## 移动焦点到当前容器的父级</span></span><br><span class="line">bindsym $mod+u focus parent</span><br><span class="line"><span class="comment">## 移动焦点到当前容器的子级</span></span><br><span class="line">bindsym $mod+Shift+u focus child</span><br><span class="line"></span><br><span class="line"><span class="comment">## 使焦点跟随鼠标移动（利弊皆有，用着调吧）</span></span><br><span class="line">focus_follows_mouse yes</span><br><span class="line"></span><br><span class="line"><span class="comment">## 改变窗口排列方式（贴片/浮动）</span></span><br><span class="line"><span class="comment"># bindsym $mod+space focus mode_toggle</span></span><br></pre></td></tr></table></figure>
<h3 id="窗口控制"><a href="#窗口控制" class="headerlink" title="窗口控制"></a>窗口控制</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#------=窗口控制=------#</span></span><br><span class="line"><span class="comment">## 按着 $mod 可以拖动窗口</span></span><br><span class="line">floating_modifier $mod</span><br><span class="line"></span><br><span class="line"><span class="comment">## 移动窗口</span></span><br><span class="line"><span class="comment"># bindsym $mod+Shift+J move left</span></span><br><span class="line"><span class="comment"># bindsym $mod+Shift+K move down</span></span><br><span class="line"><span class="comment"># bindsym $mod+Shift+L move up</span></span><br><span class="line"><span class="comment"># bindsym $mod+Shift+colon move right</span></span><br><span class="line">bindsym $mod+Shift+Left move left</span><br><span class="line">bindsym $mod+Shift+Down move down</span><br><span class="line">bindsym $mod+Shift+Up move up</span><br><span class="line">bindsym $mod+Shift+Right move right</span><br><span class="line"></span><br><span class="line"><span class="comment">## 水平分割</span></span><br><span class="line">bindsym $mod+h split h</span><br><span class="line"><span class="comment">## 竖直分割</span></span><br><span class="line">bindsym $mod+v split v</span><br><span class="line"></span><br><span class="line"><span class="comment">## 切换状态栏的显隐 (polybar 不管用)</span></span><br><span class="line"><span class="comment"># bindsym $mod+m bar mode toggle</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 切换工作区内窗口的堆叠方式</span></span><br><span class="line">bindsym $mod+space floating toggle</span><br><span class="line">bindsym $mod+Shift+space sticky toggle</span><br><span class="line"></span><br><span class="line"><span class="comment">## 切换全屏</span></span><br><span class="line">bindsym $mod+f fullscreen toggle</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换窗口样式</span></span><br><span class="line">bindsym $mod+s layout stacking</span><br><span class="line">bindsym $mod+t layout tabbed</span><br><span class="line">bindsym $mod+a layout toggle split</span><br><span class="line"></span><br><span class="line"><span class="comment">## 关闭窗口（带着里面的程序）</span></span><br><span class="line">bindsym $mod+Shift+q kill</span><br><span class="line">bindsym $mod+Escape kill</span><br><span class="line"></span><br><span class="line"><span class="comment">## 隐藏/显示窗口（加减号）</span></span><br><span class="line">bindsym $mod+minus move scratchpad</span><br><span class="line">bindsym $mod+plus scratchpad show</span><br><span class="line"></span><br><span class="line"><span class="comment">## 窗口标题/边缘切换</span></span><br><span class="line"><span class="comment"># bindsym $mod+u border none</span></span><br><span class="line"><span class="comment"># bindsym $mod+n border normal</span></span><br><span class="line"><span class="comment"># bindsym $mod+o border 1pixel</span></span><br><span class="line">bindsym $mod+b border toggle</span><br></pre></td></tr></table></figure>
<h3 id="控制窗口大小"><a href="#控制窗口大小" class="headerlink" title="控制窗口大小"></a>控制窗口大小</h3><p>i3默认不能直接用鼠标改变窗口大小，需要进入到缩放状态下操作</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#------=缩放窗口=------#</span></span><br><span class="line">bindsym $mod+Shift+r mode &quot;resize&quot;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 缩放状态下快捷键</span></span><br><span class="line">mode &quot;resize&quot; &#123;</span><br><span class="line"> bindsym h resize shrink width 10 px or 10 ppt</span><br><span class="line"> bindsym j resize grow width 10 px or 10 ppt</span><br><span class="line"> bindsym l resize shrink height 10 px or 10 ppt</span><br><span class="line"> bindsym k resize grow height 10 px or 10 ppt</span><br><span class="line"></span><br><span class="line"> bindsym Left resize shrink width 10 px or 10 ppt</span><br><span class="line"> bindsym Right resize grow width 10 px or 10 ppt</span><br><span class="line"> bindsym Up resize shrink height 10 px or 10 ppt</span><br><span class="line"> bindsym Down resize grow height 10 px or 10 ppt</span><br><span class="line"></span><br><span class="line"> bindsym Shift+Left resize shrink width 5 px or 5 ppt</span><br><span class="line"> bindsym Shift+Right resize grow width 5 px or 5 ppt</span><br><span class="line"> bindsym Shift+Up resize shrink height 5 px or 5 ppt</span><br><span class="line"> bindsym Shift+Down resize grow height 5 px or 5 ppt</span><br><span class="line"></span><br><span class="line"> bindsym Ctrl+Left resize shrink width 1 px or 1 ppt</span><br><span class="line"> bindsym Ctrl+Right resize grow width 1 px or 1 ppt</span><br><span class="line"> bindsym Ctrl+Up resize shrink height 1 px or 1 ppt</span><br><span class="line"> bindsym Ctrl+Down resize grow height 1 px or 1 ppt</span><br><span class="line"></span><br><span class="line"> bindsym Return mode &quot;default&quot;</span><br><span class="line"> bindsym Escape mode &quot;default&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="多屏幕相关设置"><a href="#多屏幕相关设置" class="headerlink" title="多屏幕相关设置"></a>多屏幕相关设置</h2><p><strong>如果没有同时使用多屏的需求，可直接跳过本节</strong></p>
<p><strong>在开始配置本节之前，需要先正确的安装好显示适配器的驱动，否则可能会有难以解决的问题发生</strong></p>
<p>可以通过一些软件如 <code>arandr</code> 在 GUI 下对屏幕布局进行调整，最终目的是为了获得一条 xrandr 命令。</p>
<p>获得命令后，可以在任意路径下（i3路径下最好）建立一个名为 <code>screen.sh</code> 的脚本，将得到的命令复制进去，而后在 i3 的配置文件中添加以下的这条命令。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#### ~/.config/i3/config</span></span><br><span class="line"></span><br><span class="line">exec --no-startup-id bash ~/.config/i3/screen.sh</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#### ~/.config/i3/screen.sh</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">f=$(xrandr | grep -c <span class="string">&#x27;HDMI-0 connected&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$f</span> = <span class="string">&quot;1&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span> xrandr --output DP-0 --primary --mode 3840x2160 --pos 0x0 --rotate normal \</span><br><span class="line">--output HDMI-0 --mode 1920x1080 --pos 3840x120 --rotate right \</span><br><span class="line">--output DP-2 --mode 1920x1080 --pos 4920x487 --rotate normal \</span><br><span class="line">--output DP-1 --off \</span><br><span class="line">--output DP-3 --off \</span><br><span class="line">--output DP-4 --off</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>这个脚本通过检测是否插入了多屏设备（如 <code>HDMI-0</code>）来控制是否进行多屏操作。如果有三个及以上的屏幕，只需要判断启动一个就好，也可以手动添加 case 以适配多种应用情况。</p>
<p>如果想要将一些工作区默认固定在一些屏幕下，可以通过以下命令调整，屏幕（其实是显卡输出口）的名字可以通过 <code>xrandr</code> 命令获得</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">workspace 1 output DP-0</span><br><span class="line">workspace 2 output DP-0</span><br><span class="line">workspace 9 output HDMI-0</span><br><span class="line">workspace 10 output DP-2</span><br></pre></td></tr></table></figure>
<h2 id="操作系统控制"><a href="#操作系统控制" class="headerlink" title="操作系统控制"></a>操作系统控制</h2><p>音量、电源、息屏时间与快捷键控制</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#++++++=操作系统控制=++++++#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># volume 这里的XF86默认对应的是笔记本键盘上的音量加减键</span></span><br><span class="line">set $refresh_i3status killall -SIGUSR1 i3status</span><br><span class="line">bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% &amp;&amp; $refresh_i3status</span><br><span class="line">bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% &amp;&amp; $refresh_i3status</span><br><span class="line">bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle &amp;&amp; $refresh_i3status</span><br><span class="line">bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle &amp;&amp; $refresh_i3status</span><br><span class="line"></span><br><span class="line"><span class="comment"># power 这些快捷键可以自己修改</span></span><br><span class="line">set $mode_system select: 锁屏(L) 退出用户(E) 重启(R) 关机(O) 取消(Esc)</span><br><span class="line">bindsym $mod+$m_alt+Escape mode &quot;$mode_system&quot;</span><br><span class="line">mode &quot;$mode_system&quot; &#123;</span><br><span class="line"> bindsym l mode &quot;default&quot; exec --no-startup-id betterlockscreen -l blur</span><br><span class="line"> bindsym e exec --no-startup-id i3-msg exit, mode &quot;default&quot;</span><br><span class="line"> bindsym r exec --no-startup-id systemctl reboot, mode &quot;default&quot;</span><br><span class="line"> bindsym o exec --no-startup-id systemctl poweroff, mode &quot;default&quot;</span><br><span class="line"> bindsym Escape mode &quot;default&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭屏幕 | 睡眠 | 关机 (单位：秒)</span></span><br><span class="line">exec --no-startup-id xset dpms 1200 1200</span><br><span class="line"><span class="comment">#exec --no-startup-id xset dpms 300 1357 6789</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the</span></span><br><span class="line"><span class="comment"># screen before suspend. Use loginctl lock-session to lock your screen.</span></span><br><span class="line">exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="壁纸、锁屏和会话控制"><a href="#壁纸、锁屏和会话控制" class="headerlink" title="壁纸、锁屏和会话控制"></a>壁纸、锁屏和会话控制</h2><h3 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h3><p>这里使用 <code>feh</code> 来控制壁纸，同时这个软件只支持位图形式的图片，不支持矢量图形式的。这里使用的 Debian 系统自带的壁纸（初始为 .svg 文件，通过 <code>inkscape</code> 将其转为 .png）</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">inkscape --export-type=png /usr/share/wallpapers/FuturePrototype/contents/images/3840x2160.svg /usr/share/wallpapers/FuturePrototype/contents/images/3840x2160.png</span><br><span class="line">feh --no-fehbg --bg-fill <span class="string">&#x27;/usr/share/wallpapers/FuturePrototypeWithLogo/contents/images/3840x2160.png&#x27;</span></span><br></pre></td></tr></table></figure>
<p>本文未考虑动态壁纸。</p>
<h3 id="会话"><a href="#会话" class="headerlink" title="会话"></a>会话</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">#++++++=会话=++++++#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重载 i3wm 配置（~/.config/i3/config），会在下一次登录时生效</span></span><br><span class="line">bindsym $mod+$m_alt+c reload</span><br><span class="line"></span><br><span class="line"><span class="comment"># 立刻重启 i3 （会保存当前会话和窗口布局，主要用来更新 i3 配置）</span></span><br><span class="line">bindsym $mod+$m_alt+r restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出 i3（实际是退出 X-session）</span></span><br><span class="line">bindsym $mod+$m_alt+e exec &quot;i3-nagbar -t warning -m &#x27;You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.&#x27; -B &#x27;Yes, exit i3&#x27; &#x27;i3-msg exit&#x27;&quot;</span><br><span class="line"></span><br><span class="line">bindsym $mod+$m_alt+l mode &quot;i3lock: Return to lock/Escape to Cancel&quot;</span><br></pre></td></tr></table></figure>
<h3 id="锁屏"><a href="#锁屏" class="headerlink" title="锁屏"></a>锁屏</h3><p>i3 支持多种锁屏软件，本文使用 <code>betterlockscreen</code>，同时直接把桌面作为锁屏图片。 </p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">### 首先需要用图片更新锁屏软件缓存</span></span><br><span class="line">betterlockscreen -u &#x27;/usr/share/wallpapers/FuturePrototypeWithLogo/contents/images/3840x2160.png&#x27;</span><br><span class="line"></span><br><span class="line"><span class="comment">#### ~/.config/i3/config</span></span><br><span class="line"><span class="comment"># i3lock</span></span><br><span class="line">mode &quot;i3lock: Return to lock/Escape to Cancel&quot; &#123;</span><br><span class="line"> bindsym Return mode &quot;default&quot; exec --no-startup-id betterlockscreen -l blur</span><br><span class="line"><span class="comment">#  bindsym Return mode &quot;default&quot; exec i3lock -i /usr/shre/wallpapers/FuturePrototype/contents/images/3840x2160.png</span></span><br><span class="line"> bindsym Escape mode &quot;default&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="状态栏设置"><a href="#状态栏设置" class="headerlink" title="状态栏设置"></a>状态栏设置</h1><p>i3 支持多种状态栏，比如 i3status，i3blocks 或者 polybar。每个状态栏有很多内置组件，也可以自制然后在状态栏的配置文件中调用。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment">## status bar</span></span><br><span class="line"><span class="comment"># bar &#123;</span></span><br><span class="line"><span class="comment">#     # status_command i3status -c ~/.config/i3/i3status.conf</span></span><br><span class="line"><span class="comment">#     status_command i3blocks -c ~/.config/i3/i3blocks.conf</span></span><br><span class="line"><span class="comment">#     position bottom</span></span><br><span class="line"><span class="comment">#     mode hide</span></span><br><span class="line"><span class="comment">#     workspace_buttons yes</span></span><br><span class="line"><span class="comment">#     tray_padding 0</span></span><br><span class="line"><span class="comment">#     # separator_symbol &quot;|&quot;</span></span><br><span class="line"><span class="comment">#     colors &#123;</span></span><br><span class="line"><span class="comment">#         background #285477</span></span><br><span class="line"><span class="comment">#         statusline #dedede</span></span><br><span class="line"><span class="comment">#         separator #2d2d2d</span></span><br><span class="line"><span class="comment">#         focused_workspace #636e88 #285de7 #dedfdg</span></span><br><span class="line"><span class="comment">#         active_workspace #556677 #234567 #56ef67</span></span><br><span class="line"><span class="comment">#         inactive_workspace #636d72 #2d2d2d #dedede</span></span><br><span class="line"><span class="comment">#         urgent_workspace #ffffff #900000 #d23d32</span></span><br><span class="line"><span class="comment">#     &#125;</span></span><br><span class="line"><span class="comment">#     #height 30</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## polybar</span></span><br><span class="line">exec --no-startup-id bash ~/.config/i3/polybar/launch.sh</span><br></pre></td></tr></table></figure>
<p>本文现在使用 polybar 作为状态栏，但也附了一份 i3blocks 的可行配置。</p>
<h2 id="polybar"><a href="#polybar" class="headerlink" title="polybar"></a>polybar</h2><p>此脚本用于在所有显示器（如果有）上启用 polybar，也可以通过改写脚本实现在固定的显示器输出。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#### ~/.config/i3/polybar/launch.sh</span></span><br><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭现有polybar</span></span><br><span class="line">killall -q polybar</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待全部关闭</span></span><br><span class="line"><span class="keyword">while</span> pgrep -u <span class="variable">$UID</span> -x polybar &gt; /dev/null; <span class="keyword">do</span> sleep 1; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">type</span> <span class="string">&quot;xrandr&quot;</span> &gt; /dev/null; <span class="keyword">then</span></span><br><span class="line">  <span class="keyword">for</span> m <span class="keyword">in</span> $(xrandr --query | grep <span class="string">&quot; connected&quot;</span> | cut -d<span class="string">&quot; &quot;</span> -f1); <span class="keyword">do</span></span><br><span class="line">    MONITOR=<span class="variable">$m</span> polybar --reload mybar -c ~/.config/i3/polybar/config &amp;</span><br><span class="line">  <span class="keyword">done</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  polybar --reload mybar -c ~/.config/i3/polybar/config &amp;</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;polybars 已（重新）启动...&quot;</span></span><br></pre></td></tr></table></figure>
<p>Polybar 有一套自己的配置文件，同时其相关组件的配置要与系统内其他配置符合，如 mpd 的地址和端口号，还有不同网卡的名称等。</p>
<p>如果想要在 polybar 的工作区标题附近显示 符号，请运行以下脚本。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">## gic.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">counter=0</span><br><span class="line">i3-msg -t get_workspaces | tr <span class="string">&#x27;,&#x27;</span> <span class="string">&#x27;\n&#x27;</span> | sed -nr <span class="string">&#x27;s/&quot;name&quot;:&quot;([^&quot;]+)&quot;/\1/p&#x27;</span> | <span class="keyword">while</span> <span class="built_in">read</span> -r name; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">printf</span> <span class="string">&#x27;ws-icon-%i = &quot;%s;&lt;insert-icon-here&gt;&quot;\n&#x27;</span> $((counter++)) <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>polybar 的主配置文件。</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line"><span class="comment">;;; ~/.config/i3/polybar/config</span></span><br><span class="line"></span><br><span class="line">[colors]</span><br><span class="line"><span class="comment">;background = $&#123;xrdb:color0:#222&#125;</span></span><br><span class="line">background = #77222222</span><br><span class="line">background-alt = #444</span><br><span class="line"><span class="comment">;foreground = $&#123;xrdb:color7:#222&#125;</span></span><br><span class="line">foreground = #dfdfdf</span><br><span class="line">foreground-alt = #555</span><br><span class="line">primary = #ffb52a</span><br><span class="line">secondary = #e60053</span><br><span class="line">alert = #bd2c40</span><br><span class="line"></span><br><span class="line">[bar/mybar]</span><br><span class="line">monitor = $&#123;env:MONITOR&#125;</span><br><span class="line">width = 100%</span><br><span class="line">height = <span class="number">35</span></span><br><span class="line"><span class="comment">;offset-x = 1%</span></span><br><span class="line"><span class="comment">;offset-y = 1%</span></span><br><span class="line">radius = 7%</span><br><span class="line">fixed-center = false</span><br><span class="line">bottom = true</span><br><span class="line"></span><br><span class="line">background = $&#123;colors.background&#125;</span><br><span class="line">foreground = $&#123;colors.foreground&#125;</span><br><span class="line"></span><br><span class="line">line-size = 5%</span><br><span class="line">line-color = #f00</span><br><span class="line"></span><br><span class="line">border-size = 0.2%</span><br><span class="line">border-color = #00000000</span><br><span class="line"></span><br><span class="line">padding-left = <span class="number">0</span></span><br><span class="line">padding-right = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">module-margin-left = <span class="number">0</span></span><br><span class="line">module-margin-right = 1%</span><br><span class="line"></span><br><span class="line">font-0 = Sarasa Mono SC Nerd:size=14:antialias=true;1</span><br><span class="line"><span class="comment">;; font-1 = unifont:fontformat=truetype:size=8:antialias=false;0</span></span><br><span class="line"><span class="comment">;; font-2 = siji:pixelsize=10;1</span></span><br><span class="line"></span><br><span class="line">modules-left = bspwm i3</span><br><span class="line">modules-center = mpd</span><br><span class="line">modules-right = filesystem memory cpu wlan eth battery temperature pulseaudio date</span><br><span class="line"></span><br><span class="line">tray-position = right</span><br><span class="line">tray-padding = <span class="number">1</span></span><br><span class="line"><span class="comment">;tray-background = #0063ff</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;wm-restack = bspwm</span></span><br><span class="line"><span class="comment">;wm-restack = i3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;override-redirect = true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;scroll-up = bspwm-desknext</span></span><br><span class="line"><span class="comment">;scroll-down = bspwm-deskprev</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;scroll-up = i3wm-wsnext</span></span><br><span class="line"><span class="comment">;scroll-down = i3wm-wsprev</span></span><br><span class="line"></span><br><span class="line">cursor-click = pointer</span><br><span class="line">cursor-scroll = ns-resize</span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;modules;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line">[module/xwindow]</span><br><span class="line">type = internal/xwindow</span><br><span class="line">label = %title:0:30:...%</span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/xkeyboard]</span><br><span class="line">type = internal/xkeyboard</span><br><span class="line">blacklist-0 = num lock</span><br><span class="line"></span><br><span class="line">format-prefix = <span class="string">&quot; &quot;</span></span><br><span class="line">format-prefix-foreground = $&#123;colors.foreground-alt&#125;</span><br><span class="line">format-prefix-underline = $&#123;colors.secondary&#125;</span><br><span class="line"></span><br><span class="line">label-layout = %layout%</span><br><span class="line">label-layout-underline = $&#123;colors.secondary&#125;</span><br><span class="line"></span><br><span class="line">label-indicator-padding = <span class="number">2</span></span><br><span class="line">label-indicator-margin = <span class="number">1</span></span><br><span class="line">label-indicator-background = $&#123;colors.secondary&#125;</span><br><span class="line">label-indicator-underline = $&#123;colors.secondary&#125;</span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/filesystem]</span><br><span class="line">type = internal/fs</span><br><span class="line">interval = <span class="number">25</span></span><br><span class="line"></span><br><span class="line">mount-0 = /</span><br><span class="line">mount-1 = /home</span><br><span class="line">mount-2 = /data</span><br><span class="line"></span><br><span class="line">label-mounted = %mountpoint%%&#123;F-&#125;:%percentage_used%%</span><br><span class="line"><span class="comment">;label-mounted =  %mountpoint%%&#123;F-&#125;:%percentage_used%%</span></span><br><span class="line">label-unmounted = %mountpoint% umnt</span><br><span class="line">label-unmounted-foreground = #ebebeb </span><br><span class="line"></span><br><span class="line">format-mounted-underline = #ebebeb </span><br><span class="line">format-unmounted-underline = #ebebeb </span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/bspwm]</span><br><span class="line">type = internal/bspwm</span><br><span class="line"></span><br><span class="line">label-focused = %index%</span><br><span class="line">label-focused-background = $&#123;colors.background-alt&#125;</span><br><span class="line">label-focused-underline= $&#123;colors.primary&#125;</span><br><span class="line">label-focused-padding = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">label-occupied = %index%</span><br><span class="line">label-occupied-padding = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">label-urgent = %index%!</span><br><span class="line">label-urgent-background = $&#123;colors.alert&#125;</span><br><span class="line">label-urgent-padding = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">label-empty = %index%</span><br><span class="line">label-empty-foreground = $&#123;colors.foreground-alt&#125;</span><br><span class="line">label-empty-padding = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; Separator in between workspaces</span></span><br><span class="line"><span class="comment">; label-separator = |</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/i3]</span><br><span class="line">type = internal/i3</span><br><span class="line">format = &lt;label-state&gt; &lt;label-mode&gt;</span><br><span class="line">index-sort = true</span><br><span class="line">wrapping-scroll = false</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">;;; NOTICE ;;; </span></span><br><span class="line"><span class="comment">; to show these icons on the bar, please run the script named `gic.sh` in the shell</span></span><br><span class="line">ws-icon-0 = <span class="number">1</span><span class="comment">;#</span></span><br><span class="line">ws-icon-1 = <span class="number">2</span><span class="comment">;</span></span><br><span class="line">ws-icon-2 = <span class="number">3</span><span class="comment">;</span></span><br><span class="line">ws-icon-3 = <span class="number">4</span><span class="comment">;</span></span><br><span class="line">ws-icon-4 = <span class="number">5</span><span class="comment">;</span></span><br><span class="line">ws-icon-5 = <span class="number">6</span><span class="comment">;</span></span><br><span class="line">ws-icon-6 = <span class="number">7</span><span class="comment">;</span></span><br><span class="line">ws-icon-7 = <span class="number">8</span><span class="comment">;</span></span><br><span class="line">ws-icon-8 = <span class="number">9</span><span class="comment">;</span></span><br><span class="line">ws-icon-9 = <span class="number">10</span><span class="comment">;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;; ws-icon-default = </span></span><br><span class="line"></span><br><span class="line"><span class="comment">; Only show workspaces on the same output as the bar</span></span><br><span class="line">pin-workspaces = true</span><br><span class="line"></span><br><span class="line">label-mode = %mode%</span><br><span class="line">label-mode-padding = <span class="number">1</span></span><br><span class="line">label-mode-foreground = #000</span><br><span class="line">label-mode-background = $&#123;colors.primary&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">; focused = Active workspace on focused monitor</span></span><br><span class="line">label-focused = %index% %icon%</span><br><span class="line"><span class="comment">;; label-focused-foreground = #dfdfdf</span></span><br><span class="line">label-focused-background = $&#123;colors.background-alt&#125;</span><br><span class="line">label-focused-underline= $&#123;colors.primary&#125;</span><br><span class="line">label-focused-padding = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; unfocused = Inactive workspace on any monitor</span></span><br><span class="line">label-unfocused = %index% %icon%</span><br><span class="line">label-unfocused-padding = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; visible = Active workspace on unfocused monitor</span></span><br><span class="line">label-visible = %index% %icon%</span><br><span class="line">label-visible-background = $&#123;self.label-focused-background&#125;</span><br><span class="line">label-visible-underline = $&#123;self.label-focused-underline&#125;</span><br><span class="line">label-visible-padding = $&#123;self.label-focused-padding&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">; urgent = Workspace with urgency hint set</span></span><br><span class="line">label-urgent = %index%</span><br><span class="line">label-urgent-background = $&#123;colors.alert&#125;</span><br><span class="line">label-urgent-padding = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; Separator in between workspaces</span></span><br><span class="line"><span class="comment">; label-separator = |</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/mpd]</span><br><span class="line">type = internal/mpd</span><br><span class="line"></span><br><span class="line">host = 127.0.0.1</span><br><span class="line">port = <span class="number">7777</span></span><br><span class="line"></span><br><span class="line">format-online = &lt;label-song&gt;  &lt;label-time&gt;  &lt;icon-prev&gt; &lt;icon-seekb&gt; &lt;icon-stop&gt; &lt;toggle&gt; &lt;icon-seekf&gt; &lt;icon-next&gt;  &lt;icon-repeat&gt; &lt;icon-random&gt;</span><br><span class="line"><span class="comment">;; format-online = &lt;label-song&gt;  &lt;label-time&gt;  &lt;bar-progress&gt;  &lt;icon-prev&gt; &lt;icon-seekb&gt; &lt;icon-stop&gt; &lt;toggle&gt; &lt;icon-seekf&gt; &lt;icon-next&gt;  &lt;icon-repeat&gt; &lt;icon-random&gt;</span></span><br><span class="line"><span class="comment">;format-online = &lt;toggle&gt; &lt;label-song&gt; &lt;icon-next&gt;</span></span><br><span class="line">format-offline = &lt;label-offline&gt;</span><br><span class="line">format-offline-foreground = #66</span><br><span class="line">label-offline = --------</span><br><span class="line"></span><br><span class="line">label-song-maxlen = <span class="number">20</span></span><br><span class="line">label-song-font = <span class="number">8</span></span><br><span class="line"></span><br><span class="line">icon-prev = ⇐</span><br><span class="line">icon-seekb = ⇠</span><br><span class="line">icon-stop = </span><br><span class="line">icon-play =  </span><br><span class="line">icon-pause = </span><br><span class="line">icon-next = ⇒</span><br><span class="line">icon-seekf = ⇢</span><br><span class="line">icon-random =  </span><br><span class="line">icon-repeat = </span><br><span class="line"></span><br><span class="line">toggle-on-foreground = #2278ff</span><br><span class="line">toggle-off-foreground = #66</span><br><span class="line"></span><br><span class="line">bar-progress-width = <span class="number">9</span></span><br><span class="line">bar-progress-indicator = |</span><br><span class="line">bar-progress-indicator-foreground = #bb</span><br><span class="line">bar-progress-fill = </span><br><span class="line">bar-progress-fill-foreground = #bb</span><br><span class="line">bar-progress-fill-font = <span class="number">3</span></span><br><span class="line">bar-progress-empty = </span><br><span class="line">bar-progress-empty-foreground = #44</span><br><span class="line">bar-progress-empty-font = <span class="number">3</span></span><br><span class="line"></span><br><span class="line">label-time-foreground = #55</span><br><span class="line"><span class="comment">;; label-time-font = 8</span></span><br><span class="line"><span class="comment">;;; &#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/xbacklight]</span><br><span class="line">type = internal/xbacklight</span><br><span class="line"></span><br><span class="line">format = &lt;label&gt; &lt;bar&gt;</span><br><span class="line">label = BL</span><br><span class="line"></span><br><span class="line">bar-width = <span class="number">10</span></span><br><span class="line">bar-indicator = |</span><br><span class="line">bar-indicator-foreground = #fff</span><br><span class="line">bar-indicator-font = <span class="number">2</span></span><br><span class="line">bar-fill = ─</span><br><span class="line">bar-fill-font = <span class="number">2</span></span><br><span class="line">bar-fill-foreground = #9f78e1</span><br><span class="line">bar-empty = ─</span><br><span class="line">bar-empty-font = <span class="number">2</span></span><br><span class="line">bar-empty-foreground = $&#123;colors.foreground-alt&#125;</span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/backlight-acpi]</span><br><span class="line">inherit = module/xbacklight</span><br><span class="line">type = internal/backlight</span><br><span class="line">card = intel_backlight</span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/cpu]</span><br><span class="line">type = internal/cpu</span><br><span class="line">interval = <span class="number">2</span></span><br><span class="line">format-prefix = <span class="string">&quot; &quot;</span></span><br><span class="line">format-prefix-foreground = #f90000</span><br><span class="line"><span class="comment">;; format-prefix-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line">format-underline = #f90000</span><br><span class="line">label = %percentage:2%%</span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/memory]</span><br><span class="line">type = internal/memory</span><br><span class="line">interval = <span class="number">2</span></span><br><span class="line">format-prefix = <span class="string">&quot; &quot;</span></span><br><span class="line">format-prefix-foreground = #7CFC00</span><br><span class="line"><span class="comment">;; format-prefix-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line">format-underline = #7CFC00</span><br><span class="line">label = %percentage_used:2%%</span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/wlan]</span><br><span class="line">type = internal/network</span><br><span class="line">interface = wlan0</span><br><span class="line">interval = <span class="number">3.0</span></span><br><span class="line"></span><br><span class="line">format-connected = &lt;ramp-signal&gt; &lt;label-connected&gt;</span><br><span class="line">format-connected-underline = #9f78e1</span><br><span class="line">label-connected = %essid%</span><br><span class="line"></span><br><span class="line">format-disconnected =</span><br><span class="line"><span class="comment">;format-disconnected = &lt;label-disconnected&gt;</span></span><br><span class="line"><span class="comment">;format-disconnected-underline = $&#123;self.format-connected-underline&#125;</span></span><br><span class="line"><span class="comment">;label-disconnected = %ifname% disconnected</span></span><br><span class="line"><span class="comment">;label-disconnected-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line"></span><br><span class="line">ramp-signal-0 =  </span><br><span class="line">ramp-signal-1 =  </span><br><span class="line">ramp-signal-2 = </span><br><span class="line">ramp-signal-3 = </span><br><span class="line">ramp-signal-4 = </span><br><span class="line">ramp-signal-foreground = #9f78e1</span><br><span class="line"><span class="comment">;; ramp-signal-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;; ramp-signal-0 = </span></span><br><span class="line"><span class="comment">;; ramp-signal-1 = </span></span><br><span class="line"><span class="comment">;; ramp-signal-2 = </span></span><br><span class="line"><span class="comment">;; ramp-signal-3 = </span></span><br><span class="line"><span class="comment">;; ramp-signal-4 = </span></span><br><span class="line"><span class="comment">;; ramp-signal-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/eth]</span><br><span class="line">type = internal/network</span><br><span class="line">interface = eth0</span><br><span class="line">interval = <span class="number">3.0</span></span><br><span class="line"></span><br><span class="line">format-connected-underline = #55aa55</span><br><span class="line">format-connected-prefix = <span class="string">&quot; &quot;</span></span><br><span class="line">format-connected-prefix-foreground = #55aa55</span><br><span class="line"><span class="comment">;; format-connected-prefix-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line">label-connected = %local_ip%</span><br><span class="line"></span><br><span class="line">format-disconnected =</span><br><span class="line"><span class="comment">;format-disconnected = &lt;label-disconnected&gt;</span></span><br><span class="line"><span class="comment">;format-disconnected-underline = $&#123;self.format-connected-underline&#125;</span></span><br><span class="line"><span class="comment">;label-disconnected = %ifname% disconnected</span></span><br><span class="line"><span class="comment">;label-disconnected-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/date]</span><br><span class="line">type = internal/date</span><br><span class="line">interval = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">date =</span><br><span class="line">date-alt = <span class="string">&quot; %Y-%m-%d %A&quot;</span></span><br><span class="line"></span><br><span class="line">time = %H:%M</span><br><span class="line">time-alt = %H:%M:%S</span><br><span class="line"></span><br><span class="line">format-prefix =  </span><br><span class="line">format-prefix-foreground = #0a6cf5</span><br><span class="line"><span class="comment">;; format-prefix-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line">format-underline = #0a6cf5</span><br><span class="line"></span><br><span class="line">label = %date% %time%</span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/pulseaudio]</span><br><span class="line">type = internal/pulseaudio</span><br><span class="line"></span><br><span class="line">format-volume = &lt;label-volume&gt;</span><br><span class="line"><span class="comment">;; format-volume = &lt;label-volume&gt; &lt;bar-volume&gt;</span></span><br><span class="line">format-volume-underline = #4bffdc</span><br><span class="line"></span><br><span class="line">label-volume =  %percentage%%</span><br><span class="line">label-volume-foreground = $&#123;root.foreground&#125;</span><br><span class="line"></span><br><span class="line">label-muted =  muted</span><br><span class="line">label-muted-foreground = #666</span><br><span class="line">format-muted-underline = #4bffdc</span><br><span class="line"></span><br><span class="line">bar-volume-width = <span class="number">5</span></span><br><span class="line">bar-volume-foreground-0 = #55aa55</span><br><span class="line">bar-volume-foreground-1 = #55aa55</span><br><span class="line">bar-volume-foreground-2 = #55aa55</span><br><span class="line">bar-volume-foreground-3 = #55aa55</span><br><span class="line">bar-volume-foreground-4 = #55aa55</span><br><span class="line">bar-volume-foreground-5 = #f5a70a</span><br><span class="line">bar-volume-foreground-6 = #ff5555</span><br><span class="line">bar-volume-gradient = false</span><br><span class="line">bar-volume-indicator = |</span><br><span class="line">bar-volume-indicator-font = <span class="number">2</span></span><br><span class="line">bar-volume-fill = ─</span><br><span class="line">bar-volume-fill-font = <span class="number">2</span></span><br><span class="line">bar-volume-empty = ─</span><br><span class="line">bar-volume-empty-font = <span class="number">2</span></span><br><span class="line">bar-volume-empty-foreground = $&#123;colors.foreground-alt&#125;</span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/alsa]</span><br><span class="line">type = internal/alsa</span><br><span class="line"></span><br><span class="line">format-volume = &lt;label-volume&gt; &lt;bar-volume&gt;</span><br><span class="line">label-volume = VOL</span><br><span class="line">label-volume-foreground = $&#123;root.foreground&#125;</span><br><span class="line"><span class="comment">;; format-volume = &lt;label-volume&gt; &lt;bar-volume&gt;</span></span><br><span class="line"><span class="comment">;; label-volume = VOL</span></span><br><span class="line"><span class="comment">;; label-volume-foreground = $&#123;root.foreground&#125;</span></span><br><span class="line"></span><br><span class="line">format-muted-prefix = <span class="string">&quot; &quot;</span></span><br><span class="line"><span class="comment">;; format-muted-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line">label-muted = sound muted</span><br><span class="line"></span><br><span class="line">bar-volume-width = <span class="number">10</span></span><br><span class="line">bar-volume-foreground-0 = #55aa55</span><br><span class="line">bar-volume-foreground-1 = #55aa55</span><br><span class="line">bar-volume-foreground-2 = #55aa55</span><br><span class="line">bar-volume-foreground-3 = #55aa55</span><br><span class="line">bar-volume-foreground-4 = #55aa55</span><br><span class="line">bar-volume-foreground-5 = #f5a70a</span><br><span class="line">bar-volume-foreground-6 = #ff5555</span><br><span class="line">bar-volume-gradient = false</span><br><span class="line">bar-volume-indicator = |</span><br><span class="line">bar-volume-indicator-font = <span class="number">2</span></span><br><span class="line">bar-volume-fill = ─</span><br><span class="line">bar-volume-fill-font = <span class="number">2</span></span><br><span class="line">bar-volume-empty = ─</span><br><span class="line">bar-volume-empty-font = <span class="number">2</span></span><br><span class="line">bar-volume-empty-foreground = $&#123;colors.foreground-alt&#125;</span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/battery]</span><br><span class="line">type = internal/battery</span><br><span class="line">battery = BAT1</span><br><span class="line">adapter = ADP1</span><br><span class="line">full-at = <span class="number">98</span></span><br><span class="line"></span><br><span class="line">format-charging = &lt;animation-charging&gt; &lt;label-charging&gt;</span><br><span class="line">format-charging-underline = #ffb52a</span><br><span class="line"></span><br><span class="line">format-discharging = &lt;animation-discharging&gt; &lt;label-discharging&gt;</span><br><span class="line">format-discharging-underline = $&#123;self.format-charging-underline&#125;</span><br><span class="line"></span><br><span class="line">format-full-prefix = <span class="string">&quot; &quot;</span></span><br><span class="line">format-full-prefix-foreground = #ffb52a</span><br><span class="line"><span class="comment">;; format-full-prefix-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line">format-full-underline = $&#123;self.format-charging-underline&#125;</span><br><span class="line"></span><br><span class="line">ramp-capacity-0 = </span><br><span class="line">ramp-capacity-1 = </span><br><span class="line">ramp-capacity-2 = </span><br><span class="line">ramp-capacity-foreground = $&#123;colors.foreground-alt&#125;</span><br><span class="line"></span><br><span class="line">animation-charging-0 = </span><br><span class="line">animation-charging-1 = </span><br><span class="line">animation-charging-2 = </span><br><span class="line">animation-charging-foreground = #ffb52a</span><br><span class="line">animation-charging-framerate = <span class="number">750</span></span><br><span class="line"></span><br><span class="line">animation-discharging-0 = </span><br><span class="line">animation-discharging-1 = </span><br><span class="line">animation-discharging-2 = </span><br><span class="line">animation-discharging-foreground = #ffb52a</span><br><span class="line">animation-discharging-framerate = <span class="number">750</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/temperature]</span><br><span class="line">type = internal/temperature</span><br><span class="line">thermal-zone = <span class="number">0</span></span><br><span class="line">warn-temperature = <span class="number">60</span></span><br><span class="line"></span><br><span class="line">format = &lt;ramp&gt; &lt;label&gt;</span><br><span class="line">format-underline = #228B22</span><br><span class="line">format-warn = &lt;ramp&gt; &lt;label-warn&gt;</span><br><span class="line">format-warn-underline = $&#123;self.format-underline&#125;</span><br><span class="line"></span><br><span class="line">label = %temperature-c%</span><br><span class="line">label-warn = %temperature-c%</span><br><span class="line">label-warn-foreground = $&#123;colors.secondary&#125;</span><br><span class="line"></span><br><span class="line">ramp-0 = </span><br><span class="line">ramp-1 =  </span><br><span class="line">ramp-2 = </span><br><span class="line">ramp-foreground = #228B22</span><br><span class="line"><span class="comment">;; ramp-foreground = $&#123;colors.foreground-alt&#125;</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[module/powermenu]</span><br><span class="line">type = custom/menu</span><br><span class="line"></span><br><span class="line">expand-right = true</span><br><span class="line"></span><br><span class="line">format-spacing = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">label-open = </span><br><span class="line">label-open-foreground = $&#123;colors.secondary&#125;</span><br><span class="line">label-close = </span><br><span class="line">label-close-foreground = $&#123;colors.secondary&#125;</span><br><span class="line">label-separator = |</span><br><span class="line">label-separator-foreground = $&#123;colors.foreground-alt&#125;</span><br><span class="line"></span><br><span class="line">menu-0-0 = reboot</span><br><span class="line">menu-0-0-exec = menu-open-1</span><br><span class="line">menu-0-1 = power off</span><br><span class="line">menu-0-1-exec = menu-open-2</span><br><span class="line"></span><br><span class="line">menu-1-0 = cancel</span><br><span class="line">menu-1-0-exec = menu-open-0</span><br><span class="line">menu-1-1 = reboot</span><br><span class="line">menu-1-1-exec = sudo reboot</span><br><span class="line"></span><br><span class="line">menu-2-0 = power off</span><br><span class="line">menu-2-0-exec = sudo poweroff</span><br><span class="line">menu-2-1 = cancel</span><br><span class="line">menu-2-1-exec = menu-open-0</span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[settings]</span><br><span class="line">screenchange-reload = true</span><br><span class="line"><span class="comment">;compositing-background = xor</span></span><br><span class="line"><span class="comment">;compositing-background = screen</span></span><br><span class="line"><span class="comment">;compositing-foreground = source</span></span><br><span class="line"><span class="comment">;compositing-border = over</span></span><br><span class="line"><span class="comment">;pseudo-transparency = false</span></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span></span><br><span class="line">[global/wm]</span><br><span class="line">margin-top = <span class="number">5</span></span><br><span class="line">margin-bottom = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; vim:ft=dosini</span></span><br></pre></td></tr></table></figure>
<h2 id="i3blocks"><a href="#i3blocks" class="headerlink" title="i3blocks"></a>i3blocks</h2><p>i3blocks 的主配置文件。</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ~/.config/i3/i3blocks.conf</span></span><br><span class="line"><span class="comment"># align</span></span><br><span class="line"><span class="comment"># color</span></span><br><span class="line"><span class="comment"># command</span></span><br><span class="line"><span class="comment"># full_text</span></span><br><span class="line"><span class="comment"># instance</span></span><br><span class="line"><span class="comment"># interval</span></span><br><span class="line"><span class="comment"># label</span></span><br><span class="line"><span class="comment"># min_width</span></span><br><span class="line"><span class="comment"># name</span></span><br><span class="line"><span class="comment"># separator</span></span><br><span class="line"><span class="comment"># separator_block_width</span></span><br><span class="line"><span class="comment"># short_text</span></span><br><span class="line"><span class="comment"># signal</span></span><br><span class="line"><span class="comment"># urgent</span></span><br><span class="line"><span class="comment"># Global properties</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The top properties below are applied to every block, but can be overridden.</span></span><br><span class="line"><span class="comment"># Each block command defaults to the script name to avoid boilerplate.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Global properties</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The top properties below are applied to every block, but can be overridden.</span></span><br><span class="line"><span class="comment"># Each block command defaults to the script name to avoid boilerplate.</span></span><br><span class="line"><span class="attr">command</span>=~/.config/i3/i3blocks/<span class="variable">$BLOCK_NAME</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">20</span></span><br><span class="line"><span class="attr">markup</span>=none</span><br><span class="line"><span class="attr">separator</span>=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#lightred #fb4934</span></span><br><span class="line"><span class="comment">#red #cc241d</span></span><br><span class="line"><span class="comment">#green #98971a</span></span><br><span class="line"><span class="comment">#lightgreen #b8bb26</span></span><br><span class="line"><span class="comment">#yellow #d79921</span></span><br><span class="line"><span class="comment">#lightyellow #fabd2f</span></span><br><span class="line"><span class="comment">#blue #458588</span></span><br><span class="line"><span class="comment">#purple #b16286</span></span><br><span class="line"><span class="comment">#aqua #689d68</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Find your own networking interfaces by typing</span></span><br><span class="line"><span class="comment"># &#x27;ip link&#x27; or &#x27;ifconfig&#x27; in a terminal window.</span></span><br><span class="line"><span class="comment"># Yours are probably different than mine!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#my ethernet interface is eno1</span></span><br><span class="line"><span class="comment">#most people is eth0</span></span><br><span class="line"><span class="section">[bandwidth]</span></span><br><span class="line"><span class="comment"># instance=eno1</span></span><br><span class="line"><span class="attr">instance</span>=eth0</span><br><span class="line"><span class="attr">interval</span>=<span class="number">5</span></span><br><span class="line">color=#fabd2f</span><br><span class="line"><span class="attr">label</span>=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="section">[spacer]</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">full_text</span>=|</span><br><span class="line"><span class="comment"># color=#fb4934</span></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># [wifi]</span></span><br><span class="line"><span class="comment"># instance=wlan0</span></span><br><span class="line"><span class="comment"># interval=10</span></span><br><span class="line"><span class="comment"># color=#d79921</span></span><br><span class="line"><span class="comment"># label=</span></span><br><span class="line"><span class="comment"># separator_block_width=0</span></span><br><span class="line"><span class="section">[bandwidth]</span></span><br><span class="line"><span class="attr">label</span>=</span><br><span class="line"><span class="attr">instance</span>=wlan0</span><br><span class="line"><span class="attr">interval</span>=<span class="number">1</span></span><br><span class="line">color=#d79921</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="section">[spacer]</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">full_text</span>=|</span><br><span class="line"><span class="comment"># color=#fb4934</span></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># CPU usage</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The script may be called with -w and -c switches to specify thresholds,</span></span><br><span class="line"><span class="comment"># see the script for details.</span></span><br><span class="line"><span class="section">[cpu_usage]</span></span><br><span class="line"><span class="attr">label</span>=</span><br><span class="line"><span class="attr">interval</span>=<span class="number">10</span></span><br><span class="line"><span class="attr">min_width</span>=<span class="number">100.00</span>%</span><br><span class="line">color=#fb4934</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="section">[spacer]</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">full_text</span>=|</span><br><span class="line"><span class="comment"># color=#fb4934</span></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Temperature</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Support multiple chips, though lm-sensors.</span></span><br><span class="line"><span class="comment"># The script may be called with -w and -c switches to specify thresholds,</span></span><br><span class="line"><span class="comment"># see the script for details.</span></span><br><span class="line"><span class="section">[temperature]</span></span><br><span class="line"><span class="attr">label</span>=</span><br><span class="line"><span class="attr">interval</span>=<span class="number">10</span></span><br><span class="line">color=#fabd2f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="section">[spacer]</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="comment">#full_text=</span></span><br><span class="line"><span class="attr">full_text</span>=|</span><br><span class="line"><span class="comment"># color=#fb4934</span></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Memory usage</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The type defaults to &quot;mem&quot; if the instance is not specified.</span></span><br><span class="line"><span class="section">[memory]</span></span><br><span class="line"><span class="attr">label</span>=</span><br><span class="line"><span class="attr">interval</span>=<span class="number">20</span></span><br><span class="line">color=#b8bb26</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="section">[spacer]</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="comment">#full_text=</span></span><br><span class="line"><span class="attr">full_text</span>=|</span><br><span class="line"><span class="comment"># color=#fb4934</span></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">[volume_pactl]</span></span><br><span class="line"><span class="attr">label</span>=</span><br><span class="line"><span class="comment"># instance=Master</span></span><br><span class="line"><span class="attr">interval</span>=<span class="number">1</span></span><br><span class="line">color=#fb4934</span><br><span class="line"><span class="comment"># signal=10</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="section">[spacer]</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="comment">#full_text=</span></span><br><span class="line"><span class="attr">full_text</span>=|</span><br><span class="line"><span class="comment"># color=#fb4934</span></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disk usage</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The directory defaults to $HOME if the instance is not specified.</span></span><br><span class="line"><span class="comment"># The script may be called with a optional argument to set the alert</span></span><br><span class="line"><span class="comment"># (defaults to 10 for 10%).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [disk]</span></span><br><span class="line"><span class="comment"># label= DU /home</span></span><br><span class="line"><span class="comment"># interval=30</span></span><br><span class="line"><span class="comment"># color=#fabd2f</span></span><br><span class="line"><span class="comment"># separator_block_width=0</span></span><br><span class="line"></span><br><span class="line"><span class="section">[disk_usage]</span></span><br><span class="line"><span class="attr">label</span>=</span><br><span class="line"><span class="attr">instance</span>=/</span><br><span class="line"><span class="attr">interval</span>=<span class="number">20</span></span><br><span class="line">color=#fabd2f</span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="section">[disk_usage]</span></span><br><span class="line"><span class="attr">instance</span>=/home</span><br><span class="line"><span class="attr">interval</span>=<span class="number">20</span></span><br><span class="line">color=#fabd2f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="section">[spacer]</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="comment">#full_text=</span></span><br><span class="line"><span class="attr">full_text</span>=|</span><br><span class="line"><span class="comment"># color=#fb4934</span></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Battery indicator</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># The battery instance defaults to 0.</span></span><br><span class="line"><span class="section">[battery]</span></span><br><span class="line"><span class="comment">#label=BATT/</span></span><br><span class="line"><span class="attr">label</span>=</span><br><span class="line"><span class="attr">instance</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">interval</span>=<span class="number">20</span></span><br><span class="line">color=#b8bb26</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="section">[spacer]</span></span><br><span class="line"><span class="attr">separator_block_width</span>=<span class="number">1</span></span><br><span class="line"><span class="comment">#full_text=</span></span><br><span class="line"><span class="attr">full_text</span>=|</span><br><span class="line"><span class="comment"># color=#fb4934</span></span><br><span class="line"><span class="comment">########################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">[date]</span></span><br><span class="line"><span class="attr">command</span>=date <span class="string">&quot;+%a %Y-%m-%d %H:%M:%S&quot;</span></span><br><span class="line"><span class="attr">interval</span>=<span class="number">1</span> </span><br><span class="line"><span class="comment"># label=</span></span><br><span class="line">color=#fabd2f</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>i3-wm</tag>
        <tag>polybar</tag>
      </tags>
  </entry>
  <entry>
    <title>Office：0-基础知识</title>
    <url>/zh-cn/posts/b6277b00-365a-11ec-a498-d524ecc7212f/</url>
    <content><![CDATA[<p>微软 Office 系列软件(Word PowerPoin Excel)使用方法系列第一篇：排版/设计的基础知识与 Office 软件的通用操作</p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><p>这一系列文章汇总了以 Word、PowerPoint、Excel 为主的 Office 软件的使用方法，并附有案例细节；还讨论了其与 LaTeX 的对比以及部分 PDF 文件的操作。</p>
<blockquote>
<p>对于相关功能/特性/操作的评论会放在和这段一样的引用里，以和正文区分开，这些评论仅代表个人意见，如果来无理由杠，那就是你说得对。</p>
</blockquote>
<p>这一系列文章并非详细讲述了所有内容，部分过于简单或仅略有关系的内容，有的附有相关链接可学习，有的请自学。</p>
<h2 id="自学与提问方法"><a href="#自学与提问方法" class="headerlink" title="自学与提问方法"></a>自学与提问方法</h2><p>自学的关键要点一是「学会提问」，这里并不是指《学会提问》这本书，而是指能够准确的使用关键词在搜索引擎描述自己遇到的问题，同时清楚、有条理的在相关平台发表问题时描述自己的问题；二是要练，对于较为陌生的方法，光看推送/回答是难以掌握的，练上两遍就会了。</p>
<blockquote>
<p>我个人对于自学的建议很简单：</p>
<ol>
<li>不要用百度</li>
<li>中文搜不到可以用其他语言</li>
<li>清楚的明白别人的回答或帮助是出于好心，不是欠自己的</li>
<li>不要做伸手党</li>
</ol>
</blockquote>
<h1 id="排版-设计的基本知识"><a href="#排版-设计的基本知识" class="headerlink" title="排版/设计的基本知识"></a>排版/设计的基本知识</h1><p>虽然很多时候使用 Office 软件并不是为了进行艺术创作或者设计工作，但是了解一些基本的排版/设计知识，对于使用软件、了解概念都会有较好的帮助。这里不会做详细的叙述，主要是通过列举相关的知识点，以及可能用到的参考书籍来帮助学习，希望能对提到的知识有一定的了解。</p>
<h2 id="字符、字符集、编码"><a href="#字符、字符集、编码" class="headerlink" title="字符、字符集、编码"></a>字符、字符集、编码</h2><ol>
<li>可见字符与不可见字符、全角与半角字符</li>
<li>字符集：ASCII、Unicode、GB2312、JIS</li>
<li>编码：ASCII、UTF-8/16(-BOM)、GB2312、JIS、ANSI<a href="#refer-anchor-1"><sup>1</sup></a></li>
</ol>
<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><ol>
<li>字体的分类：西文的分类、中文的分类标准，相关的定义如 serif、sans serif、monospace 等及其应用场合</li>
<li>字体的字型：字重(light、bold)、斜体、宽度等，粗体/伪粗体，斜体/伪斜体</li>
<li>字体的字号：磅/pt、中文字号与pt的对应、基线/主线、x-height</li>
<li>英文字体的连字</li>
</ol>
<h2 id="形状与图片"><a href="#形状与图片" class="headerlink" title="形状与图片"></a>形状与图片</h2><ol>
<li>形状的分类：矢量图与位图</li>
<li>图片的格式：通道、格式、压缩</li>
<li>图标(icon)的分类</li>
</ol>
<p>去哪找图<br>可能用到的图标链接</p>
<h2 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h2><ol>
<li>光的三原色/颜料的三原色</li>
<li>颜色的描述方式：RGB/HSL/CMYK</li>
<li>色卡、色轮、补色、间色</li>
</ol>
<h2 id="排版基本原则"><a href="#排版基本原则" class="headerlink" title="排版基本原则"></a>排版基本原则</h2><ol>
<li>对齐、对比、重复、亲密</li>
<li><strong>内容与样式(格式)分离</strong><blockquote>
<p>这是我认为的排版中重要的思想</p>
</blockquote>
</li>
</ol>
<h2 id="也许有用的资源或资料："><a href="#也许有用的资源或资料：" class="headerlink" title="也许有用的资源或资料："></a>也许有用的资源或资料：</h2><p>网站：</p>
<ol>
<li>图标网站：<ol>
<li>阿里的图标库：<a href="https://www.iconfont.cn/">https://www.iconfont.cn/</a></li>
<li>字节的图标库：<a href="https://iconpark.oceanengine.com/home">https://iconpark.oceanengine.com/home</a></li>
<li><a href="https://remixicon.com/">https://remixicon.com/</a></li>
<li><a href="https://iconhub.io/">https://iconhub.io/</a></li>
</ol>
</li>
<li>图片素材网站：<ol>
<li><a href="https://storyset.com/">https://storyset.com/</a></li>
<li><a href="https://wallpapers.microsoft.design/">https://wallpapers.microsoft.design/</a></li>
</ol>
</li>
<li>识别字体：<ol>
<li><a href="https://www.likefont.com/">https://www.likefont.com/</a></li>
<li><a href="https://www.hellofont.cn/font-ai">https://www.hellofont.cn/font-ai</a></li>
</ol>
</li>
<li>配色选择：<ol>
<li><a href="https://mycolor.space/?hex=%23845EC2&amp;sub=1">https://mycolor.space/?hex=%23845EC2&amp;sub=1</a></li>
</ol>
</li>
<li>形状生成：<ol>
<li>三维城市模型：<a href="https://pissang.github.io/little-big-city/">https://pissang.github.io/little-big-city/</a></li>
<li>字体特效：<a href="https://spacetypegenerator.com/index.html">https://spacetypegenerator.com/index.html</a></li>
<li>背景生成：<a href="https://www.noiseandgradient.com/">https://www.noiseandgradient.com/</a></li>
</ol>
</li>
</ol>
<p>书籍：</p>
<ol>
<li>基本原理：《写给大家看的设计书》</li>
<li>颜色设计：《配色设计原理》</li>
<li>文字设计：《文字设计的原理》</li>
</ol>
<h1 id="专题结构"><a href="#专题结构" class="headerlink" title="专题结构"></a>专题结构</h1><p>这一系列共有 6 篇，从各个方面讲解 Office 及相关的软件，链接如下：</p>
<ol>
<li>Office 与设计排版的基础知识</li>
<li>Word</li>
<li>PowerPoint</li>
<li>与Word/PowerPoint使用场景/功能有重叠的软件们</li>
<li>Excel</li>
<li>Office 进阶操作，PDF 使用与总结</li>
</ol>
<h1 id="Microsoft-Office-中的基本操作"><a href="#Microsoft-Office-中的基本操作" class="headerlink" title="Microsoft Office 中的基本操作"></a>Microsoft Office 中的基本操作</h1><h2 id="软件的选项设置"><a href="#软件的选项设置" class="headerlink" title="软件的选项设置"></a>软件的选项设置</h2><p>这三个软件都有常规、校对、保存、语言、轻松访问、高级这几个选项，其中 word 多了显示和版式，PowerPoint 多了版式，Excel 多了公式。</p>
<p>重点讲一些常用的功能：</p>
<p>在「常规」里，可以设置默认的用户名和缩写，在保存文件时自动署名；还可以设置office 的背景和软件的颜色。</p>
<p>在「校对」里，可以设置语法提示、自动更正等，比如较令人烦的红色波浪色等在此处去除。</p>
<p>在「保存」里，可以设置自动保存时间（如果经常崩溃的话可以设短一点）以及是否将字体嵌入文件（在使用冷门字体时使用可保证在其它机器的正常使用）</p>
<p>「语言」和「轻松访问」的使用意义不大，可以自己研究。</p>
<p>在「高级」里，不同软件的内容也不尽相同，可以自己研究相关的设置。</p>
<p>需要说明的是，关于「自定义工具栏/快速访问工具栏」「加载项与信任中心」多人协作等功能在最后一篇中讲解。</p>
<h2 id="「信息」设置"><a href="#「信息」设置" class="headerlink" title="「信息」设置"></a>「信息」设置</h2><p>在「信息」这里，保护文档可以进行添加密码、限制编辑等操作，检查文档可以删除文档的个人信息，还是较有用的。<br><img src="/imgs/Tool/Softwares/M$Office/office-all/00-information.png" alt=""></p>
<h2 id="图片与形状的处理"><a href="#图片与形状的处理" class="headerlink" title="图片与形状的处理"></a>图片与形状的处理</h2><p>Office 的各个软件对图片的处理的功能是基本相同的，主要常用的点有以下几个：</p>
<ol>
<li>图片的裁剪、压缩/更改/重设功能：调整图片分辨率以减小文件大小、替换图片使得不必重新插入图片再调整大小等、取消已有的调整<br><img src="/imgs/Tool/Softwares/M$Office/office-all/00-figure.gif" alt=""></li>
<li>图片的颜色设置：转换为黑白、通过设置透明色去除背景（比删除背景好用）</li>
<li>图片的样式：添加边框、阴影等</li>
<li>形状的编辑顶点、编辑文字：有了编辑顶点、可以非常自定义的调整形状</li>
</ol>
<h2 id="字体的设置"><a href="#字体的设置" class="headerlink" title="字体的设置"></a>字体的设置</h2><p>字体的设置主要包括字体、字重、字号、颜色等，还有字体的效果如上/下标、下划线、删除线、斜体粗体等。这些操作大多有快捷键，可以较快速的使用。</p>
<h2 id="颜色的设置"><a href="#颜色的设置" class="headerlink" title="颜色的设置"></a>颜色的设置</h2><p>在各种设置颜色的选项里：其他颜色-&gt;自定义可以打开详细的设置，也可以通过调整颜色模式如 RGB(A)/HSL 方便使用数值进行调整，受到 Office 版本的影响，有的版本的 Office 软件可以直接通过调整颜色编码进一步调整。</p>
<h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><p>在 Office 这些软件中，大部分快捷键是通用的，但是在 Word 和 PowerPoint 之间，有不少快捷键在 Excel 中用不了，比如使用 Ctrl+Shift+&lt;/&gt; 调整字号，Ctrl+Shift+c/v 复制粘贴格式，在 Excel 中都不能用</p>
<blockquote>
<p>实在 zz，多好用的两组快捷键，excel不能用，吐了</p>
</blockquote>
<p>同时，在软件中按下 Alt 键，可以打开以下窗口，通过键盘进行命令的选择；在不变动标签选项卡的组成时，可以记忆一些快捷键；这个方法结合快速访问栏，可以进一步缩短使用某操作的时间。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/00-shortcuts.png" alt=""></p>
<h2 id="文件和窗口"><a href="#文件和窗口" class="headerlink" title="文件和窗口"></a>文件和窗口</h2><p>Office 的这些软件都可以对一个文件打开多个窗口，方便同时修改文件的不同部分，在「视图」选项卡中「新建窗口」即可打开。</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><div id="refer-anchor-1"></div>

<ul>
<li>[1] <a href="https://www.cnblogs.com/malecrab/p/5300486.html">ANSI 编码</a></li>
</ul>
<div id="refer-anchor-2"></div>

<ul>
<li>[2] <a href="https://github.com/NickeManarin/ScreenToGif">录屏软件 ScreenToGif</a></li>
</ul>
]]></content>
      <categories>
        <category>M$Office</category>
      </categories>
      <tags>
        <tag>Office</tag>
      </tags>
  </entry>
  <entry>
    <title>Office：1-Word</title>
    <url>/zh-cn/posts/b627a210-365a-11ec-a498-d524ecc7212f/</url>
    <content><![CDATA[<p>微软 Office 系列软件使用方法系列第二篇：Word 的使用</p>
<a id="more"></a>
<p>[TOC]</p>
<h1 id="使用-Word-的注意事项"><a href="#使用-Word-的注意事项" class="headerlink" title="使用 Word 的注意事项"></a>使用 Word 的注意事项</h1><p>在开始内容前，首先要明确一些基本的点：</p>
<ol>
<li>在使用 word 前先明白自己的目的，是当备忘录，还是无所谓格式的随笔，还是一篇正经的报告？</li>
<li>在使用时，尽量做到内容和样式分离：<ol>
<li>不要用空格(或者手动乱加制表符)对齐</li>
<li>各类编号，都可以做到自动编号自动更新交叉引用</li>
<li>在内容没有完成前，不要通过调整字体、段落、图片大小来控制显示</li>
</ol>
</li>
<li>尽量明白：绝大部分情况下，不是 Word 不能做到，而是自己不知道怎么做到</li>
</ol>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p><strong>请先看上面的目录，如果目录提到的点都大概明了，可以直接看案例。</strong></p>
<h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>文字、图片、表格没有什么好讲的，主要说一些可能被忽视的东西</p>
<h3 id="不可见字符"><a href="#不可见字符" class="headerlink" title="不可见字符"></a>不可见字符</h3><p>不可见字符的显示可以在「选项」-「显示」中开启，显示这些能更好的调整格式<br><img src="/imgs/Tool/Softwares/M$Office/office-all/01-display.png" alt=""></p>
<p>不可见字符包括很多种（基本列全了）：</p>
<blockquote>
<p>值得一提的是在 Office 2019 和 365里，多级列表中附加的空格和普通空格的样式是不一样的</p>
</blockquote>
<p>需要注意的是，段落和换行是不一样的，很多时候一段文字不能在一行显示完毕，需要通过自动/手动换行的方式显示全，行结束符 <code>^l</code> 就是手动结束一行</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-invisible-char-chs.png" alt=""></p>
<p>这里还对比了不同类型空格在实际显示时的区别</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-input-test-chs.png" alt=""></p>
<h3 id="域代码"><a href="#域代码" class="headerlink" title="域代码"></a>域代码</h3><p>文档中存在一些可变的部分，比如章节、公式的编号、目录、页眉页脚，以及这些东西的交叉引用，这些部分都可能随着内容的增删而变化，这也是普通情况下使用 Word 的一个难点。</p>
<p>域代码在选中时，会表现为一个整体的浅灰色的区域：</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-fieldcode.png" alt=""></p>
<p>域代码相关的快捷键有三个，且都和 <code>F9</code> 相关，<code>F9</code> 用来刷新域代码，<code>Shift-F9</code> 用来在显示状态和编辑状态切换，<code>Ctrl-F9</code>用来插入新的域代码(即域代码中的大括号，手动输入是无效的)<a href="#refer-anchor-3"><sup>3</sup></a></p>
<p>域代码的具体使用案例(目录、页眉页脚、公式、图表标题)在后续有讲解。</p>
<h3 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h3><p>插入公式可以使用软件(如 MathType/AxMath)，或者使用 Word 自带的公式编辑器 (使用 <code>Alt+=</code> 快速插入)</p>
<blockquote>
<p>MathType 一个是公司太垃圾，一个是界面太有上世纪的感觉，还贵的1p，不如AxMath 终身使用还可以反激活；但是自带的公式编辑器通过更换字体效果和前两个不相上下</p>
</blockquote>
<h2 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h2><p>这里提到的是 <strong>格式(Format)</strong> 而非 <strong>样式(Style)</strong> 主要是为了和后面的样式区分。</p>
<h3 id="字体格式"><a href="#字体格式" class="headerlink" title="字体格式"></a>字体格式</h3><p>通常情况下，字体需要设置的格式比较少，仅字体、字号等，最多加上下划线什么的，详细的字体设置可以点击红圈或者使用快捷键 <code>Ctrl-D</code>。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-font.png" alt=""></p>
<h3 id="段落格式"><a href="#段落格式" class="headerlink" title="段落格式"></a>段落格式</h3><p>Word 的段落是指前一个段结束符后(<code>^p</code>)到下一个段结束符及其之间的内容，具体的段落设置在红圈内调整。</p>
<p>这里只说明一些重要的内容，具体内容可以自行搜索学习。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-paragraph.png" alt=""></p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-paragraph2.png" alt=""></p>
<h4 id="度量单位"><a href="#度量单位" class="headerlink" title="度量单位"></a>度量单位</h4><p>在 word 中，可以使用的单位包括绝对的单位(磅/点/pt, 厘米/cm, 毫米/mm, 英寸)和相对的单位(字符/ch, 行)，相对的单位指与字号的设置有关，具体的对应关系可以在网络自行查找。</p>
<blockquote>
<p>比较离谱的事情是，在段落格式设置中，上述中英单位可以混用，在制表位设置里就不行，实在搞不明白</p>
</blockquote>
<p>相对单位的好处体现在中文排版时的首行缩进 2 个字符，这个距离应该和字号相关，不应该是绝对的 2.58cm 或者什么的。</p>
<h4 id="换行和分页"><a href="#换行和分页" class="headerlink" title="换行和分页"></a>换行和分页</h4><p>换行和分页中的「段前分页」可以自动插入分页符，在设置某些需要另起一页的段落时可以使用。</p>
<h4 id="中文版式"><a href="#中文版式" class="headerlink" title="中文版式"></a>中文版式</h4><p>在排版中文的段落时，应当选中「换行」中的第1、3项，即按照中文排版的惯例不让标点成为行首第一个字符；同时应当选中「字符间距」的2、3项，确保中文-西文、中文-数字之间有一定距离。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-paragraph3.png" alt=""></p>
<h4 id="制表位"><a href="#制表位" class="headerlink" title="制表位"></a>制表位</h4><p>制表位的使用，主要是为了让「不是表格的段落」看起来有「像表格一样对齐」的样子，具体可以表现为试卷里选择题选项的对齐，或者行间公式的对齐等等。</p>
<p>制表符(不是位)在文档中表现为一个向右的箭头(见「不可见字符」一节)，它的长度可变，具体长度通过设置段落的制表位或者手动在标尺上调节。插入制表符可以通过按下 Tab 键或者复制已有的制表符。</p>
<blockquote>
<p>需要注意：在行首按 Tab 不会插入制表符，而是会缩进这一行</p>
</blockquote>
<p>制表位的具体使用案例在「案例 1：制作报告模板」</p>
<p>制表符只是一个字符，通过设置制表位可以为其添加一些属性。一个制表位有三个属性：「位置」「对齐方式」「引导符」。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-paragraph4.png" alt=""></p>
<ol>
<li>制表符本身显示的样子，通过引导符设置，比如点或着线</li>
<li>制表符会控制/影响从其下一个字符开始到下一个制表符/行/段结束符之间的内容。此时，制表位的对齐方式指的是其控制内容(简称为内容)的对齐方式，和制表位的位置一齐影响：<ol>
<li>左对齐的制表位指其内容，从制表位位置的右侧开始左对齐</li>
<li>右对齐的制表位指其内容，从制表位位置的左侧开始右对齐</li>
<li>居中对齐的制表位指其内容，以制表位位置为中心居中</li>
<li>小数点对齐的制表位指其内容，以其中第一个小数点为中心在制表位的位置中心对齐</li>
<li>竖线对齐即左对齐，同时画一条竖线</li>
</ol>
</li>
</ol>
<p>下图中红色的圈代表制表位的位置和类型(左中右对齐是不一样的)，绿色的框代表制表位的显示方式。<br><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-paragraph6.png" alt=""></p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-paragraph5.png" alt=""></p>
<h3 id="表格-图片格式"><a href="#表格-图片格式" class="headerlink" title="表格/图片格式"></a>表格/图片格式</h3><p>图片的格式设置在前一篇中已经讲过，同时网上也比较容易搜到。</p>
<p>表格的格式可以分为「表格本身」和「表格内容」两部分的设置，表格内容的设置比较简单，「表格本身」的设置在「表格工具」-「布局」-「属性」里设置</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-table.png" alt=""></p>
<h3 id="页面格式"><a href="#页面格式" class="headerlink" title="页面格式"></a>页面格式</h3><p>页面格式的设置在「布局」选项卡中。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-page.png" alt=""></p>
<h4 id="页边距、纸张和版式"><a href="#页边距、纸张和版式" class="headerlink" title="页边距、纸张和版式"></a>页边距、纸张和版式</h4><p>页边距和纸张都是一些常见的设置，没有什么好说的。版式里可以调节垂直对齐方式，即每一行在页面中，行的垂直方向上的对齐方式。</p>
<h4 id="文档网格"><a href="#文档网格" class="headerlink" title="文档网格"></a>文档网格</h4><p>文档网格是 word 的一个重要的特性，它和段落设置一起定义了行和字符的排列规则。简单地说，如果设置了文档网格，那么每一页的行数，或者每一行的列数会被固定，文档网格与段落和字体字号设置共同调节了每一行的行距或者字距。</p>
<p>文档网格具体的设置细节可以参考[<a href="#refer-anchor-1">1</a>][<a href="#refer-anchor-2">2</a>]</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-page2.png" alt=""></p>
<p>文档网格常常会和插入公式/图片引起的行距问题相关联。</p>
<ol>
<li>对于行间公式，如果设置了文档网格，那么插入的公式会占据 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 行，也就是说这个对象占据的行高是一个离散值，只要这个对象的高度在 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="9.629ex" height="1.692ex" role="img" focusable="false" viewBox="0 -666 4256 748"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(877.8, 0)"><path data-c="223C" d="M55 166Q55 241 101 304T222 367Q260 367 296 349T362 304T421 252T484 208T554 189Q616 189 655 236T694 338Q694 350 698 358T708 367Q722 367 722 334Q722 260 677 197T562 134H554Q517 134 481 152T414 196T355 248T292 293T223 311Q179 311 145 286Q109 257 96 218T80 156T69 133Q55 133 55 166Z"></path></g><g data-mml-node="mi" transform="translate(1933.6, 0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2755.8, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(3756, 0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container> 行高之间，占据的距离不变。如果想要去除这个问题，要么不设置文档网格，要么将公式这一行的段落设置不对齐到网格。</li>
</ol>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-page4.png" alt=""></p>
<ol>
<li>对于行内公式，常见的问题是插入公式后上下错位不能对齐，导致这个问题的可能性有 3 点：<ol>
<li>设置了文档网格，公式高度超出普通字符高度，导致公式占据多于 1 行。案例如图中①所示。这种情况的解决方法包括调整公式高度/字号或者去除文档网格</li>
<li>段落设置中，「中文版式」-「字符间距」-「文本对齐方式」没有设置成「居中」，因为公式对象的基线/底线和文字的基线/底线不能很好的对应，如图中②所示，解决方法就是调整本段落的中文版式设置</li>
<li>字体设置中，「高级」-「字符间距」-「位置」没有设置成「标准」，如图中③所示，解决方法就更改设置为「标准」</li>
</ol>
</li>
</ol>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-page5.png" alt=""></p>
<p>行内公式的三种问题中，文档网格导致的问题和后两个并无直接的关系，也就是说，不一定要先调整网格设置，先试试看后两种是不是能解决，再调整网格。</p>
<h3 id="编号与多级列表"><a href="#编号与多级列表" class="headerlink" title="编号与多级列表"></a>编号与多级列表</h3><p>编号与多级列表是非常重要的工具</p>
<blockquote>
<p>但是也是最迷惑的，尤其是多级列表</p>
</blockquote>
<h4 id="项目符号与编号"><a href="#项目符号与编号" class="headerlink" title="项目符号与编号"></a>项目符号与编号</h4><p>可以通过调整标尺上的标尺，改变编号后内容和编号的符号间的距离</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-list.gif" alt=""></p>
<p>可以手动指定编号的符号</p>
<h4 id="多级列表"><a href="#多级列表" class="headerlink" title="多级列表"></a>多级列表</h4><p>多级列表提供了部分类似 LaTeX 中计数器的功能</p>
<blockquote>
<p>实际是域中的编号项才是计数器</p>
</blockquote>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-multilist.png" alt=""></p>
<p>多级列表有几个需要注意的点，使用前请务必读完：</p>
<ol>
<li>多级列表内一共有三个部分，当前列表指的是光标选中部分使用的列表；列表库是当前使用的 word 模板内置的列表库；当前文档中的列表包括当前 <strong>所有</strong> 打开了的 word 文件内定义/使用的列表。</li>
<li>一个多级列表如果保存在了列表库，那么右键删除就删除了，但是如果这个列表还在被使用，那么它还会在「当前文档中的列表」中显示，从<strong>当前文档中的列表</strong>中删除的方法是先换一个列表，然后保存重启这个文件才能刷新删除掉这个列表。</li>
<li>可以同时使用多个多级列表，但是一个样式至多能被链接一次（即最多只能被某一多级列表的某一级链接）</li>
<li>当光标选择的内容是某一多级列表，那么「定义新的多级列表」或者「定义新的列表样式」-「格式」-「编号」可以变相修改当前选中的多级列表的样式；如果光标没有选择某多级列表的部分，那么设置完毕后会默认给当前选择的区域使用上这一多级列表。</li>
</ol>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-format-multilist2.png" alt=""></p>
<p>多级列表至多提供到 9 级，每一级可以设置不同的内容，包括编号的格式(数字/字母等)，编号的对齐/缩进，以及编号后的符号(无/空格/制表符)</p>
<p>其中，「正规形式编号」是指虽然编号的格式可以是字母、罗马数字等，但是显示出来是阿拉伯数字。</p>
<p>多级列表还提供了一次性设置所有级别的较快的方式。</p>
<p>具体的应用请见后文的案例。</p>
<h2 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h2><h3 id="使用样式的必要性"><a href="#使用样式的必要性" class="headerlink" title="使用样式的必要性"></a>使用样式的必要性</h3><p>样式和格式在普遍意义上是没有区别的，但是在 word 的语境下，样式主要指保存在样式管理器中的格式。</p>
<p>样式的优点在于能够促进内容与格式的分离，即通过给内容标注相应的样式(刷上样式/设置样式名)，可以之后通过修改样式的格式，自动更新内容的格式。具体地说，通过刷样式，使得一篇文章的标题都具有「标题」样式，正文都具有「正文」样式，之后只要修改「正文」样式对应的段落/字体/制表位格式，就可以统一调整每一段正文的格式。</p>
<p>样式的缺点在于非唯一性，即相同的样式可以具有不同的名字，在使用时容易造成混淆，尤其 word 会在合并文章时将样式也复制进来，如果没有统一的样式命名规范或模板，很容易导致样式库的混乱。</p>
<p>因此，合理规范的使用样式是很有必要性的，在制作内容较多的文档时(不论单人或多人协作)，使用统一样式库的模板，在汇总/合并或者格式调整/检查时能带来极大的便利。</p>
<h3 id="样式管理器"><a href="#样式管理器" class="headerlink" title="样式管理器"></a>样式管理器</h3><p>word 的快捷样式位于「开始」标签内的右侧，占据了几乎一般的「开始」标签，可见它的重要性，但是很多人不知道使用它，或者错误的使用它。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-style-manager.png" alt=""></p>
<p>样式的红色圈可以查看较为常用的样式，这里右键样式可以将其从这里去除，但<strong>不是彻底的删除</strong>，在样式管理器(绿圈内，或者使用快捷键 <code>Ctrl-Shift-Alt-S</code> 打开)中可以进行修改。</p>
<blockquote>
<p>样式管理器默认是悬浮的，不是很好用，个人建议拖动使其吸附在屏幕右侧，进一步方便使用</p>
</blockquote>
<p>样式管理器下方的三个按钮分别是「新建样式」「样式检查器」「管理样式」，都非常重要，旁边的「选项」和「显示预览」主要控制的是快捷样式库的显示，可以自己尝试。</p>
<p>其中「样式检查器」主要用于快速查看某一内容的样式。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-style-manager2.png" alt=""></p>
<h3 id="管理样式"><a href="#管理样式" class="headerlink" title="管理样式"></a>管理样式</h3><h4 id="样式的类型"><a href="#样式的类型" class="headerlink" title="样式的类型"></a>样式的类型</h4><p>样式一共有 5 种类型，字符/段落/链接字符和段落/列表/表格，实际上还有一种「空白」的，即没有链接到样式的格式。</p>
<p>这五种样式中，常用的是「段落」和「链接字符和段落」，具体的样式类型和符号的对应可以自行搜索。</p>
<h4 id="样式的管理与优先级"><a href="#样式的管理与优先级" class="headerlink" title="样式的管理与优先级"></a>样式的管理与优先级</h4><p>点击「管理样式」按钮可以打开下面的窗口：</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-style-manager3.png" alt=""></p>
<p>在「推荐」选项卡，可以看到样式具有两个属性，一个是「优先级」，一个是「是否显示为推荐样式」。</p>
<p>优先级可以调整样式的显示顺序，同一优先的样式按照拼音排序（我猜的）。显示为推荐样式可以控制是否在快捷样式里显示。</p>
<p>快速改变优先级可以「置于最后」或者使用「指定值」。</p>
<p>删除自己设置的样式可以在「编辑」选项卡。</p>
<h3 id="新建样式"><a href="#新建样式" class="headerlink" title="新建样式"></a>新建样式</h3><p>新建样式之前，请确保已经查看过样式库(在管理样式里)，没有重复的样式。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-style-create.png" alt=""></p>
<p>新建样式有几个关键点：</p>
<ol>
<li>样式起名不要太随意，同时在快捷样式里只能显示部分名字，做到言简意赅，不要造成误解</li>
<li>注意选择正确的样式类型，比如字符样式不能被链接(导航/目录)，同时样式类型只能在新建时设置，后续除非删除重建不能更改</li>
<li>如果下面的「格式」选项有些不能选择，证明样式类型选错了</li>
<li>如果新建样式时，选中了一些文字，那么默认会使用该文字的样式作为基准</li>
</ol>
<p>注意到上述几点后，对于一个样式只要按照预先设定好的格式要求进行设置就好了。</p>
<h3 id="自动图文集带来的进一步简化"><a href="#自动图文集带来的进一步简化" class="headerlink" title="自动图文集带来的进一步简化"></a>自动图文集带来的进一步简化</h3><p>在新建了样式之后，对于文档的一些部件，比如行间公式或者图片，是由多种样式组成的，此时手动插入各个部分再刷样式，不是很方便/自动化，此时使用自动图文集，可以快速的插入一些部件。可以类比于 IDE 的 Snippet 功能。</p>
<p>自动图文集位于「插入」-「文本」-「文档部件」</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-style-auto.png" alt=""></p>
<h2 id="标签与快速访问工具栏"><a href="#标签与快速访问工具栏" class="headerlink" title="标签与快速访问工具栏"></a>标签与快速访问工具栏</h2><p>Word 中可以自己编辑标签页，比如把脑瘫的百度网盘标签隐藏，或者调整一些顺序，或者调整标签页内的内容。只需要在上面右键然后点击「自定义功能区」就好了</p>
<h3 id="快速访问工具栏"><a href="#快速访问工具栏" class="headerlink" title="快速访问工具栏"></a>快速访问工具栏</h3><p>快速访问工具栏就可以把常用的功能集成起来，方便操作，可以通过右键某功能，然后「添加到快速访问…」或者在「自定义功能区」里手动调整。</p>
<h4 id="快速访问工具栏与快捷键"><a href="#快速访问工具栏与快捷键" class="headerlink" title="快速访问工具栏与快捷键"></a>快速访问工具栏与快捷键</h4><p>之前提到了，使用 Alt 引导的快捷键可以直接操作快速访问工具栏，因此快速访问工具栏的前10个，可以考虑放一些经常使用的功能(只是个人建议)</p>
<h4 id="快速访问工具栏的布置"><a href="#快速访问工具栏的布置" class="headerlink" title="快速访问工具栏的布置"></a>快速访问工具栏的布置</h4><p>快速访问工具栏可以插入分隔符，因此应该把相近的功能放到一起，在这里简单的给出自己的设置，仅供参考。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-qab.png" alt=""></p>
<h3 id="快速访问工具栏的导入导出"><a href="#快速访问工具栏的导入导出" class="headerlink" title="快速访问工具栏的导入导出"></a>快速访问工具栏的导入导出</h3><p>在「自定义功能区」里可以导出自己调整好的快速访问工具栏，在新的电脑里导入即可。如果安装有插件，新电脑没有装插件则导入后不会显示和插件相关的内容。</p>
<h2 id="高效优雅的使用-Word"><a href="#高效优雅的使用-Word" class="headerlink" title="高效优雅的使用 Word"></a>高效优雅的使用 Word</h2><ol>
<li>调整好 word 本身「选项」里的各类设置</li>
<li>设置好快速访问工具栏，并同步</li>
<li>键盘：熟记常用的快捷键(保存撤销，字体设置，Alt 引导，样式)</li>
<li>鼠标：左侧点击选中一行，按住 Ctrl 拖动复制元素，按住 Alt 拖动可细微调节标尺</li>
<li>清理/隐藏没用的样式</li>
<li>定义好多级列表与新样式</li>
<li>定义好自动图文集</li>
<li>合理的使用插件(指公式或文献管理插件)</li>
</ol>
<p>这是我的 word 的日常使用界面，右侧的样式管理通过快捷键显示/隐藏，左侧的导航窗格通过快速访问工具栏的「显示」调整。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-normalview.png" alt=""></p>
<h1 id="案例：制作一个报告-论文的模板"><a href="#案例：制作一个报告-论文的模板" class="headerlink" title="案例：制作一个报告/论文的模板"></a>案例：制作一个报告/论文的模板</h1><p>这个案例以最常见的需求(指实验报告/学术论文类)为例，最终将制作出一个 .dotm 文件，能够方便后续的使用。</p>
<h2 id="整理要求"><a href="#整理要求" class="headerlink" title="整理要求"></a>整理要求</h2><p>在开始之前，先简单的整理格式要求，格式要求的内容包括但不限于：</p>
<ol>
<li>页面要求：边距、装订方式、页眉页脚</li>
<li>文字要求：各级标题、正文的字号、中/西文字体、图表公式算法的编号方式(指用<code>-</code>还是<code>.</code>或者其他作为连接符)</li>
<li>文档组件要求：目录的深度、参考文献的格式、附录的编号、源代码的格式要求</li>
</ol>
<p>这里假设</p>
<ol>
<li>默认的中文字体为「宋体」，西文字体为「Times New Roman」</li>
<li>正文字号为 12pt（小四），标题字号、加粗、缩进随意设置、图表等标题字号为 10.5 pt（五号），正文段落首行缩进 2 个字符</li>
<li>图表编号使用 <code>图/表 X.Y</code> ，公式编号使用 <code>(X-Y)</code>，其中 <code>X</code> 为一级标题号，<code>Y</code> 为序号</li>
<li>表格默认使用三线表，顶端、底部线为 1.5pt 实线，中线使用 0.5pt 实线，表格内容字号与正文相同</li>
<li>图、表、行间公式均居中显示，图、表标题居中，公式编号右对齐</li>
<li>页边距不限制，行距使用单倍行距，不限制文档网格设置</li>
<li>文档具有封面、摘要、目录、正文、参考文献、附录这六个部分，其中：<ol>
<li>除封面的其他部分标题使用一级标题，正文使用阿拉伯数字编号(1, 2, 3)，附录使用大写英文字母(A, B, C)编号</li>
<li>封面不含页眉页脚，页脚从封面下一页开始编号，摘要、目录使用罗马数字编号，正文开始使用阿拉伯数字编号；偶数页页眉为「报告」，奇数页页眉为一级标题的名称(包括编号，不编号章节只显示章节标题)</li>
</ol>
</li>
<li>正文标题至多有7级，第 1-3 级均用阿拉伯数字(1 1.1 1.1.1)，其他级别随意，目录只显示到三级目录</li>
</ol>
<p>要求所有和编号相关的均为自动编号，不能手动输入。</p>
<h2 id="样式设置"><a href="#样式设置" class="headerlink" title="样式设置"></a>样式设置</h2><p>在这里，采用一开始提到的第二种方式，即「先设置好样式」再「填写内容」再「微调样式如果有需要」</p>
<h3 id="清除样自带的样式："><a href="#清除样自带的样式：" class="headerlink" title="清除样自带的样式："></a>清除样自带的样式：</h3><ol>
<li>清除没用的多级列表</li>
<li>在样式管理器里，只保留「标题 1-7」「正文」「TOC 1-3」「TOC 标题」，把这几个样式的优先级设为 1，其他的隐藏+优先级设置微为 10 以后</li>
</ol>
<h3 id="定义样式"><a href="#定义样式" class="headerlink" title="定义样式"></a>定义样式</h3><h4 id="默认字体字号"><a href="#默认字体字号" class="headerlink" title="默认字体字号"></a>默认字体字号</h4><p>首先设置默认的字体为 12pt 宋体、TNR：</p>
<p>在「样式」-「管理样式」-「设置默认值」里设置默认字体，然后分别修改正文、标题等样式的字体</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-01.png" alt=""></p>
<h4 id="图表标题字号"><a href="#图表标题字号" class="headerlink" title="图表标题字号"></a>图表标题字号</h4><p>新建样式「图标题」「表标题」「图标题-子图」「表标题-子图」，根据需要选择是否需要新增「算法标题」，或者直接使用「图标题」即可</p>
<p>设置「图标题」「表标题」样式的字体为 10.5pt 宋体，段落部分首先设置单倍行距，然后「图标题」段后设置一定的间距，「表标题」段前部分设置一定的间距（考虑到图表标题的位置）；设置「图/表标题-子图」的段前段后间距均为 0。</p>
<h4 id="图、公式"><a href="#图、公式" class="headerlink" title="图、公式"></a>图、公式</h4><p>新建样式「图」「行间公式」「公式编号(字符样式)」，其中「公式编号(字符样式)」用于单独调整公式编号的样式</p>
<p>「图」样式设置单倍行距、不对齐到网格、段前段后间距为 0，居中即可。</p>
<p>公式相关的在下面章节叙述。</p>
<h2 id="定义多级列表"><a href="#定义多级列表" class="headerlink" title="定义多级列表"></a>定义多级列表</h2><p>考虑到正文和附录需要分开编号，因此在这里要定义两个多级列表，一个用于正文编号，一个用于附录编号。</p>
<p>需要说明的是，因为一个样式只能被一个多级列表项链接，因此，在这里还要新建 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 个标题样式，可以取名为「标题x-附录」，<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex" xmlns="http://www.w3.org/2000/svg" width="1.357ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 600 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g></svg></mjx-container> 取到 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.554ex" role="img" focusable="false" viewBox="0 -665 500 687"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g></svg></mjx-container> 应该就行，附录要太多级也没用。这些「标题x-附录」的样式基准选择对应的「标题x」，可以确保只修改正文标题的样式，附录的跟着一起变。</p>
<p>这里仅展示定义了前三级标题的正文多级列表样式。通过选择「将级别链接到样式」设置对应的样式。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-02.png" alt=""></p>
<h3 id="附录列表"><a href="#附录列表" class="headerlink" title="附录列表"></a>附录列表</h3><p>定义附录列表需要在空白的地方，点击新建多级列表，然后依照之前的设置，将编号格式设置为大写英文字母，然后链接到「标题x-附录」，之后通过刷标题样式就可以默认添加编号了。</p>
<p>需要注意的是，如果想要去掉标题前面的编号，正确的方法是点击一下编号，然后用退格键删除。其他的操作有可能造成多级列表和样式链接的断开，删除后记得看看上面样式「标题x」前面是不是还有编号。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-03.png" alt=""></p>
<h2 id="并排图片"><a href="#并排图片" class="headerlink" title="并排图片"></a>并排图片</h2><p>大部分情况下，一行只有一张图片，如果需要两张图片并排，同时图片的子标题在图下面居中，有多种解决方案：</p>
<ol>
<li>在制作图片时将两张图制作为一张长图，下方的标题用空格分开。<blockquote>
<p>这也太蠢了，哪有用空格对齐的</p>
</blockquote>
</li>
<li>使用制表位，让图片分别居中，标题分别居中<blockquote>
<p>是一个解决方案，需要多定义两种样式</p>
</blockquote>
</li>
<li>使用分栏，将需要插入两张图的地方分为 2 或者 3 栏<blockquote>
<p>是一个解决方案，这样不需要定义新的样式</p>
</blockquote>
</li>
</ol>
<p>这里主要讲解 2 和 3 两种方案。</p>
<h3 id="使用制表位"><a href="#使用制表位" class="headerlink" title="使用制表位"></a>使用制表位</h3><p>如果不清楚制表位的使用，请看上面。</p>
<p>假设一行只有两张图片，再假设图片大小基本一致，一行大概有36个字符，那么就需要两个居中的制表位，位于 12 字符 24 字符</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-parafig1.gif" alt=""></p>
<p>但是这里有一个比较关键的问题，也就是标题必需限制在一行以内，不能折行，所以解决方案受限，但不失为一种快速的方法。</p>
<h3 id="使用分栏"><a href="#使用分栏" class="headerlink" title="使用分栏"></a>使用分栏</h3><p>分栏就自由一些，两侧的标题长度可以随意，图片大小也可以随意。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-parafig2.gif" alt=""></p>
<p>图里的图片高度不一样，导致子标题没有对齐，可以自行调整。</p>
<h2 id="表格样式"><a href="#表格样式" class="headerlink" title="表格样式"></a>表格样式</h2><p>以三线表为例，自己制作一个三线表的样式</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-tableformat.gif" alt=""></p>
<p>制作好表格样式后，只需要修改表格样式，不需要修改每一个表格的格式。</p>
<h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><p>数学公式是相对比较麻烦的部分，有很多软件能与 Word 搭配，这里主要讨论自带公式编辑器与使用其他软件插入公式后的操作。</p>
<blockquote>
<p>没错 思杰克马丁代理的M开头软件过于垃圾，不如去官网买或者去用 AxMath</p>
</blockquote>
<h3 id="更改公式编辑器的字体"><a href="#更改公式编辑器的字体" class="headerlink" title="更改公式编辑器的字体"></a>更改公式编辑器的字体</h3><p>自带公式编辑器的字体<code>Cambria Math</code>是有点丑，但是没关系，可以改，只要这个字体支持<code>Opentype Math</code>。这里推荐使用 <code>Latin Modern Math</code> 也就是 TeXLive 默认的数学字体。</p>
<p>需要注意的是，安装新的字体会导致在别的机器打开这个文档时公式使用自带字体显示，除非转换成 PDF 文档</p>
<blockquote>
<p>尝试了在 .docx 中嵌入字体，但是依然不行，很奇怪，有待解决</p>
</blockquote>
<p>可用的数学字体下载地址：</p>
<ul>
<li><p>Latin Modern Math<br><a href="http://www.gust.org.pl/projects/e-foundry/lm-math/download/latinmodern-math-1959.zip">http://www.gust.org.pl/projects/e-foundry/lm-math/download/latinmodern-math-1959.zip</a></p>
</li>
<li><p>Scientific and Technical Information Exchange font<br><a href="https://github.com/stipub/stixfonts">https://github.com/stipub/stixfonts</a></p>
</li>
</ul>
<p>更换字体前后样式对比</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-04.png" alt=""></p>
<p>此时，似乎完全不需要其他软件编辑公式了</p>
<h3 id="公式与编号的生成与对齐"><a href="#公式与编号的生成与对齐" class="headerlink" title="公式与编号的生成与对齐"></a>公式与编号的生成与对齐</h3><p>公式的编号方式有三种：</p>
<ol>
<li>使用自带公式编辑器加 <code>#</code> 的编号方法<blockquote>
<p>此种编号可以调整的范围有限，同时交叉引用比较麻烦，仅推荐临时使用</p>
</blockquote>
</li>
<li>使用域代码自定义编号，其实可以细分为两种方法：<ol>
<li>使用多级列表链接的 ListNum 域列表名</li>
<li>使用 StyleRef 和 SEQ</li>
</ol>
</li>
<li>使用其他软件的编号工具<blockquote>
<p>强烈不推荐 MathType 插入的编号实际上也是域代码，还要自己手工插入公式的节，完全没有必要，直接使用域代码就完事了</p>
</blockquote>
</li>
</ol>
<p>公式的对齐方式也有三种：</p>
<ol>
<li>用空格手动对齐<blockquote>
<p>这种方法行是行，但是只会让人缓缓打出一个问号</p>
</blockquote>
</li>
<li>用制表位对齐<blockquote>
<p>算是比较合理的方法</p>
</blockquote>
</li>
<li>插入一行三列的表格对齐<blockquote>
<p>我真的觉得这个方法又聪明又愚蠢，为啥不插入文本框呢？为啥不插入图片呢？要是有人一个文档几百个公式弄了几百个表格，我只能赞叹一句：NB！</p>
</blockquote>
</li>
</ol>
<p>这里主要编号的 2.1 和 2.2 两种方法以及用制表位对齐的第二种方法</p>
<p>上述两种方法各有利弊，但建议都要掌握，各自的缺点如下：</p>
<p><strong>使用 ListNum 编号：</strong></p>
<ol>
<li>在交叉引用时，不能为公式单独的定义「公式/Equation」选项卡，只能在「编号项」里找，而编号项是各种编号都有的(但是是按顺序排列的)，使用起来并无不便</li>
</ol>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-07.png" alt=""></p>
<p><strong>使用 StyleRef 编号：</strong></p>
<ol>
<li>假设编号里包含一级标题，而一级标题并非是阿拉伯数字(比如汉字一、二、三)，但还要求编号是阿拉伯数字，此时需要对域代码进行修改才能正常显示</li>
<li>域代码不能自动更新的情况比 ListNum 多一些</li>
<li>在交叉引用时会有一些问题，且不好解决(解决方法后面会说)</li>
</ol>
<h4 id="使用-ListNum-的公式编号"><a href="#使用-ListNum-的公式编号" class="headerlink" title="使用 ListNum 的公式编号"></a>使用 ListNum 的公式编号</h4><p>这个方式通过定义多级列表中的 ListNum 域名称，通过在某一级标题定义的方式插入编号：</p>
<ol>
<li>在需要关联的多级列表(正文的或者附录的)里，找到不用的标题（比如第8级或第9级），设置输入编号的格式为你想要的格式，注意，这里的数字不是手输入的，是选择下面的「此级别…」或者「包含的…」插入的</li>
<li>设置重新开始列表的间隔为某一级别</li>
<li>设置 ListNum 域列表名为某名字，这里用的是 <code>LN-Main</code></li>
<li>在正文中，使用 <code>Ctrl-F9</code> 插入域代码，在其中粘贴/输入 <code>LISTNUM LN-Main \l 8</code>，其中 <code>LN-Main</code> 替换为自己起的名字，<code>8</code> 替换为自己使用的标题级别</li>
<li>使用或不使用 <code>F9</code> 刷新域代码</li>
<li>之后使用只要复制之前的编号，就可以自动编号了<blockquote>
<p>复制之前的编号也挺蠢的，所以等下才会讲自动图文集</p>
</blockquote>
</li>
</ol>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-05.png" alt=""></p>
<h4 id="使用-StyleRef-和-SEQ-的公式编号"><a href="#使用-StyleRef-和-SEQ-的公式编号" class="headerlink" title="使用 StyleRef 和 SEQ 的公式编号"></a>使用 StyleRef 和 SEQ 的公式编号</h4><p>这个方法和上一步类似，不过不需要设置多级列表，只需要设置域代码就可以。</p>
<p>首先输入 <code>(-)</code>， 然后在 <code>-</code> 左边插入域代码 <code>STYLEREF 1 \s</code>，右边插入域代码 <code>SEQ Equation \* ARABIC \s 1</code>，然后 <code>F9</code> 刷新即可。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-06.png" alt=""></p>
<p><strong>StyleRef 和 SEQ 编号的实质是 Word 自带的「插入题注」的方法</strong>，大家可以自己插入一个题注，编号选择「包含章节号」，然后使用 <code>Shift-F9</code> 就可以发现这里使用的域代码和上面的是一样的，所以不必记住，「插入题注」就好。</p>
<h4 id="使用制表位对齐公式"><a href="#使用制表位对齐公式" class="headerlink" title="使用制表位对齐公式"></a>使用制表位对齐公式</h4><p>基于之前讲过的「制表位」的使用，这里对齐公式就很简单了。</p>
<p>定义纸张宽度为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.65ex" xmlns="http://www.w3.org/2000/svg" width="6.165ex" height="2.195ex" role="img" focusable="false" viewBox="0 -683 2725 970.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mtext" transform="translate(944, -150) scale(0.707)"><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(556, 0)"></path><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(1056, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1612, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(2056, 0)"></path></g></g></g></g></svg></mjx-container>，左右边距之和为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.669ex" xmlns="http://www.w3.org/2000/svg" width="7.143ex" height="2.214ex" role="img" focusable="false" viewBox="0 -683 3157 978.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mtext" transform="translate(944, -150) scale(0.707)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1333, 0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(1725, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(2225, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(2503, 0)"></path></g></g></g></g></svg></mjx-container>，则实际的文字宽度为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.669ex" xmlns="http://www.w3.org/2000/svg" width="24.139ex" height="2.214ex" role="img" focusable="false" viewBox="0 -683 10669.5 978.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mtext" transform="translate(944, -150) scale(0.707)"><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(389, 0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(833, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(1361, 0)"></path></g></g><g data-mml-node="mo" transform="translate(2509.2, 0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msub" transform="translate(3565, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mtext" transform="translate(944, -150) scale(0.707)"><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(556, 0)"></path><path data-c="70" d="M36 -148H50Q89 -148 97 -134V-126Q97 -119 97 -107T97 -77T98 -38T98 6T98 55T98 106Q98 140 98 177T98 243T98 296T97 335T97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 61 434T98 436Q115 437 135 438T165 441T176 442H179V416L180 390L188 397Q247 441 326 441Q407 441 464 377T522 216Q522 115 457 52T310 -11Q242 -11 190 33L182 40V-45V-101Q182 -128 184 -134T195 -145Q216 -148 244 -148H260V-194H252L228 -193Q205 -192 178 -192T140 -191Q37 -191 28 -194H20V-148H36ZM424 218Q424 292 390 347T305 402Q234 402 182 337V98Q222 26 294 26Q345 26 384 80T424 218Z" transform="translate(1056, 0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(1612, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(2056, 0)"></path></g></g><g data-mml-node="mo" transform="translate(6512.2, 0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(7512.4, 0)"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mtext" transform="translate(944, -150) scale(0.707)"><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(833, 0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(1333, 0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(1725, 0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(2225, 0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(2503, 0)"></path></g></g></g></g></svg></mjx-container>。</p>
<p>因为插入制表位的原点是从页面左边距开始的，所以只需要计算文字宽度的一半 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="4.278ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1890.7 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mtext" transform="translate(681, -150) scale(0.707)"><path data-c="68" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(556, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(1056, 0)"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(1334, 0)"></path></g></g></g></g></svg></mjx-container>作为「公式」制表位的位置。</p>
<p>此时，只需要插入两个制表位，第一个是居中对齐的<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="4.278ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1890.7 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mtext" transform="translate(681, -150) scale(0.707)"><path data-c="68" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 124T102 167T103 217T103 272T103 329Q103 366 103 407T103 482T102 542T102 586T102 603Q99 622 88 628T43 637H25V660Q25 683 27 683L37 684Q47 685 66 686T103 688Q120 689 140 690T170 693T181 694H184V367Q244 442 328 442Q451 442 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(556, 0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(1056, 0)"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(1334, 0)"></path></g></g></g></g></svg></mjx-container>，第二个是右对齐的<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex" xmlns="http://www.w3.org/2000/svg" width="5.048ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 2231.4 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z"></path></g><g data-mml-node="mtext" transform="translate(944, -150) scale(0.707)"><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(389, 0)"></path><path data-c="78" d="M201 0Q189 3 102 3Q26 3 17 0H11V46H25Q48 47 67 52T96 61T121 78T139 96T160 122T180 150L226 210L168 288Q159 301 149 315T133 336T122 351T113 363T107 370T100 376T94 379T88 381T80 383Q74 383 44 385H16V431H23Q59 429 126 429Q219 429 229 431H237V385Q201 381 201 369Q201 367 211 353T239 315T268 274L272 270L297 304Q329 345 329 358Q329 364 327 369T322 376T317 380T310 384L307 385H302V431H309Q324 428 408 428Q487 428 493 431H499V385H492Q443 385 411 368Q394 360 377 341T312 257L296 236L358 151Q424 61 429 57T446 50Q464 46 499 46H516V0H510H502Q494 1 482 1T457 2T432 2T414 3Q403 3 377 3T327 1L304 0H295V46H298Q309 46 320 51T331 63Q331 65 291 120L250 175Q249 174 219 133T185 88Q181 83 181 74Q181 63 188 55T206 46Q208 46 208 23V0H201Z" transform="translate(833, 0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(1361, 0)"></path></g></g></g></g></svg></mjx-container>，然后在公式和编号前手动插入一个制表符即可。<strong>此时，这一行可以保存为「行间公式」的样式(保存制表位的位置)。</strong></p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-equationalign.gif" alt=""></p>
<p>同时，如果想要满足更复杂的要求，如下图这种，只需要计算好位置，然后增加制表符和制表位即可</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-08.png" alt=""></p>
<h2 id="交叉引用与复杂要求下的图表公式编号"><a href="#交叉引用与复杂要求下的图表公式编号" class="headerlink" title="交叉引用与复杂要求下的图表公式编号"></a>交叉引用与复杂要求下的图表公式编号</h2><h3 id="ListNum-和-StyleRef-的改进"><a href="#ListNum-和-StyleRef-的改进" class="headerlink" title="ListNum 和 StyleRef 的改进"></a>ListNum 和 StyleRef 的改进</h3><p>ListNum 的编号很容易和公式出现「上下不能对齐」的问题，此时需要单独对「公式编号」调整「字符」-「高级」-「位置」为「下降」，然后手动调节磅数，可以正常的显示。<strong>此时建议将这一新的格式保存为「公式编号」样式</strong></p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-09.png" alt=""></p>
<p>关于 StyleRef，先假设这样一个场景：</p>
<ol>
<li>一级标题使用中文数字（一、二、三、）进行编号</li>
<li>公式编号使用（1-1）进行编号，要求第一个数字和一级标题对应（使用阿拉伯数字）</li>
</ol>
<p>此处建议自己实际尝试一下，手动更改多级列表的样式，然后刷新使用 StyleRef 的域代码，不管是图表的编号还是公式的编号，都会产生如下图的变化，这很难搞。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-10.png" alt=""></p>
<p>使用 StyleRef 的解决方法稍微有点 Tricky，具体的方法是将「StyleRef」部分的域代码替换一下：<br>替换为 <code>{ QUOTE "二零一七年九月{ STYLEREF 1 \s }日" \@ "D" }</code>：</p>
<ol>
<li>这里是嵌套了两重域代码，记得输入域代码用 <code>Ctrl-F9</code> 插入，直接输括号是没用的</li>
<li>这里的解决思路是将中文的数字映射到一个由中文数字组成的日期的字符串中的「天」的部分，然后再用 word 的 <code>\@</code> 设置数字的显示方式，变相转换为阿拉伯数字</li>
<li>这个方法适用于<strong>图、表、公式等任何底层实现是 StyleRef 的编号</strong></li>
</ol>
<p>此时会有一个问题，「ListNum」就不会有这个问题了吗？默认的答案是「会」，但是可以通过调整多级列表格式中的「正规化编号」立刻解决这个问题。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-11.png" alt=""></p>
<h3 id="图、表编号"><a href="#图、表编号" class="headerlink" title="图、表编号"></a>图、表编号</h3><p>基础的插入图表编号的方法就是「引用」-「题注」-「插入题注」，自己可以自定义题注的标题。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-12.png" alt=""></p>
<p>而如果遇到了刚才提到的一级标题的问题，只需要按照上面的方案更改即可。</p>
<h3 id="交叉引用"><a href="#交叉引用" class="headerlink" title="交叉引用"></a>交叉引用</h3><p>插入交叉的基础方法是「引用」-「题注」-「交叉引用」，这里的「引用类型」有很多，其中「编号项」显示的内容包括「标题」。「标题」指的是链接到 word 自带样式「标题1-9」的多级列表，不包括基于「标题1-9」的其他样式（比如附录这里就没有）。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-13.png" alt=""></p>
<p>交叉引用的「引用内容」也有很多选择，具体的可以自己尝试，这里只说一小部分：</p>
<p>对于使用 <code>SEQ</code> 的项，含有三个部分「标签」「编号」和「题注文字」，其中 <code>SEQ</code> 域代码之前的所有内容算作「标签」，<code>SEQ</code> 本身是「编号」，<code>SEQ</code> 之后到本行结束都算作「题注文字」。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-14.png" alt=""></p>
<p>这就会导致奇怪的问题产生，比如在使用 StyleRef 和 SEQ 给公式编号时，如果(编号前面的)公式不是一个对象，而是一句文字，那么引用时就会这样：</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-15.png" alt=""></p>
<blockquote>
<p>刚发现在 365 的 Word 里，前面的公式对象在交叉引用时也会被导入进去，人都麻了<br>令人窒息，这样更建议使用 ListNum 给公式编号</p>
</blockquote>
<h2 id="页眉页脚与域代码"><a href="#页眉页脚与域代码" class="headerlink" title="页眉页脚与域代码"></a>页眉页脚与域代码</h2><p>页眉页脚的格式设置比较简单，手动更改「页眉」「页脚」的样式也可，直接在里面调也可。</p>
<h3 id="页脚：不同形式的编号"><a href="#页脚：不同形式的编号" class="headerlink" title="页脚：不同形式的编号"></a>页脚：不同形式的编号</h3><p>设置页脚页码的格式在打开页脚后「设计」-「页眉和页脚」-「页码」-「设置页码格式」</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-16.png" alt=""></p>
<p>这里重点说的是「页码编号」和「分节符」的关系，在插入分节符后，下一页的页眉页脚格式就「可以」和前一节不一样（指可以一样），这样就可以很方便的调整编号了。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-17.png" alt=""></p>
<h3 id="页眉：奇偶页与章节名"><a href="#页眉：奇偶页与章节名" class="headerlink" title="页眉：奇偶页与章节名"></a>页眉：奇偶页与章节名</h3><p>设置页眉的奇偶页不同很好办：</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-18.png" alt=""></p>
<p>问题在于，如果要求奇数页的页眉和当前章节（一级标题）的内容同步呢？</p>
<p>第一个想法是插入分节符，很好，但是不够自动化，虽然可以设置一级标题的段落格式为「段前分页」，但是还是要手动输入每一章节</p>
<p>比较方便的解决方法是使用「域代码」</p>
<blockquote>
<p>其实刚才的页码也是域代码，可以自己去看</p>
</blockquote>
<p>这里使用的还是 StyleRef，有两种实现方式，一种是自己手动输入域代码，一种是自动插入域代码，都可以使用。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-19.png" alt=""></p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-20.png" alt=""></p>
<p><strong>这里的要点在与需要插入两次域代码，一次插入编号，一次插入文字</strong></p>
<p>那再进一步，有一些章节是没有编号的，那这样引用页眉会怎么样？答案是编号那里会变成 0，这可不行。</p>
<p>那就需要添加一些域代码了，那简单想一下，这个域代码应该是要判断编号是不是 0，是则输出一个空字符串，再和标题名拼接到一起。</p>
<p>最终写出来的是这样的：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">{ QUOTE { IF { STYLEREF "标题 1" \n }="0" "" { STYLEREF "标题 1" \n } } { STYLEREF "标题 1" }}</span><br></pre></td></tr></table></figure></p>
<p>使用 <code>QUOTE</code> 拼接字符串，使用 <code>IF</code> 判断是否为 0，使用 <code>STYLEREF</code> 输出编号和名称。</p>
<h2 id="中英图表目录与域代码"><a href="#中英图表目录与域代码" class="headerlink" title="中英图表目录与域代码"></a>中英图表目录与域代码</h2><p>基本的插入目录在「引用」-「目录」-「目录」里。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-21.png" alt=""></p>
<p>插入图表目录在「引用」-「题注」-「插入表目录」里，这里的实质是索引了某一指定的「SEQ」对象。</p>
<h3 id="目录的调整"><a href="#目录的调整" class="headerlink" title="目录的调整"></a>目录的调整</h3><p>在「引用」-「目录」-「目录」-「自定义目录」里可以对目录进一步调整，比如「显示级别」可以调整深度，前导符等等，调到自己喜欢就好。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-22.png" alt=""></p>
<h3 id="多重目录的解决办法"><a href="#多重目录的解决办法" class="headerlink" title="多重目录的解决办法"></a>多重目录的解决办法</h3><h4 id="复制后手动改"><a href="#复制后手动改" class="headerlink" title="复制后手动改"></a>复制后手动改</h4><p>当要求比如中文和英文目录时，最简单的方法是插入中文目录，然后复制出一个英文目录，然后把每一级的标题改成自己想要的。但是这种方法的缺点就是不能适应目录结构的变化，在目录固定后作为最后一步还是可以接受的。</p>
<h4 id="TC-域代码"><a href="#TC-域代码" class="headerlink" title="TC 域代码"></a>TC 域代码</h4><p>手动复制还是不够优雅和便捷，因此使用域代码 <code>TC</code> 来解决。</p>
<p>假设除了中文目录还需要一个英文目录，那么需要手动在需要插入目录的<strong>每一个</strong>标题的名字后添加一段域代码 <code>{ TC "" \l X }</code>，其中，引号内放置需要显示在目录中的文字(不包括页码)，<code>X</code> 代表这条记录的目录级别(1/2/3)。</p>
<p>需要注意的是，<strong><code>TC</code> 域代码在使用word编辑时，不会被隐藏，但是打印/导出pdf时不会显示</strong>，如果对此介意的就不要用，或者把文字设成和背景色一样。</p>
<blockquote>
<p>但凡需要不止两个目录的文件，最后哪有交 .docx 的文件的，不是打印就是交 .pdf，这根本就不是事</p>
</blockquote>
<p>在对应修改的目录修改后，在「目录」-「自定义目录」-「选项」里，把前两个勾去掉，把「目录项字段」勾上，就可以插入新的英文目录了。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-23.png" alt=""></p>
<h4 id="TC-和-TOC"><a href="#TC-和-TOC" class="headerlink" title="TC 和 TOC"></a>TC 和 TOC</h4><p>但是新的问题出现了，如果需要不止两个目录呢，万一要整四个目录呢？(不包括图表目录)，这就要对 <code>TC</code> 域代码稍做一些调整了，此时使用的域代码应该是 <code>{ TC "" \l X \f Y}</code>，新增的 <code>\f Y</code> 制定了这一条目录项的记录是属于 <code>Y</code> 目录的，这样就可以定义多个新的目录了。</p>
<p>但是这时候，直接通过「自定义目录」插入的目录不能识别 <code>\f Y</code> 了，需要通过「插入域代码」或者手动输入域代码来插入目录了。好在这个域代码很简单：<code>{ TOC \f Y }</code>，这里的 <code>Y</code> 和之前定义的一致就好了。</p>
<p>但是又有新的问题了，这个目录的样式不好调整了，所以如果需要进一步调整这个目录的格式，需要自己研究一下 <code>TOC</code> 域代码的相关开关了。这里贴了一张表，也可以自己在「插入域代码」里调整尝试。</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="template-variable">{ TOC [Switches ] }</span></span><br><span class="line"><span class="xml">建立一个目录。TOC 域根据标题级别、指定样式或由 TC（目录项）域指定的项目来收集目录项。在使用“插入”菜单中的“索引和目录”命令时，Word 将插入 TOC 域。</span></span><br></pre></td></tr></table></figure>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">开关</th>
<th style="text-align:center">描述</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">\a</td>
<td style="text-align:center">标识符</td>
<td>列出用“插入”菜单中的“题注”命令加上题注的项目，但省略题注标签和编号。这里的标识符与题注标签相对应。例如，虽然第 12 页的题注是“Figure 8: Mercury”，但是域{ TOC \a figures } 将题注显示为“Mercury…………12”。 使用 \c 开关可创建一个带有标签和编号的题注目录。</td>
</tr>
<tr>
<td style="text-align:center">\b</td>
<td style="text-align:center">书签名</td>
<td>只收集用指定书签标记的那部分文档中的目录项。</td>
</tr>
<tr>
<td style="text-align:center">\c</td>
<td style="text-align:center">SEQ 标识符</td>
<td>列出表格、图表或其他用 SEQ（序号）域编号的项目。Word 用 SEQ 域给各项编号，这些项用“插入”菜单中的“题注”命令设定了题注。与题注标签相对应的 SEQ 标识符必须与SEQ 域中的标识符一致。例如，{ TOC \c tables } 列出所有编号的表格。</td>
</tr>
<tr>
<td style="text-align:center">\f</td>
<td style="text-align:center">项标识符</td>
<td>基于 TC 域建立目录。如果指定了项标识符，那么只根据带同样标识符（通常为一字母）的 TC 域建立该目录。例如，域 { TOC \f t } 根据象 { TC “Entry Text” \f t } 这样的 TC 域建立目录。</td>
</tr>
<tr>
<td style="text-align:center">\h</td>
<td style="text-align:center">超链接</td>
<td>将目录项作为超链接插入。</td>
</tr>
<tr>
<td style="text-align:center">\l</td>
<td style="text-align:center">级别</td>
<td>建立的目录中只包含指定为特定级别的 TC 域。例如，域 { TOC \l 1-4 } 根据给指定级别为 1 到 4 的 TC 域建立一张目录。跳过由 TC 域指定为较低级别的目录项。</td>
</tr>
<tr>
<td style="text-align:center">\n</td>
<td style="text-align:center">级别</td>
<td>在目录中省略页码。除非指定目录项的级别范围，否则所有级别的页码都将省略。例如：{ TOC \n 3-4 } 省略级别 3 和级别 4 的页码。如需要页码可删除此开关。</td>
</tr>
<tr>
<td style="text-align:center">\o</td>
<td style="text-align:center">标题</td>
<td>根据具有内置标题样式的段落建立目录。例如，域 { TOC \o “1-3” } 只列出具有内置样式标题 1 到标题 3 的标题。如果没有指定标题范围，那么列出文档中所用的全部标题级别。表示范围的数字要用引号括起来。</td>
</tr>
<tr>
<td style="text-align:center">\p</td>
<td style="text-align:center">分隔符</td>
<td>指定目录项和页码之间的分隔符。例如，域 { TOC \p “—-“ } 显示的结果为“Selecting Text—-53”。默认设置为以句点作为前导符的制表符。指定的分隔符最多为 5 个字符而且必须用引号括起来。</td>
</tr>
<tr>
<td style="text-align:center">\s</td>
<td style="text-align:center">标识符</td>
<td>在页码前加入如章节号之类的号码。章节或其他项必须用 SEQ 域编号。Identifier 必须与 SEQ 域中的标识符相匹配。例如，如果在每章的标题之前插入 { SEQ chapter }，那么 { TOC \o “1-3” \s chapter } 将页码显示为 2-14 ，这里“2”是章节号。</td>
</tr>
<tr>
<td style="text-align:center">\d</td>
<td style="text-align:center">分隔符</td>
<td>与 \s 开关连用时，指定用于分隔序号和页码的字符。这些分隔符要括在引号中。如果没有指定 \d 开关，那么 Word 默认分隔符为一个连字符 (-)。在由 { TOC \o “1-3” \s chapter \d “:” } 产生的目录中，将使用冒号（:）分隔章节号和页码，例如，“2:14”。</td>
</tr>
<tr>
<td style="text-align:center">\t</td>
<td style="text-align:center">样式,级别,样式,级别,…</td>
<td>根据样式不同于内置标题样式的段落建立目录。例如，{ TOC \t “chaptertitle,1, chapterhead,2” } 根据样式“chapertitle”和“chapterhead”设置的段落建立目录。每个样式名之后的数字表示对应于该样式的目录项在目录中的层次。 连用 \o 开关和 \t 开关，可建立由内置标题样式或其他样式设置的目录。</td>
</tr>
<tr>
<td style="text-align:center">\w</td>
<td style="text-align:center"></td>
<td>在目录中保留制表符项。</td>
</tr>
<tr>
<td style="text-align:center">\x</td>
<td style="text-align:center"></td>
<td>在目录中保留换行符。</td>
</tr>
<tr>
<td style="text-align:center">\z</td>
<td style="text-align:center"></td>
<td>在 Web 版式视图中隐藏制表和页码。</td>
</tr>
</tbody>
</table>
</div>
<h2 id="自动图文集"><a href="#自动图文集" class="headerlink" title="自动图文集"></a>自动图文集</h2><p>当看到这里的时候，整个 word 的功能已经了解了 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.186ex" xmlns="http://www.w3.org/2000/svg" width="5.907ex" height="1.882ex" role="img" focusable="false" viewBox="0 -750 2611 832"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="matrix(1 0 0 -1 0 0)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500, 0)"></path></g><g data-mml-node="mi" transform="translate(1000, 0)"><path data-c="25" d="M465 605Q428 605 394 614T340 632T319 641Q332 608 332 548Q332 458 293 403T202 347Q145 347 101 402T56 548Q56 637 101 693T202 750Q241 750 272 719Q359 642 464 642Q580 642 650 732Q662 748 668 749Q670 750 673 750Q682 750 688 743T693 726Q178 -47 170 -52Q166 -56 160 -56Q147 -56 142 -45Q137 -36 142 -27Q143 -24 363 304Q469 462 525 546T581 630Q528 605 465 605ZM207 385Q235 385 263 427T292 548Q292 617 267 664T200 712Q193 712 186 709T167 698T147 668T134 615Q132 595 132 548V527Q132 436 165 403Q183 385 203 385H207ZM500 146Q500 234 544 290T647 347Q699 347 737 292T776 146T737 0T646 -56Q590 -56 545 0T500 146ZM651 -18Q679 -18 707 24T736 146Q736 215 711 262T644 309Q637 309 630 306T611 295T591 265T578 212Q577 200 577 146V124Q577 -18 647 -18H651Z"></path></g><g data-mml-node="mo" transform="translate(1833, 0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g></g></g></svg></mjx-container> 了，如果都基本学会了，可以算得上是「入门」word了，之后的进阶包括对「域代码」「OLE」「.dotm」等方面进行深一步的学习。</p>
<p>回顾之前的内容，很多地方还是不够方便，比如插入一个公式的话，首先要插入公式，还要插入编号，还要插入制表位，还要刷制表位和编号的样式，实在是有点麻烦。</p>
<p>因此，「自动图文集」就可以进一步的方便大家的使用，它将一些文档部件保存在库里，使用时只要加载一个部件，然后修改其中的内容就好了。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/01-case1-auto.gif" alt=""></p>
<p>为了适应案例的要求，这里大家可以使用以下自动图文集</p>
<ul>
<li><p>行间公式组件</p>
<ol>
<li>设置好制表位</li>
<li>保存好公式样式</li>
<li>插入一个公式对象(MathType或者自带或者AxMath均可)</li>
<li>插入使用 ListNum 的公式编号</li>
<li>调整公式编号的上下位置</li>
<li>使用时更改公式内容即可</li>
</ol>
</li>
<li><p>单行图片组件</p>
<ol>
<li>插入图片并做好比例、裁剪等调整</li>
<li>插入图表标题</li>
<li>设置保存好样式</li>
<li>使用时使用 word 的「替换图片」然后更改题注即可</li>
</ol>
</li>
<li><p>并排图片组件</p>
<ol>
<li>类似单行图片的 1-3 步</li>
<li>设置双栏</li>
<li>设置总图片标题</li>
<li>调整分节符位置</li>
<li>使用方法和单行图片一致</li>
</ol>
</li>
<li><p>表格组件</p>
<ol>
<li>设置保存好表格样式</li>
<li>插入表格，调整宽度</li>
</ol>
</li>
<li><p>英文目录域代码</p>
<ol>
<li>只保存 <code>TC</code> 代码项</li>
<li>使用时更改文字和目录级别</li>
</ol>
</li>
</ul>
<h2 id="Word-的文件格式"><a href="#Word-的文件格式" class="headerlink" title="Word 的文件格式"></a>Word 的文件格式</h2><p>常见的 Word 文件格式包括 .doc .docx，这都是某个文件，而 .dot .dotm 则是一个「模板」，这里「模板」的意思是，当直接双击它打开的时候，实际上新建了一个以这个模板为基础的文档，所做的修改都需要保存到另一个文件，不会对模板本身进行修改。</p>
<p>如果想要修改模板本身，需要先打开 Word，在通过「打开」打开模板文件修改。</p>
<p>模板的好处在与可以放入自己的文档部件（如自动图文集），在保存自动图文集时，不选择 Normal.dotm 而是选择自己模板的名称即可。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>当需要放置源码时，可以使用网页工具，比如下面的网站，粘贴后，调整样式，再复制粘贴回来即可</p>
<p><a href="https://pygments.org/demo/#try">https://pygments.org/demo/#try</a></p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><div id="refer-anchor-1"></div>

<ul>
<li>[1] <a href="https://zhuanlan.zhihu.com/p/21272302">文档网格</a></li>
</ul>
<div id="refer-anchor-2"></div>

<ul>
<li>[2] <a href="https://www.zhihu.com/question/26397264">文档网格和行距</a></li>
</ul>
<div id="refer-anchor-3"></div>

<ul>
<li>[3] <a href="https://zhuanlan.zhihu.com/p/22436463">域代码和编号</a></li>
</ul>
<div id="refer-anchor-4"></div>

<ul>
<li>[4] <a href="https://github.com/NickeManarin/ScreenToGif">录屏软件 ScreenToGif</a></li>
</ul>
]]></content>
      <categories>
        <category>M$Office</category>
      </categories>
      <tags>
        <tag>Office</tag>
      </tags>
  </entry>
  <entry>
    <title>Office：2-PowerPoint</title>
    <url>/zh-cn/posts/5041d193-4461-11ec-a782-373b176d0418/</url>
    <content><![CDATA[<p>微软 Office 系列软件使用方法系列第三篇：PowerPoint 的使用</p>
<a id="more"></a>
<p>[TOC]</p>
<h1 id="使用-PowerPoint-的注意事项"><a href="#使用-PowerPoint-的注意事项" class="headerlink" title="使用 PowerPoint 的注意事项"></a>使用 PowerPoint 的注意事项</h1><ol>
<li>PowerPoint, Slide, Keynote 和 .ppt, slides, beamer 是有区别的，根据语境选择具体用哪个词</li>
<li>PowerPoint 不止是一个制作演示文稿的软件</li>
<li>在各个页面重复出现的元素，请尽量放到母版中，而不是复制到每一页</li>
<li>PowerPoint 的名字说的很清楚了，好的演示文稿，既要有 Power 也要有 Point，不要顾此失彼</li>
<li>在开始制作前先确定清楚要求如页面比例、字体等</li>
</ol>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="文本框"><a href="#文本框" class="headerlink" title="文本框"></a>文本框</h2><p>PowerPoint 里的文本框使用的频次是非常高的，文本框可以分成「文字」部分与「形状」部分，其中「形状」的设置与其他形状并无区别，但文字部分还是有不少可以调整的</p>
<h3 id="文字的边距与文本框开关"><a href="#文字的边距与文本框开关" class="headerlink" title="文字的边距与文本框开关"></a>文字的边距与文本框开关</h3><p>PowerPoint 里的文本框使用的频次是非常高的，但是在大部分情况下，我见到调整下面这些设置的人比较少。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-elements-textbox.png" alt=""></p>
<p>这些设置还是比较有用的，其中四个「边距」的值可以调整文本段落和文本框边框的距离，在对文本框大小与字体字号有限制，字数较多的情况可能会较有用。</p>
<p>同时这里的「溢出缩排」、「自动调整」、「自动换行」都是一些比较有用的开关，可以自己尝试使用。</p>
<p>需要注意的是，大概这个窗格需要较多的操作，有插件直接减去了这一麻烦，具体请参阅「插件」一节。</p>
<h3 id="文字的段落设置"><a href="#文字的段落设置" class="headerlink" title="文字的段落设置"></a>文字的段落设置</h3><p>在文字为中文时要特别注意，为了符合中文的使用要求(标点符号不出现在行首)，务必要对文字设置以下的段落格式</p>
<blockquote>
<p>我认为这是基本的排版素养</p>
</blockquote>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-elements-textbox2.png" alt=""></p>
<p>但是对于每一个文本框都设置一遍太麻烦了，所以「默认形状」减去了这一麻烦，具体见「案例」-「设置默认形状」。</p>
<p>同时，PowerPoint 的「段落」也能设置制表位，具体使用场景可参考 Word 篇中「制表位」一节。</p>
<h2 id="普通视图与基本元素的操作"><a href="#普通视图与基本元素的操作" class="headerlink" title="普通视图与基本元素的操作"></a>普通视图与基本元素的操作</h2><h3 id="标尺、参考线和网格"><a href="#标尺、参考线和网格" class="headerlink" title="标尺、参考线和网格"></a>标尺、参考线和网格</h3><p>在「视图」-「显示」里能找到这些设置，其中参考线是比较关键的一项。</p>
<p>首先，参考线是可以改变颜色的，在上面右击就行了。在不改变参考线默认颜色的情况下，普通视图里添加的参考线和母版里添加的参考线是不一样的，普通的参考线可以拖动/修改/用来对齐，而母版添加的只能用来对齐，不能被修改。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-elements-guideline.png" alt=""><br>图里灰色的就是普通视图添加的参考线，橙色的是母版添加的。</p>
<p>同时，除了在参考线上右键添加参考线，按住 <code>Ctrl</code> 拖动参考线，可以复制一条现有的参考线</p>
<blockquote>
<p>按住 <code>Ctrl</code> 拖动元素可以复制选中的元素在 Windows 和 Office 中都是很基础常见的操作</p>
</blockquote>
<h3 id="元素的操作、排列与对齐"><a href="#元素的操作、排列与对齐" class="headerlink" title="元素的操作、排列与对齐"></a>元素的操作、排列与对齐</h3><p>现在有两个方形，要把它们对齐，应该怎么做？用手拖动其中一个直到显示出对齐的线？如果页面有很多元素呢，怎么能确定 PowerPoint 自动吸附的那条线是你想要的？</p>
<blockquote>
<p>我见过太多对齐页面元素用手拖或者用方向键一点一点挪的了，看得实在让人难受</p>
</blockquote>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-align.png" alt=""></p>
<p>请务必了解 PowerPoint 自带了「排列」-「对齐」功能，不用再费力气去分布/对齐元素了。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-align2.png" alt=""></p>
<p>现在要平移一个元素，难道要用鼠标小心翼翼的按着参考线移动吗？请在移动元素时按下 <code>Shift</code>，确保水平/垂直移动。</p>
<p>现在要微调一个元素的位置，但是总出现参考线干扰对齐怎么办？用方向键吗？可以，但不够快，请按下 <code>Alt</code> 键再移动元素，就可以非常顺滑的调整元素的位置了。</p>
<p>现在要复制一个元素，将复制后的元素放在当前元素的上方(不是上层)，难道要 <code>Ctrl-C/V</code> 再对齐吗？请按下 <code>Ctrl</code> 与 <code>Shift</code>再拖动元素即可。</p>
<p>现在要复制一个元素，将复制后的元素放在当前元素的上方，还要微调……，不套娃了，按 <code>Ctrl-Shift-Alt</code>，这三个快捷键可随意组合。<strong>这三个功能键与方向键也可搭配使用，如 <code>Alt</code>+方向键旋转元素等。</strong></p>
<p>这里不放动图了，请务必自己操作实验。</p>
<h3 id="形状：编辑顶点"><a href="#形状：编辑顶点" class="headerlink" title="形状：编辑顶点"></a>形状：编辑顶点</h3><p>形状可以通过「编辑顶点」进一步操作点、线。不过多数情况下用到这一功能的机会较少，有兴趣可以自行学习。</p>
<p><a href="https://www.zcool.com.cn/work/ZNDgzNDIwMDA=.html">使用编辑顶点在 PowerPoint 里画画</a></p>
<h3 id="布尔运算"><a href="#布尔运算" class="headerlink" title="布尔运算"></a>布尔运算</h3><p>具体「布尔运算」的定义可以自行学习，这里只说明一点，布尔运算要对封闭的形状使用，比如线/箭头是不能进行布尔运算的，要通过编辑顶点或者其他手段封闭起来才可以继续。</p>
<p>使用布尔运算可以「拆分文字」到各个部件，做出比较有文化的效果，比如这里：</p>
<p><a href="https://www.jianshu.com/p/3da2eb9e3d5c">https://www.jianshu.com/p/3da2eb9e3d5c</a></p>
<p>或者做出比较炫的「文字爆炸」动画：</p>
<p><a href="https://www.duote.com/tech/ppt/111120.html">https://www.duote.com/tech/ppt/111120.html</a></p>
<p>还可以和视频/图片联合操作，做出不一样的填充效果。</p>
<h2 id="图表"><a href="#图表" class="headerlink" title="图表"></a>图表</h2><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><p>如果想要让图片变透明，除了用带 Alpha 通道的图，也可以使用 PowerPoint 的「设置透明色」功能，<strong>注意不是「删除背景」，是「格式」-「调整」-「颜色」-「设置透明色」</strong> </p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-figtbl.png" alt=""></p>
<p>当然删除背景也可以，只是完全没有设置透明色来的快。</p>
<h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><p>PowerPoint 自带的表格功能有限，搭配 Excel 可以有更多变化，比如条件格式，但是通过「嵌入对象」或者「从电子表格插入」，都不便利，最便利的还是在 Excel 中复制表格，然后在 PowerPoint 中「粘贴为图片」</p>
<h3 id="图表的拆分与进一步美化"><a href="#图表的拆分与进一步美化" class="headerlink" title="图表的拆分与进一步美化"></a>图表的拆分与进一步美化</h3><p>PowerPoint 插入的图表是一个对象，但是通过「选择性粘贴」可以将其粘贴为「增强型图元文件」，而后通过取消组合，得到其中的每个元素，再进行进一步操作。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-figtbl-sp.gif" alt=""></p>
<p>这里最终得到了三条曲线的形状，就可以进一步美化了，比如使用布尔运算得到每条曲线和坐标轴间的区域，通过渐变/形状填充使其更美观，或者着重对某条线进行设置。</p>
<h2 id="流媒体"><a href="#流媒体" class="headerlink" title="流媒体"></a>流媒体</h2><p>这里没什么好说的，音频可以设置「跨页播放」、「隐藏图标」或者裁剪音频淡入淡出等</p>
<p>视频也一样，可以和形状/文字布尔运算，做酷炫的效果</p>
<h2 id="其他对象"><a href="#其他对象" class="headerlink" title="其他对象"></a>其他对象</h2><h3 id="3D-模型与-SmartArt"><a href="#3D-模型与-SmartArt" class="headerlink" title="3D 模型与 SmartArt"></a>3D 模型与 SmartArt</h3><p>Office 从 2019 之后都增加了对 3D 模型的支持，具体制作 3D 模型除了专业的工具，Win 10 自带了「画图 3D」可以比较快的制作</p>
<p>SmartArt 可以当成低配的 Visio 用，但是默认的样子太丑了。</p>
<h3 id="缩放定位"><a href="#缩放定位" class="headerlink" title="缩放定位"></a>缩放定位</h3><p>用于快速跳转，搭配还行的效果</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-elements-scale.png" alt=""></p>
<h2 id="背景、母版与模板"><a href="#背景、母版与模板" class="headerlink" title="背景、母版与模板"></a>背景、母版与模板</h2><p>使用软件的重要功能就是免除重复的工作：包括重复设置格式、重复点开多级菜单找到想要的按钮等等。这一节的内容和这个比较相关。</p>
<h3 id="设置背景"><a href="#设置背景" class="headerlink" title="设置背景"></a>设置背景</h3><p>设置背景的基本功能很简单，就是填充背景为纯色/渐变/图片纹理等，但是此处有一个容易被忽视的功能：隐藏背景图形。</p>
<p>隐藏背景图形是指隐藏在「母版」中设置的不可编辑的对象(包括图片/文字/表格等，但不包括占位符)。它的用处在于使用幻灯片模板时，某一张的内容需要对母版做一些修改，可以通过此功能隐藏母版的内容重新插入。</p>
<h3 id="默认形状"><a href="#默认形状" class="headerlink" title="默认形状"></a>默认形状</h3><p>默认情况下打开 PowerPoint，插入的形状都是离谱的蓝色边框，文本框字号字体也有点问题，之后插入的形状都要重设形状，默认形状能解决这个问题。</p>
<blockquote>
<p>这里会出现的分化：1. 每插入一个都重新设置一次形状；2. 使用 Ctrl-c/v 复制/粘贴形状；3. 使用 Ctrl 拖动复制对象 4. 使用 Ctrl-Shift-c/v 复制/粘贴格式 5. 设置默认形状<br>用 1. 的情况大都是每次设置的格式不一样；用 2. 不用 3. 一般是跨页复制；用 3. 不用 4. 一般是内容也要复制；用 5. 的情况主要局限在设置「默认」</p>
</blockquote>
<p>「默认形状」是笼统的称呼，是包括「默认文本框」的。</p>
<p>默认形状是「主题」的一个子内容，因此设置了默认形状，可以保存主题文件并设置为默认，之后都默认使用。</p>
<h3 id="母版"><a href="#母版" class="headerlink" title="母版"></a>母版</h3><p>母版是很重要的一个概念，也是我作为一个初学者认为离自己非常远的设置之一，但实际上它很重要。</p>
<h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><p>在任一个幻灯片文件中，都至少有一个且至少有一个被应用了的母版，只不过一般没有人去改。</p>
<p>母版有三个：幻灯片母版、讲义母版、备注母版。其中讲义和备注主要是在打印时应用，此处不多叙述。</p>
<p>通常情况下，切换到母版的方式是「视图」-「母版视图」-「幻灯片母版」，也可以通过按住 <code>Shift</code> 键点击页面最下方的「自定义状态栏」-「普通视图」快速切换。</p>
<p>切换到母版视图后，左侧就显示了整个幻灯片文件里的所有母版。它由至少一个类似于「树」的结构组成，其中根节点就是「母版」，而它的子项就是「版式」。母版和子项都可以设置名字，也可以被删除，但是一个幻灯片文件至少要有一个母版和版式。</p>
<p><strong>母版的重要功能就是将要设置为相同格式的页面的重复的部分抽出来，做成背景。可以类比与面向对象编程的「类」，而每一个应用了母版的幻灯片就是一个实例。</strong></p>
<blockquote>
<p>至少应用了一个类和版式，有点像 Java / C#</p>
</blockquote>
<p>同时，母版里设置的东西，除了占位符之外，都是不能在普通视图下更改的（包括文字/图表/形状/参考线等等）。</p>
<p>而占位符则顾名思义，是为内容预留的。</p>
<h4 id="设置母版版式"><a href="#设置母版版式" class="headerlink" title="设置母版版式"></a>设置母版版式</h4><p>在「幻灯片母版」-「母版版式」-「母版版式」可以设置，对于母版来说，只有五类<strong>占位符</strong>可选，打勾则出现，具体大小可调，也可复制。而母版里所有<strong>非占位符</strong>的内容，在所有的版式里都会出现，母版设置的「切换效果」，会应用到其所有的版式里。</p>
<blockquote>
<p>就是基类呗，老 OOP 了</p>
</blockquote>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-master.png" alt=""></p>
<h4 id="设置版式"><a href="#设置版式" class="headerlink" title="设置版式"></a>设置版式</h4><p>版式的设置就可以随意了一些，可选的占位符也多了，也可以重命名版式，比如什么「封面」「正文」「目录」之类的。</p>
<h4 id="幻灯片编号：从母版到正文"><a href="#幻灯片编号：从母版到正文" class="headerlink" title="幻灯片编号：从母版到正文"></a>幻灯片编号：从母版到正文</h4><p>这里说一个比较特别的东西，就是幻灯片编号，也是比较复杂的。如果想要在幻灯片里显示“可以自动变化的且插入新的一页自带的且可以手动修改样式的”编号，不是简单地在普通视图里「插入编号」就行的。它需要满足三个条件：</p>
<ol>
<li>在当前的幻灯片应用的「母版」的「母版版式」里设置了「幻灯片编号一项」，此时「母版」右下角会多出一个「&lt;#&gt;」的文本框，也就是幻灯片编号。这个文本框/占位符可以被复制，但是复制产生的对象就会变成文本框而不是占位符（版式里不可调整）</li>
<li>在当前的幻灯片应用的「版式」里，有或者通过「插入」-「页眉和页脚」插入了编号占位符</li>
<li>在当前幻灯片有或者通过「插入」-「页眉和页脚」插入了幻灯片编号</li>
</ol>
<p>这三个条件都要满足，才能有上述的幻灯片编号产生。第一步很关键，大部分人只考虑了 2, 3 步，没有第一步可能会导致在「版式」里点了插入编号，但是没有编号占位符出现。</p>
<h3 id="配置保存主题、颜色、字体"><a href="#配置保存主题、颜色、字体" class="headerlink" title="配置保存主题、颜色、字体"></a>配置保存主题、颜色、字体</h3><p>可以认为，PowerPoint 的「主题」就是一个「母版」，在普通视图应用了一个「主题」，则是插入/替换了一个母版。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-master04.png" alt=""></p>
<p>PowerPoint 可以设置自己的配色（颜色），这样应用了这个母版中的和这个颜色相关的对象都会随着这个变化，可以实现快速切换色彩风格，比如做了一套蓝色的模板，换个颜色就出来黄的/红的了。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-master02.png" alt=""></p>
<p>PowerPoint 也可以设置默认字体，这样当被要求「把所有的黑体换成微软雅黑」的时候，就可以通过这里快速修改主题字体了（前提黑体是主题字体）。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-master03.png" alt=""></p>
<p>而一个 PowerPoint 的主题包括了颜色、字体、默认形状、母版和版式等等，当做了一套还不错的模板后，可以保存成一个「主题」以备后用。</p>
<h2 id="动画与切换"><a href="#动画与切换" class="headerlink" title="动画与切换"></a>动画与切换</h2><p>动画/切换可以说是 PowerPoint 里高手和菜鸟都喜欢的功能了，只不过菜的人胡加动画，喧宾夺主，高手则通过合适的添加提升档次。</p>
<blockquote>
<p>想象一下，一页用帘式的切换，每个元素都是弹跳出现，配上自带喝彩声的 PowerPoint，瞬间回到以前的课堂了</p>
<p>个人认为动画和切换也是和 PowerPoint 的「使用技能」最不相关而和「审美/设计能力」最相关的功能了</p>
</blockquote>
<h3 id="切换"><a href="#切换" class="headerlink" title="切换"></a>切换</h3><p>切换是应用在每一页和下一页之间，可以理解为视频的转场。</p>
<p>这里主要推荐一下「平滑」这个效果，可以做出来一些「动画」不容易做到的效果，比如形状同时进行颜色、形状、位置的变换。</p>
<h3 id="形状、3D-模型的动画"><a href="#形状、3D-模型的动画" class="headerlink" title="形状、3D 模型的动画"></a>形状、3D 模型的动画</h3><p>形状的动画没什么好说的，可以专门去学习，这里想说一下 3D 模型有更多的动画，比如绕轴旋转等等，适当的时候用 3D 模型的动画可以替代插入视频或者动图。</p>
<h2 id="节、备注与放映"><a href="#节、备注与放映" class="headerlink" title="节、备注与放映"></a>节、备注与放映</h2><h3 id="幻灯片的结构操作"><a href="#幻灯片的结构操作" class="headerlink" title="幻灯片的结构操作"></a>幻灯片的结构操作</h3><p>对于很多页幻灯片，比较好的方法是插入节，但是似乎很多人不会用这个功能。插入节之后可以设置名称、折叠，也可以在「缩放定位」里跳转到节，还可以在「自定义放映」里快速设置放映某一节。</p>
<p>同时，比之备份后「删除」一页「可能用到又可能用不到」的幻灯片，「隐藏」可能是更好的一个选择，此时幻灯片还可以被编辑，但是放映是不会出现。</p>
<h3 id="设置自定义放映"><a href="#设置自定义放映" class="headerlink" title="设置自定义放映"></a>设置自定义放映</h3><p>首先，幻灯片的放映快捷键有 <code>F5</code>(从第一页开始放映)，<code>Shift-F5</code>(从当前页开始放映)，<code>Alt-F5</code>(以演讲者视图放映)，<code>Ctrl-F5</code>(联机演示)，使用快捷键就没必要每次用鼠标点放映了。</p>
<p>其次，每一个文件都可以设置多个「自定义放映」，只放映选定的幻灯片，从而将幻灯片文件转换成了「幻灯片库」，可以从中选取内容放映，避免了「删除所有可能用到但不放映文件」的烦恼。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/02-presentation.png" alt=""></p>
<h3 id="演讲者视图与计时"><a href="#演讲者视图与计时" class="headerlink" title="演讲者视图与计时"></a>演讲者视图与计时</h3><p>在演讲者视图里有「计时」功能，自己练习时可以使用此功能而不用其他设备了。</p>
<h2 id="异地放映与打印"><a href="#异地放映与打印" class="headerlink" title="异地放映与打印"></a>异地放映与打印</h2><p>上面说的很多技巧是对软件版本有要求的，如果要在一个只有 2016 的机器上放映，要提前考虑到兼容性问题。</p>
<p>动画/切换且不提，字体就是一个很重要的问题，不过 Office 都提供了「嵌入字体」的保存选项解决这一问题，记得使用。</p>
<p>同时，还要提前考虑到幻灯片比例的问题，避免做完了然后被告知“刚问了，那边用的是 4:3 的屏幕，把 16:9 改成 4:3”的崩溃局面。</p>
<p>打印也是一个问题，只要记住一点，PowerPoint 做不到的，那就用别的工具做到，比如打印时边距太大，字看不清，边距没法调整，那就生成 pdf 打印，或者调打印机设置。</p>
<p>最后，如果想要幻灯片打开后直接自动放映，只需要保存后，修改后缀名为 .ppsx 即可，不想用了再改回来就好。</p>
<h1 id="案例：制作一个-pptx-格式的幻灯片模板"><a href="#案例：制作一个-pptx-格式的幻灯片模板" class="headerlink" title="案例：制作一个 .pptx 格式的幻灯片模板"></a>案例：制作一个 .pptx 格式的幻灯片模板</h1><p>简单的通过制作一个模板回顾一下内容。</p>
<h2 id="确定要求"><a href="#确定要求" class="headerlink" title="确定要求"></a>确定要求</h2><p>这是最重要的一步，做完了发现和要求不一致就比较尴尬了。</p>
<p>需要确定的要求：放映显示器的比例、使用的字体字号、异地放映机器的 Office 版本、偏好的配色以及其他要求等。</p>
<h2 id="清空母版"><a href="#清空母版" class="headerlink" title="清空母版"></a>清空母版</h2><p>对于 PowerPoint 默认/自带的 主题/母版 都没啥用，先把母版删干净，只留一个母版一个版式。</p>
<h2 id="设置颜色、背景、字体"><a href="#设置颜色、背景、字体" class="headerlink" title="设置颜色、背景、字体"></a>设置颜色、背景、字体</h2><p>选好配色，可以使用在第一篇中提到的「颜色选择」的工具，选择好一系列颜色，然后设置一个自定义颜色。</p>
<p>设置背景填充，用图片最好使用高清晰度的图片</p>
<p>设置好字体的样式</p>
<h2 id="默认形状-1"><a href="#默认形状-1" class="headerlink" title="默认形状"></a>默认形状</h2><p>先插入文本框，设置好段落（比如中文断字）、文字边距、对齐等等，然后设置为默认文本框</p>
<p>插入封闭图形（比如矩形）、开放图形（线条），分别设置边框、填充然后设置为默认形状</p>
<p>对于含有可变内容的形状，比如圆角矩形的圆角大小，或者虚线的线型，可以提前制作好一些，以供复制</p>
<h2 id="母版的版式"><a href="#母版的版式" class="headerlink" title="母版的版式"></a>母版的版式</h2><p>确定需要哪些版式，在每一页设置好占位符和装饰元素即可。</p>
<p>如果要插入页码/编号，记得要在母版版式、版式、正文都设置才可正常显示。</p>
<h1 id="使用插件"><a href="#使用插件" class="headerlink" title="使用插件"></a>使用插件</h1><p>PowerPoint 虽然很强大，但是还是有一些功能不够完美，比如「按照某一条件选择所有元素」，比如「按照绝对单位而不是相对单位设置元件」，比如「统一调整控点」，比如「矩阵/圆形复制元素」，比如「一句话拆成单字」等等。这些都可以通过插件提供的功能实现。</p>
<p>iSlide[<a href="#refer-anchor-1">1</a>]，OneKeyTools[<a href="#refer-anchor-2">2</a>]，小顽简报[<a href="#refer-anchor-3">3</a>]，英豪工具箱(LvyhTools)[<a href="#refer-anchor-4">4</a>]</p>
<blockquote>
<p>排名不分先后</p>
</blockquote>
<p>这里只推荐一个，就是 iSlide 的「设计工具」选项卡，把和形状对齐、分布、图层、文本框边框等功能集成在一个 Panel 里，非常非常方便。</p>
<p>具体插件的使用，可以自己尝试。</p>
<p>比如「补色」「拆分文字」「缩放」等等。</p>
<h1 id="这些都会了，就能做出好的幻灯片了吗？"><a href="#这些都会了，就能做出好的幻灯片了吗？" class="headerlink" title="这些都会了，就能做出好的幻灯片了吗？"></a>这些都会了，就能做出好的幻灯片了吗？</h1><p><strong>答案：不能。这只能帮助解决一些可能需要奇怪问题，以及减少重复工作量。</strong></p>
<p>一个好的幻灯片，又要有 Power 又要有 Point，Point 来自之前的工作/大纲，这一部分没有，只是个花架子；</p>
<p>而 Power，从字体、颜色、图片素材到动画、切换都需要一定的设计能力/审美水平；</p>
<p>进一步地，有了好的幻灯片，演示的排练、语言能力也很重要。</p>
<p>而这篇文章讲的，只是「高效地使用 PowerPoint」而已，其他的能力要么借助工具或专家弥补、要么需要另外学习。</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><div id="refer-anchor-1"></div>

<ul>
<li>[1] <a href="https://en.islide.cc/">iSlide</a></li>
</ul>
<div id="refer-anchor-2"></div>

<ul>
<li>[2] <a href="http://oktools.xyz/">OneKeyTools</a></li>
</ul>
<div id="refer-anchor-3"></div>

<ul>
<li>[3] <a href="https://www.aboutppt.com/sites/8407.html">小顽简报</a></li>
</ul>
<div id="refer-anchor-4"></div>

<ul>
<li>[4] <a href="http://addins.cn/yhtools/">英豪工具箱</a></li>
<li><div id="refer-anchor-5"></div>
</li>
<li><p>[5] <a href="https://github.com/NickeManarin/ScreenToGif">录屏软件 ScreenToGif</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>M$Office</category>
      </categories>
      <tags>
        <tag>Office</tag>
      </tags>
  </entry>
  <entry>
    <title>Office：3-对比 Word/PowerPoint 和具有类似功能的软件</title>
    <url>/zh-cn/posts/5041d190-4461-11ec-a782-373b176d0418/</url>
    <content><![CDATA[<p>微软 Office 系列软件使用方法系列第四篇：Word, PowerPoint 和它们的类似产品（比如 LaTeX）</p>
<a id="more"></a>
<p>这一篇个人观点的内容更多，仅限这一篇不使用 “&gt;” 来引用我的个人观点了。</p>
<h1 id="对比的意义"><a href="#对比的意义" class="headerlink" title="对比的意义"></a>对比的意义</h1><p>在大家都卷的时代，似乎感觉用的软件好一点，就能卷死别人（并不是），而且对比产品能吸引两方粉丝，万一骂起来了，流量更多。</p>
<p>当然，这一篇并不是为了这两个目的，而是帮助使用者更好的认识到软件的优缺点、更好地选择使用哪一个。</p>
<h2 id="基准：优缺点、环境和习惯出发"><a href="#基准：优缺点、环境和习惯出发" class="headerlink" title="基准：优缺点、环境和习惯出发"></a>基准：优缺点、环境和习惯出发</h2><p>互联网上的知名圣战包括「Word vs. LaTeX」「Vim vs. Emacs」「MacOS vs. Linux」，细分的还有「Vim vs. NeoVim」「Linux 发行版的选择」等等，而我似乎都参与过，而我的选择是全都要：</p>
<ol>
<li>用 word 就使用 AxMath 或自带能使用 TeX 语法的公式编辑器，用 LaTeX 就纯 LaTeX；</li>
<li>用 Emacs + Evil，</li>
</ol>
<blockquote>
<p>所以真正的套娃是用 Mac，装 Win2G 然后在 Win 里装 Linux 的虚拟机里用 Emacs 然后用 Evil 编辑 LaTeX 然后用 Pandoc 转成 word 然后用 wps 编辑 word？</p>
</blockquote>
<p>扯远了，之后的对比内容主要从标题的三点出发。优缺点可能通过举例「不能实现」或者「更方便快捷实现」来评价，环境包括物理环境和心理环境。</p>
<h1 id="PowePoint-Visio-Adobe-Ps-Ai-画图"><a href="#PowePoint-Visio-Adobe-Ps-Ai-画图" class="headerlink" title="PowePoint Visio Adobe-Ps/Ai 画图"></a>PowePoint Visio Adobe-Ps/Ai 画图</h1><p>这里主要将 PowerPoint 看作一个画图工具。</p>
<h2 id="PowerPoint-vs-Visio"><a href="#PowerPoint-vs-Visio" class="headerlink" title="PowerPoint vs. Visio"></a>PowerPoint vs. Visio</h2><p>从默认的内容上来说，Visio 完胜，Visio 自带的库的形状文件很多，但是 PowerPoint 完全可以通过素材网站取胜。</p>
<p>从使用的便捷性上来说，PowerPoint 更优秀，包括<strong>安装的容易程度</strong>，插件提供的快速操作（对齐、颜色操作等等）。Visio 的缺点除了安装，还有就是嵌入到 Word 的对象略占地方，以及编辑时必需要安装；但是 PowerPoint 的缺点是页面大小不能无限大，且不能随用随扩（但最大尺寸完全够用）</p>
<h2 id="PowerPoint-vs-Adobe-Ps-Ai"><a href="#PowerPoint-vs-Adobe-Ps-Ai" class="headerlink" title="PowerPoint vs. Adobe-Ps/Ai"></a>PowerPoint vs. Adobe-Ps/Ai</h2><p>这里主要是想说一下，PowerPoint 的设置透明色、图片效果还是很好用的，但是如果要精细的抠图，不要用 PowerPoint 的删除背景，用 Ps。</p>
<h2 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h2><p>画图对我来说最大的用处一个是快速进行低像素图的像素级修改，以及压缩图片大小（真的很好用）</p>
<h1 id="Word-以及-LaTeX"><a href="#Word-以及-LaTeX" class="headerlink" title="Word 以及 LaTeX"></a>Word 以及 LaTeX</h1><p>这个比较有的说，而且在这里不是单纯的比较两个东西本身（指纯 Word 和裸 TeX），包括了与其相关的软件等。</p>
<p>首先讨论几个比较受关注的点：</p>
<h2 id="整体美观"><a href="#整体美观" class="headerlink" title="整体美观"></a>整体美观</h2><p>这个没有什么好比的，因为大家都能换字体，大家都能调样式，大家都能调页面，没法比。</p>
<h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><p>对于 Word 来说，原生的数学公式能力确实不强，但是，通过更换数学公式字体、使用其他公式编辑器插件，也能做到「排版效果上」和使用 LaTeX 排出来的大部分效果一致。但是，LaTeX 同样也有宏包，有一些离奇的效果在 word 里不能通过编码的方式实现（毕竟没有什么是一百个文本框不能解决的），比如分母和分子的约分效果等，比如一些略不常用的符号等。</p>
<p>这里有一些使用差异但不是优劣的区别，包括定界符（TeX {}，word()），快捷键等等。</p>
<p>单纯从数学公式的角度，日常使用（指非专业级别的数学公式使用）上，Word 从易用性略胜一筹。</p>
<h2 id="文档自动化"><a href="#文档自动化" class="headerlink" title="文档自动化"></a>文档自动化</h2><p>这里主要的讨论点在与「自动引用」「交叉引用」「目录」「页眉页脚」「图表编号」等等。</p>
<p>可以简单地说，认为 LaTeX 在自动化上比 Word 略胜一筹（指可以通过编码实现），因为认为 Word 做不到或者做的不够好的，都是不会用域代码或者不会编程的。要计数器可以用 SEQ，要目录项可以用 TC，要公式自动编号可以用 ListNum，要邮件合并写个 Shell 就完事了。</p>
<p>TeX 因为是文本文件，因此很多其他工具可以参与，实现更高层的自动化，但 Word 也有宏。学会 Shell 和学会 VB 差不多（我觉得）</p>
<h2 id="审阅与版本管理"><a href="#审阅与版本管理" class="headerlink" title="审阅与版本管理"></a>审阅与版本管理</h2><p>有许多观点认为 LaTeX 在审阅/批注功能上不如 Word，只能说这种观点在对比 .doc 和 .tex 时是对的，但是 .tex 注定要生成 .pdf（不是绝对的），那只要比较 .pdf 和 .doc 就好了。由此还有人认为 pdf 批注不如 word，我只能说那是没真正的用过 pdf 工具。</p>
<p>Word 的审阅功能还兼有版本管理的功能，而 TeX 完全可以通过版本管理工具（Git，SVN）实现，最终实现的效果是一致的。</p>
<h2 id="我不懂的部分"><a href="#我不懂的部分" class="headerlink" title="我不懂的部分"></a>我不懂的部分</h2><p>这里我完全不懂，也不胡说，感兴趣的可以自己比较。</p>
<p>断字、竖排、字体管理</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果是普通的使用（大部分情况下），Word 在普及程度和安装便利性上完胜 LaTeX，毕竟很多人在安装 TeX 上就被卡住了。</p>
<p>可以说，如果涉及到大量或复杂公式的排版，或者非要用 Git 进行版本管理，或者不能用 Word 且不想用 WPS，或者不提供 Word模板，或者宁愿学 TeX 语法也不学 Word，没有什么情况是非要用 TeX 而不用 Word 的。</p>
<p>大部分情况下，喊的声音最大的一般都是不怎么会用的。</p>
]]></content>
      <categories>
        <category>M$Office</category>
      </categories>
      <tags>
        <tag>Office</tag>
      </tags>
  </entry>
  <entry>
    <title>Office：4-Excel</title>
    <url>/zh-cn/posts/5041d192-4461-11ec-a782-373b176d0418/</url>
    <content><![CDATA[<p>微软 Office 系列软件使用方法系列第五篇：Excel 的使用</p>
<a id="more"></a>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>大部分 Excel 的基本功能默认基本会用，这里只说一部分。</p>
<p>建议阅读的同时打开 Excel 试一试。</p>
<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="专有名词"><a href="#专有名词" class="headerlink" title="专有名词"></a>专有名词</h3><p>为了统一名称，对 Excel 中使用的术语/名词做一个简单的统一：</p>
<ol>
<li>一个 .xls/.xlsx 文件称为「工作簿」（Book）</li>
<li>一个工作簿里，下面可以切换的 Tab 称作「工作表」（Sheet）</li>
<li>对图表「移动到新的」工作表产生的「Chart X」也称为工作表</li>
<li>一个工作表里的超级表/数据透视表称为「表」（Table / Pivot Table）</li>
<li>单元格（Cell）</li>
<li>公式也称为函数（Formula/Function）<blockquote>
<p>Excel 里确实两种称呼都有，不知道为什么</p>
</blockquote>
</li>
</ol>
<h3 id="坐标系统"><a href="#坐标系统" class="headerlink" title="坐标系统"></a>坐标系统</h3><p>在一个工作表里，水平方向上使用大写字母编列，最多到 XFD 列，竖直方向上使用数字编行，最多 1048576 行，坐标原点为左上角（A1）。</p>
<p>如果想要使用坐标表示一个选区，即引用一个区域，使用半角冒号连接两个区域，区域可以都是单元格，或都是行/列，如 <code>A1:C3</code>, <code>A:F</code>, <code>1:4</code>。</p>
<p>在 Excel 中，如果复制一个含有引用的区域到新的区域，其中的引用会自动变化（保持被引用单元格到引用单元格的相对距离），但是可以通过在坐标前加入修饰符 <code>$</code> 使其变为绝对引用。如 <code>$A$3:C4</code>。</p>
<h2 id="基本操作与快捷键"><a href="#基本操作与快捷键" class="headerlink" title="基本操作与快捷键"></a>基本操作与快捷键</h2><h3 id="视图操作"><a href="#视图操作" class="headerlink" title="视图操作"></a>视图操作</h3><h4 id="冻结窗格"><a href="#冻结窗格" class="headerlink" title="冻结窗格"></a>冻结窗格</h4><p>当表格的长/宽超出了显示的页面，固定标题可以方便滚动后留存标题信息。</p>
<p>我以前一直不会用「冻结窗格」，只会用「冻结首行/首列」，但是后来发现是我不识字，「冻结窗格」里面说的很清楚，“保持当前的选择，保持行和列可见”，不过这里还是说的不够清除，没说清楚保持什么行、什么列可见。</p>
<p>我之前认为是冻结「选中」的行/列，从来没成功过，后来发现，是冻结「选中的行/列之前的部分」(上方的行和左侧的列)，所以，冻结 <code>A:C</code> 列，那就选中 <code>D</code> 列然后冻结，冻结 <code>1:8</code> 行，选中 <code>9</code> 行冻结，同时冻结上面两个区域，选中 <code>D9</code> 单元格然后冻结。</p>
<h4 id="打印视图与分页预览"><a href="#打印视图与分页预览" class="headerlink" title="打印视图与分页预览"></a>打印视图与分页预览</h4><p>在 Excel 界面的右下角，缩放条的左侧，有三个视图可选，平常都使用的是「普通视图」，其后的「打印视图」和「分页预览」也相当有用。</p>
<p>如果想要添加页眉页脚标题之类的，直接切换到打印视图添加。或者是想要调整列宽在某一页显示全，不用在普通视图调整后再打印预览，直接在打印视图调整。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-print-preview.png" alt=""></p>
<p>分页预览和打印视图类似，不过它不显示具体的页边距和页眉页脚，而是直接选择每一页打印的范围。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-print-preview2.png" alt=""></p>
<h4 id="新建窗口"><a href="#新建窗口" class="headerlink" title="新建窗口"></a>新建窗口</h4><p>当一个工作簿有多个工作表的时候，在工作表之间切换稍微有点麻烦（指鼠标或快捷键），这时可以使用「新建窗口」，为同一个工作簿打开多个窗口，修改在各窗口是同步的，这样使用熟悉的「Meta/Alt-Tab」快捷键就可以直接切换了。</p>
<p>具体使用请点击「视图-窗口-新建窗口」</p>
<h3 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h3><p>有了 Excel 的基本知识，但是数据从哪来？不是所有的数据都是 Excel 可以直接打开的表格形式。大部分数据是以文本（不是文本文件）形式存在的，而 Excel 本身就可以很好的处理它们。</p>
<p>Excel 处理数据的工具，大部分都在「数据」-「获取和转换数据中」</p>
<p>对于文本文件，直接点就好了。</p>
<blockquote>
<p>我感觉有不少情况下有部分人不知道「文件后缀/扩展名」和「文件类型」之间的关系，就是「文件后缀」只是一个名字，用来告诉人或机器应该用什么程序去打开它，但是它的「文件类型」不是通过更改后缀就能转换的，比如一个 .dat 文件可以是文本文件也可以是二进制文件，它真正的文件类型是要看它本身在存储空间中的值的。</p>
<p>更改文件后缀名不过是换了一个打开它的程序，和打开这个程序再把这个文件拖进去是一样的。</p>
</blockquote>
<p>对于网页上的表格，不需要复制到文本再导入，直接使用 Excel 的「自网站」，输入链接等待 Excel 自动识别 HTML 并转换再导入就好。</p>
<p>对于内容是文字的 .pdf 文件，使用 PDF 软件的「导出到电子表格」即可，根本不需要在此时使用 OCR 软件。只有对于内容是图片形式表格的 .pdf 文件，才要使用 OCR。</p>
<h3 id="处理数据"><a href="#处理数据" class="headerlink" title="处理数据"></a>处理数据</h3><h4 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h4><p>用单元格右下角的 Handle 拖动填充的方法不必多说，在「开始」-「编辑」-「填充」里还有更多的填充方式，比如生成等比/等差序列，不需要自己写公式或者先写好几个再拖动填充了。</p>
<h4 id="分列"><a href="#分列" class="headerlink" title="分列"></a>分列</h4><p>分列是很有用的工具，在「数据」-「数据工具」-「分列」。</p>
<p>当一个单元格内的文本具有相似的特征时，可以用分列将其分成两列。相似的特征包括「宽度」或者「内容」，也就是可以按照某个符号或者在某个宽度上分割一列称为多列。</p>
<p>比如网上不大不小的一个用逗号分割的数据，直接用「自网站」没必要，但复制下来又都都是逗号。可以用分列，选择「分割符号」，然后一直确定即可。</p>
<p>分列一次只能识别一个分割符号，如果有复杂的字符串处理需求，请学习「正则表达式」（此博客有一篇「正则表达式入门」），并考虑在支持正则表达式的文本编辑器中操作。</p>
<h4 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h4><p>替换的快捷键是 <code>Ctrl-H</code>，Excel 里替换的特别之处是可以处理单元格格式，但是具体的应用没有特别特殊的地方。</p>
<h4 id="选择性粘贴"><a href="#选择性粘贴" class="headerlink" title="选择性粘贴"></a>选择性粘贴</h4><p>选择性粘贴很强大，但是有部分功能很少有人用，常用的应该包括粘贴为转置、图片、值，以及保留/不保留格式。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-paste.png" alt=""></p>
<p>但是点开下面的「选择性粘贴」，还有其他内容可选，这里提示两个内容，一个是可以直接把粘贴数值和被粘贴区域做四则运算，另一个则是「跳过空单元」，这对于合并多列很有帮助，它即是只在对应单元格粘贴源内容不为空值的单元格。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-paste.gif" alt=""></p>
<h4 id="组合与分类汇总"><a href="#组合与分类汇总" class="headerlink" title="组合与分类汇总"></a>组合与分类汇总</h4><p>Excel 在默认的行的基础上，可以通过组合创建可折叠的索引，日常使用的用处不是很大。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-combination.png" alt=""></p>
<p>同时，它也可以自动对数据进行分类汇总，同时建立组合。这两个选项都在「数据」-「分级显示」</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-subtotal.png" alt=""></p>
<h4 id="合并计算"><a href="#合并计算" class="headerlink" title="合并计算"></a>合并计算</h4><p>合并计算主要应用在有多个类似结构的数据表时，此时通过合并计算可以将所有数据表的信息进行汇总。比如 M20 单元格是由五个单元格的值加起来的。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-consolidate.png" alt=""></p>
<h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p>Excel 除了复制粘贴外，还有一些快捷键比较有用</p>
<ul>
<li>使用 <code>F4</code> 快速切换相对/绝对引用：在公式中输入一个区域的引用后，使用 <code>F4</code> 可在四种引用类型中切换</li>
<li>按下 <code>Shift</code> 后，在单元格/行/列的边缘处，按住鼠标可快速移动选区，不必再复制-粘贴-复制-粘贴</li>
<li>按下 <code>Ctrl</code> 后，拖动选中的区域可快速复制区域</li>
<li>按下 <code>Ctrl</code> 后，使用方向键，会将选中的单元格位置移动到此方向上最后一个非空白的单元格</li>
<li>在单元格边框双击，可以达到和上一条一样的效果</li>
<li>按下 <code>Shift</code> 后，使用鼠标拖动或方向键移动所经过的区域都会被选中</li>
<li>因此搭配 <code>Ctrl</code> 与 <code>Shift</code> 可以快速选中一个区域，不必再滑动鼠标选中</li>
<li><code>Ctrl-1</code> 快速打开「单元格格式」窗口</li>
<li><code>Ctrl+G/F/H</code> 对应「定位」「查找」「替换」</li>
<li><code>F2</code> 可以编辑一个单元格的内容</li>
<li><code>Ctrl+Enter</code> 可以对所有选中的单元格填充相同的值（可搭配定位-空值补零）</li>
</ul>
<h2 id="单元格格式"><a href="#单元格格式" class="headerlink" title="单元格格式"></a>单元格格式</h2><p>单元格格式非常基础，但也重要，但是大部分情况下可能会让人迷惑的是在数字格式处</p>
<h3 id="自定义数字格式"><a href="#自定义数字格式" class="headerlink" title="自定义数字格式"></a>自定义数字格式</h3><p>在更改了数字格式后，可能显示并没有发生变化需要刷新，此时通过「分列」，不设置任何宽度或分隔符，就可以直接刷新格式。</p>
<p>使用「文本」格式时，如果其中存储的被识别为了数字，左上角会有小三角形的提示，不必在意。</p>
<p>如果「常规」格式下的时间转成「文本」后变成数字，可以用记事本或其他先复制，更改单元格格式后重新插入</p>
<h3 id="格式刷"><a href="#格式刷" class="headerlink" title="格式刷"></a>格式刷</h3><p>双击格式刷可以固定选中格式刷，即重复使用，至单击其图表取消选中后结束。</p>
<p>选中一个区域后复制的格式刷可以刷新一个区域的格式，可以搭配 <code>Ctrl+Shift+方向键</code> 的快捷键快速添加格式。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/excel-power/fp_more_than_one.gif" alt=""></p>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="输入公式"><a href="#输入公式" class="headerlink" title="输入公式"></a>输入公式</h3><ol>
<li>可以在单元格内直接输入公式，先输入等号后就可联想输入，使用 <code>Tab</code> 键快速补全</li>
<li>点击「公式」选项卡，找到公式再输入，但不够方便</li>
<li>使用「插入函数」按钮，比较方便</li>
</ol>
<h3 id="常用公式"><a href="#常用公式" class="headerlink" title="常用公式"></a>常用公式</h3><h4 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h4><p>Excel 中的字符串使用双引号，单引号的不是字符串</p>
<p>字符串处理的公式包括 <code>LEFT</code>，<code>RIGHT</code>，<code>MID</code>，<code>FIND</code> 等，其中 <code>LEFT, RIGHT</code> 均有两个参数，即选择的单元格、从左/右开始的字符个数，用于从最左/右提取固定长度的文字；<code>MID</code> 多一个开始的位置（从左）；<code>FIND</code> 用于找到字符串在候选字符串中的起始位置。</p>
<blockquote>
<p>都是处理固定长度的，不定长度的请使用分列或正则表达式</p>
</blockquote>
<p>字符串的连接可以使用 <code>&amp;</code>，<code>CONCAT</code>，<code>TEXTJOIN</code> 等，其中 <code>&amp;</code> 连接其左右的两个表达式，<code>CONCAT</code> 将所有参数按顺序连接，<code>TEXTJOIN</code> 可以设置连接符号，有更多可调整的地方。</p>
<h4 id="逻辑运算与条件"><a href="#逻辑运算与条件" class="headerlink" title="逻辑运算与条件"></a>逻辑运算与条件</h4><p>Excel 中的布尔是 true/false，但判定时 0 也可能被认为是 false，大于 0 的值为 true</p>
<p>包括 <code>IF</code> <code>IFS</code> <code>...IFS</code> <code>AND</code> <code>OR</code> <code>NOT</code> 等，其中 <code>AND</code> <code>OR</code> <code>NOT</code> 用于处理逻辑值的与或非关系。</p>
<p><code>IF</code> 有三个参数，第一个参数的表达式应当返回一个值(布尔)或一个数，若为真，则返回第二个参数表达式的返回值，反之则返回第三个。</p>
<p><code>IFS</code> 可以避免复杂的嵌套，一次处理多个逻辑表达式，共 2n-1 个参数，类似于 <code>IF</code> 若第一个参数为真，则返回第二个表达式的值，反之，则将第三个参数作为表达式继续判断，最后得到结果。</p>
<p><code>...IFS</code> 代表一系列类似的函数，包括 <code>AVERAGEIFS</code>，<code>COUNTIFS</code>，<code>SUMIFS</code> 等，均可以使用多个条件对区域进行统计</p>
<h4 id="数学与统计"><a href="#数学与统计" class="headerlink" title="数学与统计"></a>数学与统计</h4><p><code>product</code> 返回所有参数的积</p>
<p><code>AVERAGE</code> <code>SUM</code> <code>COUNT</code> 就比较常见</p>
<h4 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h4><p><code>LOOKUP</code> <code>VLOOKUP</code> <code>HLOOKUP</code> 用于查找数据，其中「精确查找」会将查询数据在和待查数据一一比较，在有极大量数据时会有可察觉的延时；「模糊查询」则是默认数据已经是排序过的，使用二分法查找，返回匹配的值或最临近匹配值的值。</p>
<p><code>SWITCH</code> 用于待查数据较少时，可以被 <code>LOOKUP</code> 数据替换。</p>
<h3 id="名称与管理器"><a href="#名称与管理器" class="headerlink" title="名称与管理器"></a>名称与管理器</h3><p>Excel 中可以给变量/区域添加名称，从而在定位/公式中直接引用，加快人书写/阅读的效率。</p>
<p>在「公式」-「名称管理器」中，可以管理已有名称或添加新的名称，名称可以存在与工作表或工作簿中。</p>
<p>在公式中使用，只要把填写引用的区域填写为名称即可。</p>
<h3 id="公式审核与计算"><a href="#公式审核与计算" class="headerlink" title="公式审核与计算"></a>公式审核与计算</h3><p>一般情况下，当有数据发生改变时，Excel 会自动重算所有公式，但自动重算在有大量公式时会影响速度，可以通过「公式」-「计算」-「计算选项」设置「手动重算」或「保存时重算」，减轻计算压力，手动重算使用快捷键 <code>F9</code>。</p>
<p>可以使用「公式审核」-「显示公式」使得所有公式显示出来，而不必设置单元格格式。</p>
<p>为了追踪单元格的引用与被引用，可以通过「公式审核」-「追踪从属/引用单元格」查看</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-function-review.png" alt=""></p>
<h3 id="条件格式"><a href="#条件格式" class="headerlink" title="条件格式"></a>条件格式</h3><p>条件格式是非常有用的工具，通过它可以根据数据调整单元格的显示的方式，比如添加颜色条或符号表等等。除了它本身提供的五种条件外，还可以通过公式自定义格式。</p>
<p>使用条件格式需要三个参数：条件、格式、应用区域。这里主要说一下使用自定义公式的条件格式：</p>
<p>使用自定义公式需要一个返回布尔值的公式，条件格式实际上会对应用区域的每一个单元格，分别应用一次输入的公式。而分别应用公式里的引用会随着单元格变化（如果不设置绝对引用而使用相对引用）。</p>
<p>比如这里有很多行数据，我想让所有 K 列值不为空且不是字符串 “C” 的行变成黄色，那需要输入的公式是<br><figure class="highlight vb"><table><tr><td class="code"><pre><span class="line">=<span class="keyword">AND</span>( $K4 &lt;&gt; <span class="string">&quot;C&quot;</span>, $K4 &lt;&gt; <span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><br>其中应用的区域是 <code>$A$4:$K$20</code>。公式里的 <code>AND</code> 很好理解，<code>$K4 &lt;&gt; &quot;C&quot;</code> 就是 K4 不等于 “C”，但是绝对引用是什么意思？因为输入的公式，默认是指应用到选取最左上角的单元格的，那么这个公式默认会被应用到 A4，此时在 A4 判断的是 K4，那接下来到了 B4 单元格，判定的就是 L4 单元格了，所以需要限制住列的变化。</p>
<blockquote>
<p>这里非常建议自己尝试一下，就明白了</p>
</blockquote>
<p>因此，应用条件格式的区域，和公式里引用的区域，不需要有包含关系。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-conditional-formatting.png" alt=""></p>
<p>值得一提的有两点，一是条件格式只有 Excel 可以用，Word 和 PowerPoint 直接插入的表格无法使用条件格式，除非「粘贴为图片」或插入 OLE 对象。二是对于应用了公式条件格式的区域，建议不要对其中的区域进行剪切-粘贴，很可能会导致公式的引用出错。</p>
<p>在「条件格式管理器」里，可以快速看到当前表/工作表/选区的条件格式并对其进行修改。</p>
<h3 id="数组公式"><a href="#数组公式" class="headerlink" title="数组公式"></a>数组公式</h3><p>这里还没搞清楚，先放在这。</p>
<h2 id="超级表与数据透视"><a href="#超级表与数据透视" class="headerlink" title="超级表与数据透视"></a>超级表与数据透视</h2><h3 id="超级表"><a href="#超级表" class="headerlink" title="超级表"></a>超级表</h3><p>超级表是 Excel 很方便的设计，它比直接管理原生的区域要方便一些。</p>
<p>使用 <code>Ctrl+T</code> 可以快速对一个区域创建超级表（也可以简称为表），而后会自动应用一个表格样式同时产生列标题行。</p>
<p>表的方便之处第一点，是当选中表后，标题行会自动出现在索引中，同时可以筛选，此时不需要冻结首行。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-table.png" alt=""></p>
<p>第二点，它可以自动的对整个区域变换格式，不需要手动选择整个表，只需要点在这个区域里即可。</p>
<p>第三点，在使用公式时，可以不再使用引用来表示区域，而是直接用表来表示，比如下面图中，直接使用 <code>表名[区域名]</code> 选择区域</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-table02.png" alt=""></p>
<p>其中区域名这里的 <code>@</code> 表示只使用对应行的值，去掉 <code>@</code> 则表示引用的区域是整个一列：<br><img src="/imgs/Tool/Softwares/M$Office/office-all/04-table03.png" alt=""></p>
<p>具体表的名字、样式以及其它可能有用的工具（切片器之类的）都可以在「设计」里找到（需要先选中表格）。</p>
<p>如果想要把表格转换回区域，不需要复制-删除，直接在设计里的「转换为区域」就好了。</p>
<h3 id="数据透视"><a href="#数据透视" class="headerlink" title="数据透视"></a>数据透视</h3><p>数据透视是 Excel 比较强大的功能，它包括数据透视图与数据透视表，感觉和 Tableau 很像（勿喷，不知道哪一个先出的），使用数据透视可以仅通过鼠标，轻松的完成数据分析与可视化。</p>
<p>只说一点，数据透视表的描述/引用方法是引用其左上角的单元格。</p>
<p>数据透视的基本使用自学即可。</p>
<h4 id="计算字段"><a href="#计算字段" class="headerlink" title="计算字段"></a>计算字段</h4><p>计算字段可以通过公式运算，为数据透视表增加新的字段而不用改动原数据集。在「分析」-「计算」-「字段、项目和集」-「计算字段」中可以添加计算字段。</p>
<p>比如有两年的销售数据，想要展示增长量，不需要在数据源添加一列，而是增加一个计算字段，公式使用 <code>列B - 列A</code> 就好。</p>
<p>需要注意的是，修改和删除新添加的计算字段，需要在「插入计算字段」中选择，然后删除。</p>
<h4 id="切片器"><a href="#切片器" class="headerlink" title="切片器"></a>切片器</h4><p>切片器，类似与可移动的筛选器，通过制定要切片的字段，其中就会有所有的值，和筛选功能基本一致。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-pivot-slicer.png" alt=""></p>
<p>按住 Ctrl 可选中多个值。</p>
<h2 id="数据验证与工作表保护"><a href="#数据验证与工作表保护" class="headerlink" title="数据验证与工作表保护"></a>数据验证与工作表保护</h2><h3 id="数据有效性"><a href="#数据有效性" class="headerlink" title="数据有效性"></a>数据有效性</h3><p>为了确保数据能被正确的输入，可以设置数据有效性，以限制输入的内容。</p>
<p>具体位于「数据」-「数据工具」-「数据验证」</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-validation.png" alt=""></p>
<p>其中「序列」类型具有「提供下拉箭头」选项，允许单元格的值来自于某个区域，即一个序列。但是这里的问题在于如果源区域内容变化，可选项也会变化，因此需要对源区域单独加密。</p>
<h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><p>在「审阅」-「更改」中具有「保护工作表」「保护工作簿」「允许用户编辑区域」等多个选项，需要提示的是，它们的密码是不互通的，同时每个选项保护的范围是不相交的。其中「允许用户编辑区域」设置的“编辑区域”的密码后，还需要设置保护工作表其他区域的密码。</p>
<h2 id="辅助工具"><a href="#辅助工具" class="headerlink" title="辅助工具"></a>辅助工具</h2><p>Excel 可用的插件只推荐这一个</p>
<h3 id="excel2latex"><a href="#excel2latex" class="headerlink" title="excel2latex"></a>excel2latex</h3><p>可以快速把 Excel 表格转换为 TeX 语法形式，同时保留相关的格式，只能说非常好用。</p>
<p><img src="/imgs/Tool/Softwares/M$Office/office-all/04-tools-excel2latex.png" alt=""></p>
<blockquote>
<p>下载好后应该是一个 .xla 文件，拖入 Excel 即可使用。</p>
</blockquote>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>Tools for screen recording:</p>
<p><a href="https://github.com/NickeManarin/ScreenToGif">https://github.com/NickeManarin/ScreenToGif</a></p>
]]></content>
      <categories>
        <category>M$Office</category>
      </categories>
      <tags>
        <tag>Office</tag>
      </tags>
  </entry>
  <entry>
    <title>Office：5-Office 软件的进阶操作与 PDF</title>
    <url>/zh-cn/posts/5041d191-4461-11ec-a782-373b176d0418/</url>
    <content><![CDATA[<p>微软 Office 系列软件使用方法系列第六篇：Office 系列软件的进阶操作与 PDF 文件的使用</p>
<a id="more"></a>
<p>这篇实在有点水，将就着看吧</p>
<h1 id="Office"><a href="#Office" class="headerlink" title="Office"></a>Office</h1><p>每一个单独软件的具体使用在之前基本讲清楚了，这里提到的是共性的部分。</p>
<h2 id="多人协作"><a href="#多人协作" class="headerlink" title="多人协作"></a>多人协作</h2><p>建议使用 OneDrive，然后把文件共享给它人，即可以实时多人协作编辑。</p>
<blockquote>
<p>有人说 wps 在线多人协作好用，但是它支持的 office 的功能本身就不多，更比不上 OneDrive 共享的实时性</p>
</blockquote>
<h2 id="解压一个文件？"><a href="#解压一个文件？" class="headerlink" title="解压一个文件？"></a>解压一个文件？</h2><p>如果使用压缩文件的工具打开一个 Office 的文件，不管是 .doc 还是 .pptx，都会发现它实际上是一个压缩包，文件中的内容按照一定的顺序存储。</p>
<p>因此，如果要快速提取文件中的图片，直接将其解压/作为压缩包打开，找到放置图片资源的文件夹，然后全部复制出来就好了。其他内容同理，只不过可能还需要其他的工具。</p>
<p>需要注意的是 .doc 和 .docx 的组织方式不一样，个人认为 .doc 的要混乱一些。</p>
<h2 id="高级设置"><a href="#高级设置" class="headerlink" title="高级设置"></a>高级设置</h2><p>每一个 Office 软件都有一个「高级」的设置选项卡，可以研究一下都提供了哪些设置。</p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><p>插件很方便，但是不要多装。另外，如果用习惯了插件，别的电脑没装，那还是会稍微有一点难受。</p>
<h2 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h2><p>在之前的内容中一直没有说到「宏」，简单地说它可以保存一组操作序列，并应用到不同的变量上去，同时「应用这一操作序列」的操作还可以被绑定到快捷键上。</p>
<blockquote>
<p>不知道是哪个翻译鬼才把 Macro 翻译成 宏，和 robustness-&gt;鲁棒性, socket-&gt;套接字, default-&gt;缺省, handle-&gt;句柄都是鬼才翻译</p>
</blockquote>
<p>举一个还有点用的例子</p>
<ul>
<li><a href="https://zhidao.baidu.com/question/302023485.html">PowerPoint 删除所有页面同一位置的元素</a></li>
</ul>
<h1 id="PDF"><a href="#PDF" class="headerlink" title="PDF"></a>PDF</h1><p>首先声明，不建议使用盗版软件，这里使用的软件是正版软件。</p>
<h2 id="PDF-的基本知识"><a href="#PDF-的基本知识" class="headerlink" title="PDF 的基本知识"></a>PDF 的基本知识</h2><ol>
<li>PDF 是可编辑的（内容、页面）</li>
<li>要用 PDF 编辑器</li>
<li>PDF 编辑器要钱</li>
<li>网上的 PDF 转换什么的不是很好用</li>
</ol>
<p>目前主流的 PDF 编辑工具有 福昕 PDF 编辑器、Adobe Acrobat Pro</p>
<blockquote>
<p>Acrobat 还是比较贵的，亚马逊学生版 118$，标准版 448$</p>
</blockquote>
<h2 id="编辑内容与页面"><a href="#编辑内容与页面" class="headerlink" title="编辑内容与页面"></a>编辑内容与页面</h2><p>PDF 的内容是可编辑的，文字图片形状都可以，只要使用的软件能提供这个功能。<br><img src="/imgs/Tool/Softwares/M$Office/office-all/05-pdf-edit.png" alt=""></p>
<p>同时，也可以裁剪页面，交换顺序，提取/合并 文件，这些都可以使用软件完成，不需要用什么 PDF 编辑网站。</p>
<h2 id="审阅与批注"><a href="#审阅与批注" class="headerlink" title="审阅与批注"></a>审阅与批注</h2><p>许多人认为 LaTeX 不方便的原因就是不如 Word 批注方便，但是实际上并不是，PDF 有非常完备的批注体系：<br><img src="/imgs/Tool/Softwares/M$Office/office-all/05-pdf-markup.png" alt=""></p>
<p>而且在各个平台都能正常显示，比非要 Office 才能打开的方便的多，对于批注、修订也可以选择「接受/拒绝」，也有作者和时间，从各种意义上说基本替代 Word 的审阅和批注了。</p>
<p>但是重要的事情是，审阅批注文档的人要明白这一点才行，光作者会用没用，如果审阅批注文档的人很重要/又不能在短时间学会新软件，那就去用 Word 吧，只是一个工具而已。</p>
<h2 id="转换为其他格式"><a href="#转换为其他格式" class="headerlink" title="转换为其他格式"></a>转换为其他格式</h2><p>表格形式的 PDF 文件可以转换成电子表格，不用手动复制。</p>
]]></content>
      <categories>
        <category>M$Office</category>
      </categories>
      <tags>
        <tag>Office</tag>
      </tags>
  </entry>
  <entry>
    <title>Using Excel more powerful</title>
    <url>/zh-cn/posts/54909d12-e96e-11eb-9720-69e6dcb77eed/</url>
    <content><![CDATA[<p>A simple tutorial to use excel more powerful.</p>
<p>Please try these tips on your excel when you reading it.</p>
<ul>
<li>Keyboard Shortcuts</li>
<li>Get &amp; Transform Data</li>
<li>Text to Columns</li>
<li>Formulas</li>
<li>Pivot Charts &amp; Tables</li>
<li>Cell Format</li>
<li>Format Painter</li>
<li>Conditional Formatting</li>
<li>Quick Access Toolbar</li>
</ul>
<p>The original title of this post is `Making you excel yourself in Excel’, but it sounds too geek and stupid, so I changed it.</p>
<a id="more"></a>
<h1 id="Keyboard-Shortcuts"><a href="#Keyboard-Shortcuts" class="headerlink" title="Keyboard Shortcuts"></a>Keyboard Shortcuts</h1><p>I prefer using more keyboards rather than mouse. Many actions can be implemented by preset shortcuts(like Ctrl + 1) or by Alt leaded shortcuts. Here are just some common shortcuts.</p>
<ol>
<li><p>Ctrl &amp; Shift + ↑↓←→</p>
<p> Ctrl will move cell cursor to the last non-blank cell(That means if there is a blank cell in a row, ctrl will not move to the end but a cell before the blank)</p>
<p> Shift will select cell will cell cursor moving.</p>
<p> Then combine these two key can select a area quickly without mouse.</p>
</li>
<li><p>Shift</p>
<p> With only Shift, you can move cells/rows/columns without replace original data</p>
<p> <img src="/imgs/Tool/Softwares/M$Office/excel-power/shift_move.gif" alt=""></p>
</li>
<li><p>Ctrl + b/i/u (for bold, italic and underline) or Ctrl + 2/3/4/5 (for bold, italic, underline and strikethrough)</p>
<p> These shortcuts are same in Word, formatting text in selected cell.</p>
</li>
<li><p>Ctrl + 9/0 </p>
<p> Ctrl + 9/0 can hide row or column of the selected cell.</p>
</li>
<li><p>Ctrl + 1</p>
<p> I use this key lot, It open the `Format Cell’ Dialogue, like change the number format or cell format.</p>
</li>
<li><p>Ctrl + t</p>
<p> Create a `Table’(If you don’t know this notion, you can search online or take it as a table in database software).</p>
</li>
<li><p>Alt + = (For quick sum)</p>
<p> If you only select data and leave no blank row/column, this shortcut only calculate rows sum of each columns; if you leave a blank column, it calculate column sum; if both, calculate both.</p>
<p> <img src="/imgs/Tool/Softwares/M$Office/excel-power/quick_sum_1.gif" alt=""></p>
<p> To calculate each parts’ sum, use Ctrl + g shortcut to open ‘Go To’ and choose ‘blank’, then press Alt + =.</p>
<p> <img src="/imgs/Tool/Softwares/M$Office/excel-power/quick_sum_2.gif" alt=""></p>
</li>
<li><p>Ctrl + Enter</p>
<p> Fill each cell in your selection with the value you just input.</p>
<p> I often use it to fill the blank value</p>
<p> <img src="/imgs/Tool/Softwares/M$Office/excel-power/fill_blank.gif" alt=""></p>
</li>
<li><p>Ctrl + Shift + 1/2/3/4/5/6 (for changing number format in selected cells)</p>
</li>
<li><p>Ctrl + Shift + 7 (Add an outside border for entire selected cell)</p>
</li>
<li><p>F4</p>
<p>When not in selecting areas, F4 will repeat the last action, It’s useful to repeat some formatting work.</p>
<p>It has a second usage, pressing it when you are reference some area, it will change your selection into absolute reference.</p>
</li>
</ol>
<h1 id="Get-amp-Transform-Data"><a href="#Get-amp-Transform-Data" class="headerlink" title="Get &amp; Transform Data"></a>Get &amp; Transform Data</h1><p>One useful tool is ‘From Web’, it can analysis webpage and extract tables on that page, then you can import it directly and save ‘copy - paste - adjust format’ process.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/excel-power/get_data_from_web.gif" alt=""></p>
<h1 id="Text-to-Columns"><a href="#Text-to-Columns" class="headerlink" title="Text to Columns"></a>Text to Columns</h1><p>This is an excellent tool, you can use it when you have a group of data organized in some pattern but excel cannot recognize it so it is presented as one column in excel.</p>
<p>‘Text to columns’ provides two options, by width or delimiter, mostly we just change the ‘delimiters’ settings and let others default. It’s kind of like a Janet and John version of regular expression (I’ve wrote a post about it, click here[TODO]).</p>
<p><img src="/imgs/Tool/Softwares/M$Office/excel-power/text_to_columns.gif" alt=""></p>
<h1 id="Formulas"><a href="#Formulas" class="headerlink" title="Formulas"></a>Formulas</h1><p>Excel is famous for its formulas, and I’m not going to tell a detailed usage of one formula, I just put some formula I often use.</p>
<ol>
<li><p>VLOOKUP(lookup_value, table_array, col_index_num, range_lookup)</p>
<p> This function is used to search each value in table A as the key, and the key-value pair stored in table B. Just make sure the table_array is absolute referenced.</p>
</li>
<li><p>LEFT, RIGHT, MIDDLE</p>
<p> These function are used to manipulate string value, like the slice operator in the array.</p>
</li>
<li><p>&amp;</p>
<p> &amp; is not a function but it can join two value into one string.</p>
</li>
</ol>
<h1 id="Table-Pivot-Charts-amp-Tables"><a href="#Table-Pivot-Charts-amp-Tables" class="headerlink" title="Table, Pivot Charts &amp; Tables"></a>Table, Pivot Charts &amp; Tables</h1><h2 id="Table"><a href="#Table" class="headerlink" title="Table"></a>Table</h2><p>In excel, a file endwith ‘.xls’ or ‘.xlsx’ are called Books, a tab named sheet are called tab, thus there will be a smaller notion called table as table in database.</p>
<p>When you use filter, if there is a blank row, then if you don’t select all data manually, then the default filter will ignore data after blank row, same as table.</p>
<p>After creating a table, many useful action can be done. I’ll only introduce slicer tool and leave others. This slicer can create sort of dynamic chart and make your table better.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/excel-power/table.gif" alt=""></p>
<h2 id="Pivot-Charts-amp-Tables"><a href="#Pivot-Charts-amp-Tables" class="headerlink" title="Pivot Charts &amp; Tables"></a>Pivot Charts &amp; Tables</h2><p>Pivot table and pivot charts can be see as one thing, They can also make your table dynamic. It’s a great tool to explore the data.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/excel-power/pivot.gif" alt=""></p>
<h1 id="Cell-Format"><a href="#Cell-Format" class="headerlink" title="Cell Format"></a>Cell Format</h1><p>Well, cell format is a very basic thing in excel, I’ll only show how I create a table with two labels in one cell.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/excel-power/two_label.gif" alt=""></p>
<h1 id="Format-Painter"><a href="#Format-Painter" class="headerlink" title="Format Painter"></a>Format Painter</h1><p>Format Painter is very powerful, you just need to know how to use it.</p>
<ol>
<li><p>Use(lock) it more than one time</p>
<p> Very simple, double click it, then the painter will be selected temoparily, click it to close it after you done you work with it.</p>
</li>
<li><p>Use it with keyboard</p>
<p> Also simple, click it, and press your keys. I always use it to clear all cell formats in one sheet, by select a blank cell(which has no format) and click format painter, and Ctrl+A, then format whole sheet.</p>
<p> <img src="/imgs/Tool/Softwares/M$Office/excel-power/fp_unformat_sheet.gif" alt=""></p>
</li>
<li><p>Use multiple cell format</p>
<p> You can paste more than one cell format to more than one cell, like this.</p>
<p> <img src="/imgs/Tool/Softwares/M$Office/excel-power/fp_more_than_one.gif" alt=""></p>
</li>
<li><p>Use it to make cell like merged but work well with filter.</p>
<p> Merging cells can make a lot of inconvenience and not make table more beautiful, but painter can paste a ‘merged’ format to make it look like this.</p>
<p> <img src="/imgs/Tool/Softwares/M$Office/excel-power/fp_merged_cells.gif" alt=""></p>
</li>
</ol>
<h1 id="Conditional-Formatting"><a href="#Conditional-Formatting" class="headerlink" title="Conditional Formatting"></a>Conditional Formatting</h1><p>Conditional formatting is another brilliant part of excel. This post will dabble on it, more detailed usage can be easily found online.</p>
<p>Core ideas of conditional formatting is apply which FORMAT on which AREAS with which filter RULES.</p>
<h2 id="Preset-rules"><a href="#Preset-rules" class="headerlink" title="Preset rules"></a>Preset rules</h2><p>They are easy to understand, just try them.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/excel-power/cf_preset.gif" alt=""></p>
<h2 id="Define-your-own-rules"><a href="#Define-your-own-rules" class="headerlink" title="Define your own rules"></a>Define your own rules</h2><p>A very simple example, I want highligh column ‘Item’ if its region is ‘Central’ with red color and yellow if it’s ‘East’ region.</p>
<p>There are some hidden rules that if you define a rule to A cell, then you select an area to apply it, the value in the rule(if not absolute) will follow the change of outside cells.</p>
<p>So it’s simple, I need to determine whether this cell have ‘Central’ or ‘East’, use the ‘FIND’ function. <code>=FIND(&quot;Central&quot;,B2)&gt;0</code></p>
<p>Then apply this rule to <code>$D$2:$D$44</code>, and repeat with ‘Yellow’ and ‘East’.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/excel-power/cf_custom.gif" alt=""></p>
<p>One more tips, if your rules don’t work, try inspect the value of it, cause if you copy or cut some cells, the applied area will be change with it. A good solution is use the <code>Table</code>, then you don’t need to worry this.</p>
<h1 id="Quick-Access-Toolbar"><a href="#Quick-Access-Toolbar" class="headerlink" title="Quick Access Toolbar"></a>Quick Access Toolbar</h1><p>Like I did in Powerpoint, put some useful option in the QAT, save you from finding these buttons.</p>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>Tools for screen recording:</p>
<p><a href="https://github.com/NickeManarin/ScreenToGif">https://github.com/NickeManarin/ScreenToGif</a></p>
]]></content>
      <categories>
        <category>M$Office</category>
      </categories>
      <tags>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title>Making PowerPoint more powerful</title>
    <url>/zh-cn/posts/ace36491-cf7c-11eb-b771-47c436b9f4e4/</url>
    <content><![CDATA[<p>A simple tutorial to make powerpoint more powerful, not `fancy’ powerful, but practical powerful.</p>
<ul>
<li>Usage of PowerPoint</li>
<li>Basic setting</li>
<li>Plugins</li>
<li>Default themes</li>
<li>Quick Access Toolbar </li>
<li>Slide Master</li>
</ul>
<a id="more"></a>
<h1 id="Usage-of-PowerPoint"><a href="#Usage-of-PowerPoint" class="headerlink" title="Usage of PowerPoint"></a>Usage of PowerPoint</h1><p>I think, there are much more usage of PowerPoint than using it as a software to make presentation slides.</p>
<p>First, as an upgraded drawing board, similar product as Visio or drawing.io. As far as I know, installing Visio is a notorious thing as installing Visual Studio, installing SQL Server, one wrong step may cause an Office breaking down, so just give up visio, everything worked on Visio can also be done by PowerPoint.</p>
<p>Second, as an upgraded M$ Word or downgraded Adobe PhotoShop, Mostly when making your Curriculum Vitae or a presentation board. </p>
<p>Third, as a screen recording tool. It’s useful, but not better than the tool in Xbox Game Bar, better than noting I think. </p>
<h1 id="Basic-setting"><a href="#Basic-setting" class="headerlink" title="Basic setting"></a>Basic setting</h1><p>This is the apperance after making the following settings.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/ppt-power/general-view.png" alt=""></p>
<p>I recommend using the legitimate version of M$Office, and higher than 2019.</p>
<p>First of all, click the <code>Options</code> to make some basic configuration.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/ppt-power/basicsetting-01.png" alt=""></p>
<p>You can change the name and initials of you office software, and I think uncheck the <code>show the start screen</code> box could save you some time, you don’t need to select <code>Blank Presentation</code> or <code>Default Theme</code> when it starts.</p>
<h1 id="Default-themes"><a href="#Default-themes" class="headerlink" title="Default themes"></a>Default themes</h1><p>I think the default theme of PowerPoint contains lots of useless placeholders, the color and weight of lines, arrows are ugly. Thus, making default theme more simple is the first thing you could do.</p>
<ol>
<li>Delete every useless placeholder in the master layout.</li>
<li>Draw a shape and a line, change the color, weight and other attributes into whatever you like, then right click and <code>set as default</code>.</li>
<li>Save these theme (recommond you to save it in <code>Username\AppData\Roaming\Microsoft\Templates\Document Theme</code>).<br><img src="/imgs/Tool/Softwares/M$Office/ppt-power/theme-save.png" alt=""></li>
<li>Set it as default theme.<br><img src="/imgs/Tool/Softwares/M$Office/ppt-power/theme-set-default.png" alt=""></li>
</ol>
<h1 id="Plugins"><a href="#Plugins" class="headerlink" title="Plugins"></a>Plugins</h1><p>I recommend three plugins:</p>
<ul>
<li>Onekey Tools</li>
<li>小顽简报</li>
<li>iSlide</li>
</ul>
<h2 id="Onekey-Tools-10"><a href="#Onekey-Tools-10" class="headerlink" title="Onekey Tools 10"></a>Onekey Tools 10</h2><p><img src="/imgs/Tool/Softwares/M$Office/ppt-power/plugin-onekey.png" alt=""></p>
<h2 id="小顽简报"><a href="#小顽简报" class="headerlink" title="小顽简报"></a>小顽简报</h2><p><img src="/imgs/Tool/Softwares/M$Office/ppt-power/plugin-xiaowan.png" alt=""></p>
<h2 id="iSlide"><a href="#iSlide" class="headerlink" title="iSlide"></a>iSlide</h2><h3 id="Design-Tool"><a href="#Design-Tool" class="headerlink" title="Design-Tool"></a>Design-Tool</h3><ol>
<li>Basic setting</li>
</ol>
<p>It provide a panel on the right(default), integrate many useful tools.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/ppt-power/designtool-basic.png" alt=""></p>
<ol>
<li>Smart select</li>
</ol>
<p>To select objects in many ways, like same color, size or something else.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/ppt-power/designtool-smartselect.png" alt=""></p>
<ol>
<li>Shrink text [Textbox]</li>
</ol>
<p>To shrink textbox, make it fit text.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/ppt-power/desingtool-shrink.png" alt=""></p>
<h3 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h3><ol>
<li><p>matrix and circular layout<br><img src="/imgs/Tool/Softwares/M$Office/ppt-power/plugin-matrix.gif" alt=""><br><img src="/imgs/Tool/Softwares/M$Office/ppt-power/plugin-circular.gif" alt=""></p>
</li>
<li><p>tween animation<br><img src="/imgs/Tool/Softwares/M$Office/ppt-power/plugin-tween.gif" alt=""></p>
</li>
</ol>
<h1 id="Quick-Access-Toolbar"><a href="#Quick-Access-Toolbar" class="headerlink" title="Quick Access Toolbar"></a>Quick Access Toolbar</h1><p>I think quick access toolbar is very useful, could reduce actions.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/ppt-power/quickaccessbar.png" alt=""></p>
<h1 id="Slide-Master"><a href="#Slide-Master" class="headerlink" title="Slide Master"></a>Slide Master</h1><h2 id="Switch-to-master-layout"><a href="#Switch-to-master-layout" class="headerlink" title="Switch to master layout"></a>Switch to master layout</h2><p>Press <code>shift</code> and click <code>normal</code> can switch to master. </p>
<p><img src="/imgs/Tool/Softwares/M$Office/ppt-power/master-quick.png" alt=""></p>
<h2 id="Guidelines"><a href="#Guidelines" class="headerlink" title="Guidelines"></a>Guidelines</h2><p>There are two types of guidelines, yellow lines set in master layout, you can use it but cannot move it in normal layout.</p>
<p>Usually used in templates.</p>
<p><img src="/imgs/Tool/Softwares/M$Office/ppt-power/master-guideline.png" alt=""></p>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>Tools for screen recording:</p>
<p><a href="https://github.com/NickeManarin/ScreenToGif">https://github.com/NickeManarin/ScreenToGif</a></p>
]]></content>
      <categories>
        <category>M$Office</category>
      </categories>
      <tags>
        <tag>PowerPoint</tag>
      </tags>
  </entry>
</search>
